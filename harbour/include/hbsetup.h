/*
 * $Id$
 *
 * Harbour compiler and runtime configuration file
 */

#ifndef HB_SETUP_H_
#define HB_SETUP_H_

/* ***********************************************************************
 * This symbol defines if Harbour is compiled using C compiler
 * that support strict ANSI C only
 *
 * The only non ANSI C feature that we are using is an ability
 * to call functions before the 'main' module is called.
 * This trick is used to automatically join all symbol tables defined
 * in run-time support modules and in user defined modules.
 *   If strict ANSI C compability is required then all symbol tables
 * have to be joined manually by calling special function named
 * <module_name>__InitSymbols
 * (for example for myfirst.prg it will be: 'MYFIRST__InitSymbols'
 * The generation of this function is performed by the macro called
 * HB_CALL_ON_STARTUP that is defined in 'init.h'
 *
 * By default we are using extensions to ANSI C (symbol is not defined)
*/
/*#define HARBOUR_STRICT_ANSI_C */

/* ***********************************************************************
 * The name of starting procedure
 * Note: You have to define it in case when Harbour cannot find the proper
 * starting procedure (due to incorrect order of static data initialization)
 *
 * The list of compilers that require it:
 * - Watcom C/C++ 10.0
 * - GCC on Linux
 *
 * By default we are using automatic lookup (symbol not defined)
*/
#if defined(__WATCOMC__) || defined(__GNUC__)
  #if !defined(__DJGPP__)
    #define HARBOUR_START_PROCEDURE "MAIN"
  #endif
#endif

/* ***********************************************************************
 * This symbol defines which national language module should be included
 * in the Harbour run time library. See source/rtl/msgxxx for all allowed
 * values for <nl> in this manifest constant.
 *
 * By default it is disabled (symbol is not defined), which selects UK
*/
/*#define HARBOUR_LANGUAGE_<nl>*/

/* ***********************************************************************
 * This symbol defines if we want an ability to create and link OBJ files
 * generated by Harbour compiler
 *
 * By default it is disabled (symbol is not defined)
*/
/*#define HARBOUR_OBJ_GENERATION*/

/* ***********************************************************************
 * This symbol defines if we want to use strict Clipper compatibility
 *
 * By default it is disabled (symbol is not defined)
*/
/*#define HARBOUR_STRICT_CLIPPER_COMPATIBILITY*/

/* ***********************************************************************
 * This symbol defines if we want to use the GT API
 *
 * By default it is disabled (symbol is not defined)
*/
/*#define HARBOUR_USE_GTAPI*/

/* ***********************************************************************
 * Operating system specific definitions
 */
#ifdef __GNUC__
  /* The GNU C compiler is used */
  #ifdef __DJGPP__
    /* The DJGPP port of GNU C is used - for DOS platform */
    #define OS_PATH_LIST_SEPARATOR   ';'
    #define OS_PATH_DELIMITER '\\'
    #define OS_DOS_COMPATIBLE
  #else
    #define OS_PATH_LIST_SEPARATOR   ':'
    #define OS_PATH_DELIMITER '/'
    #define OS_UNIX_COMPATIBLE
  #endif
#else
  /* we are assuming here the DOS compatible OS */
  #define OS_PATH_LIST_SEPARATOR    ';'
  #define OS_PATH_DELIMITER '\\'
  #define OS_DOS_COMPATIBLE
#endif

#endif /* HB_SETUP_H_ */
