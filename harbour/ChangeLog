2000-08-02 14:45 UTC-0400 David G. Holm <dholm@jsd-llc.com>

   * config/c.cf
     ! Restored to version 1.9, because 1.10 has the same
       content, but has bad line endings and an EOF char.

2000-08-02 11:30 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * hb_slex.bc
   * makefile.bc
     + Added: -Phb_comp -C to Flex (macro.l) as per GNU make.
     + Added: -phb_comp to Bison (macro.y) as per GNU make.

     /* We might need same change in other make files (VC etc.) */
     /* BTW, Do we have SimpLex support in those other make files? */

   * source/macro/macro.l
   * source/macro/macro.y
     - Removed: #define yylex hb_complex

   * source/macro/macroslx.c
     - Removed un-needed comment.

   * source/pp/ppcore.c
     ! Fixed unintended side effect of UPPER-CASING #include file names.

2000-08-02 09:40 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/macro/macro.l
   * source/macro/macro.y
     + Added: #define yylex hb_complex

   * source/pp/ppcore.c
     + Added check for the file path when checking self reference of #include.
     + Added logic to ignore case when checing self reference of #include.

2000-08-02 15:54 UTC+0300 Chen Kedem <niki@actcom.co.il>

   * doc/simplex.txt
     + add missing id tag
     * re-format for 76 characters per line

   * doc/en/garbage.txt
   * doc/en/idle.txt
     * change // in header to /* */

20000802-12:58 GMT+2 Maurilio Longo <maurilio.longo@libero.it>
   * source/compiler/simplex.c
     + added missing id tag
   * source/macro/macroslx.c
     + added #define yylex hb_complex to make it compile under OS/2 GCC. PLEASE NOTE that I DON'T KNOW
       why it works and why it is required here but not in hbslex.c. hbtest has one failure less than compiled
       with flex so I shouldn't be creating problems with this change.
   * source/macro/Makefile
     * changed while trying to make macroslx.c works.
   * config/c.cf
     * changed while trying to make macroslx.c works.

2000-08-01 20:15 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * include/hberrors.h
     + Added: #define HB_PP_ERR_INCLUDE_SELF                  17

   * source/pp/ppcore.c
     + Added Error: "Can\'t #include self \'%s\'"
     + Added logic to detect self referncing #include directive.

2000-08-02 03:31 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * source/rtl/dateshb.c
   * source/rtl/datesx.c
     ! Fixed HB_SToD() and SToD() to not cause CodeGuard faults on bad
       parameters. Define HB_FAST_STOD macro to get the previous faster
       versions.

   * makefile.bc
     * Small formatting.

2000-08-02 03:14 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * source/common/hbver.c
     + Better, generic detection for bits.

2000-08-01-21:20 GMT -3 Luiz Rafael Culik <culik@sl.conex.net>
*contrib/hbzlib/zipfile2.c
    %some enhacements and fixed a bug inside hb___GetFilesNamesFromZip
*contrib/hbzlib/zipfile.c
 contrib/hbzlib/zlibapi1.c
    *Fixed a Bug reported by Patrick Mast
-doc/idle.txt
+doc/en/idle.txt
    *Moved to the en/ directory
    *Description of IDLE stated became a topic also
*doc/genhtm.rsp
   +en/idle.txt
   -en/hb*.txt Removed all api entries file names
*doc/en/garbage.txt
   *small formating
*utils/hbdoc/genng.prg
   *Fixed an small bug
*makefile.bc
 hb_slex.bc
  + .autodepend macro added

20000801-21:55 GMT+2 Maurilio Longo <maurilio.longo@libero.it>
   * config/os2/global.cf
     ! fixed removing of nested subdir (HB_ARCHITECTURE/HB_COMPILER) that under OS/2 you need to
       remove from the bottom up and not a single DEL command
   * source/compiler/cmdcheck.c
     ! removed GCC warning since isdigit() expects an int but was called with a char

2000-08-01 12:10 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/cmdcheck.c
     + Added support for "new style" switches specs, for command line arguments.

     /* Note: */ I did *not* implement same for the Environment Variables parsing.

2000-08-01 21:10 UTC+0100 Victor Szakats <info@szelvesz.hu>

   + doc/cmdline.txt
     + Command line handling spec added.

2000-08-01 21:03 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * source/common/hbver.c
     + Added CPP info to the build info page.
     + Added 16bit vs 32bit to the Borland compiler info.

20000801-19:28 GMT+2 Maurilio Longo <maurilio.longo@libero.it>
   * source/common/hbver.c
     ! fixed sprintf() warnings for OS/2 and removed revision number since it is always 0.

2000-08-01 18:20 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *include/hbapi.h
        * modified HB_MACRO structure

    *source/macro/macro.l
        * optimized support for array index

    *source/compiler/harbour.c
    *source/compiler/harbour.y
        *fixed some unreleased memory blocks reported by CodeGuard

    *source/compiler/hbident.c
        *changed size of hash table to 509

    *source/macro/Makefile
        * removed CR characters

NOTE:
  All sources HAVE TO be rebuild !!!

2000-07-31 20:25 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/cmdcheck.c
     + Added support for multiple switches, without seperator, like: -n-w

2000-07-31 18:20 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/harbour.slx
     - Removed few redundant rules.
     + Added logic to check for orphan LOOP, EXIT, or NEXT, and produce standard errors.
     + Added check to check for &', &", or &[, and produce standard error.

   * source/macro/macro.slx
     + Added logic to check for &', &", or &[, and produce standard error.
     * Minor formating.

2000-08-01 06:30 UTC+0700 Jose Lalin <dezac@corevia.com>
   * source/compiler/hbgenerr.c
     Bug fixes as reported by Andi Jahja

2000-07-31 09:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/simplex.c
   * source/macro/macro.slx
     ! Corrected compiler warnings

   * tests/testwarn.prg
   * utils/hbdoc/ft_funcs.prg
     * Commented AS USUAL until votes results tabulated

2000-07-31 11:30 UTC-0400 David G. Holm <dholm@jsd-llc.com>

   * source/rtl/gtsln/gtsln.c
     * Changes submitted by Marek Paliwoda <paliwoda@inetia.pl>

2000-07-31 14:32 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * utils/hbdoc/ft_funcs.prg
     ! Fixed to match changed strong typing syntax.

2000-07-31 11:23 CET Patrick Mast <eMail@PatrickMast.com>
   * contrib/hbzlib/doc/zip.txt
     * Changes and corrections.

20000731-09:18 GMT+2 Maurilio Longo <maurilio.longo@libero.it>
   * source/macro/macroslx.c
     + added missing id tag

20000731-09:00 GMT+2 Maurilio Longo <maurilio.longo@libero.it>
   * source/macro/Makefile
     + added macroslx.c compilation instead of flex lexer if HB_LEX is set to SIMPLEX
   * source/macro/macroslx.c
     + added relative path in include commands to let gcc find correct files

2000-07-30 22:50 UTC+0800 Ron Pinkas <ron@profit-master.com>
  * source/macro/macro.slx
    ! Corrected unreleased memory block.

  * source/compiler/harbour.slx
    ! Corrected unreleased memory block.

2000-07-30 21:15 UTC+0800 Ron Pinkas <ron@profit-master.com>
  * source/compiler/harbour.slx
    - Removed unneeded comment.

  * source/compiler/simplex.c
    * Changed void yy_bytes_buffer() to void *.

2000-07-31 00:10 GMT -3 Luiz Rafael Culik <culik@sl.conex.net>

*contrib/hbzlib/zipfile2.c
    *some Enhacementes
+contrib/hbzlib/zipfile.c
+contrib/hbzlic/zlibapi1.c
    *Re added as diferent name
    *hb___CheckFile() bug fixed
*contrib/hbzlib/makefile.bc
    *updated to reflect the new files names


2000-07-30 17:30 UTC+0800 Ron Pinkas <ron@profit-master.com>
  + source/macro/macro.slx
  + source/macro/macroslx.c
    + Added SimpLex based macro lexer

  * hb_slex.bc
    * Modified to use SimpLex based macro support.
    /* Could some one please add same to GNU make system? */

  * source/compiler/simplex.c
    * Added void yy_bytes_buffer()

2000-07-30 12:45 UTC+0800 Ron Pinkas <ron@profit-master.com>
  * source/compiler/harbour.slx
    - Removed AS CHARACTER, AS BOOLEAN, AS OBJ, AS NUM
      /* Left AS VARIANT and AS USUAL until vote results tabulated. */

  * utils/hbdoc/ft_funcs.prg
    * Changed AS CHAR -> AS STRING and AS NUM to AS NUMERIC

  * source/compiler/simplex.c
    * Changed to use YY_DECL macro in declaration of yylex()

2000-07-30 14:32 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * source/compiler/harbour.l
   * source/compiler/hbpcode.c
   * tests/testdecl.prg
   * tests/testwarn.prg
   * contrib/hbclip/hbclip.ch
     * Cleanup up the Strong Typing type keywords to more-or-less match
       the VO syntax. Note that there's two TODOs according to this.

       These are the valid keywords now:

       AS ARRAY
       AS CODEBLOCK
       AS STRING
       AS CLASS
       AS DATE
       AS LOGICAL
       AS NUMERIC
       AS OBJECT
       AS USUAL

   * source/rtl/scroll.c
     + Two comments added to make optimized code look more clear.

2000-07-29 08:50 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * hb_slex.bc
     * Synchronized with makefile.bc

2000-07-29 17:34 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * makefile.vc
   * makefile.bc
   * source/lang/Makefile
     + Polish Lang modules added.

2000-07-29 17:25 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * utils/hbtest/*
     + Added check for :Arg variable of returned error objects.
       Note that currently Harbour doesn't support the :Arg var, so many
       tests will fail which looked OK until now.

   * source/vm/itemapi.c
     % Small optimizations.

   * source/vm/arrays.c
     - hb_arrayGetBool() removed, since it was the same as hb_arrayGetL(), but
       had no prototype in hbapi.h.
     % Small optimizations.

   * source/rtl/gtapi.c
     * TRACE call fix in hb_gtSetPos()
     ! NOTE made more clear.
     * One buffer size changed to 512 from 500, to be the power of 2.

2000-07-29 07:40 UTC+0800 Ron Pinkas <ron@profit-master.com>
  * source/compiler/harbour.slx
    + Added 2 rules to support DECLARE MACROVAR and DECLARE MACRO TEXT

  * tests/testdecl.prg
    ! Fixed to allow it to be run without RT Error

2000-07-29 15:55 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *source/compiler/harbour.l
        * fixed to properly support 'DECLARE var' statement

    *tests/Makefile
    *tests/testdecl.prg
        * added testdecl.prg to Makefile
        * added some more real life examples :)

2000-07-29 09:45 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *include/hbcomp.h
        * removed declaration of hb_comp_iCompiled and hb_comp_EOL

    *source/compiler/harbour.c
    *source/compiler/harbour.l
    *source/compiler/harbour.y
    *source/compiler/hbgenerr.c
        * removed hb_comp_iCompiled and hb_comp_EOL
        * fixed generation of runtime line numbers to meets numbers
        maintained by the preprocessor

2000-07-28 15:30 UTC-0400 David G. Holm <dholm@jsd-llc.com>

   * source/rtl/gtstd/gtstd.c
     * Restored to version 1.15 with the extra tracing information
       from version 1.18.

   + source/rtl/gtcgi
   + source/rtl/gtcgi/gtcgi.c
   + source/rtl/gtcgi/Makefile
   + source/rtl/mousecgi.c
     + Formerly gtstd.c, version 1.17, and support files.

2000-07-28 18:40 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * hb_slex.bc
     * Synchronized with makefile.bc

2000-07-29 03:28 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * include/hbcomp.h
   * source/compiler/hbusage.c
   * source/compiler/harbour.c
   * source/compiler/cmdcheck.c
     - Removed the command line option to disable jump optimizing. The reason
       is that this option has an internal debugging purpose, which doesn't
       cause any practical change to the generated code, at least from a
       Harbour users POV. If disabling of this pcode generation phase is
       needed by anyone, we could add a compile-time disabling macro for it.
       The only reason I can think of disabling this as a user is compiling
       speed, which may increase by using it, if this is important I think
       we should rather add a pcode optimization level option, which would be
       more generic solution for this.

2000-07-29 03:16 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * source/rtl/gt*/gt*.c
     ! Extended TRACE call for hb_gtSetPos() with iMethod.

2000-07-29 03:08 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * source/rtl/oldclear.c
   * source/rtl/setpos.c
   * source/rtl/console.c
   * source/rtl/gtapi.c
     % Calls to hb_gtSetPosContext(..., _BEFORE) changed to a faster call to
       hb_gtSetPos().

2000-07-29 03:00 UTC+0500 April White <awhite@user.rose.com>

   * doc/en
     * remove UPPER case files, commited, added lower case files, commited

2000-07-29 02:58 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * source/lang/msgko.c
     ! Some fixes (KR -> KO).

   * source/rdd/dbfntx/dbfntx1.c
   * source/rtl/dircmd.prg
   * source/rtl/setkey.c
     * Minor formatting.

   * source/rtl/gtapi.c
     % hb_gtSetPos() now duplicates the code of hb_gtSetPosContext(), instead
       of calling it, to execute faster.

   * source/rtl/console.c
     - Removed TOFIX from EJECT.

   * include/hbvm.h
     - Removed double declaration for hb_vmQuit()

   * include/hbclass.ch
     * The class syntax disabler macros renamed.

   - tests/teststru.prg
     - Removed.

   * include/hbpp.h
   * source/pp/ppcore.c
     + added prototype for ParsePragma
     ! Some prototypes moved from ppcore to hbpp.h, to keep the externs in
       the headers.
   * source/pp/ppcore.c
     - removed all pragma stuff
   * source/pp/pragma.c
     + new file with all the pragmas related stuff
   * source/pp/Makefile
   * makefile.bc
   * makefile.vc
     Thanks to Jose Lalin.

2000-07-28 14:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/harbour.slx
     + Added logic to account for HB_SYMBOL_NAME_LEN
     + Added 2 rules to support DECLARE SomeVar as in PRIVATE SomeVar as oppose to Strong Type DECLARE SomeClass SomeVar ...

   + tests/testdecl.prg
     + Added test program to utilize the DECLARE in its different contexts.

2000-07-28 15:00 UTC-0400 David G. Holm <dholm@jsd-llc.com>

   * include/hbapigt.h
   * source/rtl/gtapi.c
     * Changed hb_gtSetPos() to hb_gtSetPosContext().
     * Restored hb_gtSetPos() with only two parameters
       for Clipper GT API compatibility (what it does is
       call hb_gtSetPosContext() with the third parameter
       set to HB_GT_SET_POS_BEFORE, which still calls the
       hb_gt_SetPos() function, so that the low-level
       drivers didn't need to be changed again).

   * source/rtl/console.c
   * source/rtl/gtapi.c
   * source/rtl/oldclear.c
   * source/rtl/setpos.c
   * source/rtl/setposbs.c
   * source/rtl/xsavescr.c
     * All calls to hb_gtSetPos() changed to hb_gtSetPosContext().

   * source/rtl/gtwin/gtwin.c
     ! Corrected call to hb_gtSetPos() to call hb_gt_SetPos().

2000-07-28 18:15 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *source/compiler/harbour.l
        * changed handling of array indexes - to code is now simpler,
        smaller and even more faster :)

    *source/rtl/gtsln/gtsln.c
        * fixed error in hb_gtSetPos call

    *source/rtl/gtstd/gtstd.c
        * fixed unused wariable warning

    *source/vm/classes.c
        * fixed unused variable and unused function warnings
        (reported with GCC)


2000-07-28 06:30 UTC+0800 Ron Pinkas <ron@profit-master.com>
   + doc/simplex.txt
     + Added 1st draft of SimpLex documentation.

   * source/compiler/simplex.c
     + Added overidable macro STREAM_EXCEPTION()

   * source/compiler/harbour.l
     * Modified to return every \n to correct line numbers reporting.
       /* Note: removed note about . after \n, I beleive it was needed to avoid conflict with $ which is no longer used,
          and should be avoided, due to few other side effects. */

   source/compiler/harbour.slx
     * Standadized un-terminated strings messages.

2000-07-28 00:18 UTC+0500 April White <awhite@user.rose.com>

   * include/hbapi.h
     * fixed comment for hb_xgrab() declaration (was 'exists' now 'exits')

   * doc/en
     + hbapi.txt
     + hbapierr.txt
     + hbapifs.txt
     + hbapigt.txt
     + hbapiitm.txt
     + hbapilng.txt
     + hbapirdd.txt
     + hbdate.txt
     + hbmacro.txt
     + hbset.txt
     + hbvm.txt
     + hbcompatability.txt

   * doc/genhtm.rsp
     + entries for above

2000-07-27 18:30 UTC-0400 David G. Holm <dholm@jsd-llc.com>

   * source/rtl/gtstd/gtstd.c
     * This has become the standard terminal library for CGI programs.
     * The MAXROW() and MAXCOL() values are both 32767.
     * The row and column positions are maintained independently from
       the actual device position.
     * If the device scrolls earlier than the GTSTD driver, this will
       not be reflected in the GTSTD driver cursor position.
     * The column position is maintained if all output is in left to
       right order, but will get messed up for any reverse position.
     * The row position is maintained if all output is in left to
       right and top to bottom order, but the device will only be
       scrolled by one line, regardless of row position change.
     * All console output goes to stdout and positioning works
       within the above limitations.
     * The various BOX() functions work to a limited extent (the row
       position is ignored, but the column position is honored).
     * The on-screen cursor is only set when the cursor position is
       being set before text has been displayed, because it is not
       possible to set the device cursor without changing it.

   * source/rtl/gtapi.c
   * source/rtl/gt*/gt*.c
     * The hb_gtSetPos() and hb_gt_SetPos functions now takes a third
       parameter that tells if the cursor position is changing before
       or after text was displayed. This feature is required by the
       GTSTD driver, because it can't set the device position without
       actually changing it.

2000-07-28 00:10 UTC+0200 JfL <jfl@mafact.com> & RaC <Rac@mafact.com>
   * source/rtl/tclass.prg
     * Some minor modifs I forget to identify before

2000-07-28 00:05 UTC+0200 JfL <jfl@mafact.com> & RaC <Rac@mafact.com>
   * source/vm/classes.c
     * No more internal message :Class
   * include\HBCLASS.CH
     +added two define to allow the use of :Class :Class:xx
     +added four define active by default
      HB_FWOCLASS
      HB_CSYCLASS
      HB_VOCLASS
      HB_TOPCLASS
      If you do not do anything, the OO engine will work as yesterday
      You can define One or more of those 'FLAG' before HBCLASS.CH
      within your program to restrict to one or two syntax.
      ie:  Defining HB_FWOCLASS before HBCLASS.CH will solve Bryan problem
      as :Class and :Class: wil not exist anymore. (But also no VAR, only DATA)
      !!! This is work in progress !!! It must be improved, I know !
   * source/rtl/tobject.prg
     * Some minor modifs and try
   * source/rtl/objfunc.prg
     * Some minor adjustement to allow adding DATAs and Methods dynamically
      ( work now on some of my Classy program :-))) )

2000-07-27 19:50 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *include/hbexpra.c
    *source/compiler/expropta.c
        *fixed GPF/core dump after some syntax errors

2000-07-27 03:50 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/harbour.slx
     * Removed rule for ignoring empty lines, to fix incorrect line numbers in warnigs and errors.

2000-07-27 01:45 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/harbour.c
     ! Corrected pVar->iDeclLine line number

   * source/compiler/hbgenerr.c
     ! Corrcted intermitent GPF when hb_compGenWarning() was called with NULL hb_comp_files.pLast

2000-07-27 10:15 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *include/error.ch
    *include/hbapilng.h
        *added internal error HB_MEMOVERFLOW
        *adjusted internal data for Lang API

    *source/lang/msg_tpl.c
    *source/lang/msgca.c
    *source/lang/msgcs852.c
    *source/lang/msgcsiso.c
    *source/lang/msgcskam.c
    *source/lang/msgcswin.c
    *source/lang/msgde.c
    *source/lang/msgen.c
    *source/lang/msges.c
    *source/lang/msgeu.c
    *source/lang/msgfr.c
    *source/lang/msggl.c
    *source/lang/msghe862.c
    *source/lang/msghewin.c
    *source/lang/msghr852.c
    *source/lang/msghriso.c
    *source/lang/msghu852.c
    *source/lang/msghucwi.c
    *source/lang/msghuwin.c
    *source/lang/msgis850.c
    *source/lang/msgit.c
    *source/lang/msgko.c
    *source/lang/msgpt.c
    *source/lang/msgro.c
    *source/lang/msgsr852.c
    *source/lang/msgsriso.c
        * added internal error message: "Memory buffer overflow"

    *source/lang/msgpl852.c
    *source/lang/msgpliso.c
    *source/lang/msgplmaz.c
        *updated to work with current Lang API

    *source/vm/fm.c
        * memory blocks are marked with a signature at the end of buffer
        to check if memory was overwritten

    *source/rtl/transfrm.c
        * fixed bug when "@(BX" picture was used (it caused that some
        bytes were copied after the allocated buffer)

2000-07-27 00:15 GMT -3 Luiz Rafael Culik <culik@sl.conex.net>
*source/lang/msgit.c
   *Renamed TPL to IT
*source/lang/msgko.c
   *Renamed TPL to KR
-doc/garbage.txt
+doc/en/garbage.txt
   *Some formating
   *Removed spaces between see alsos
*doc/genhtm.rsp
   +en/garbage.txt added to hbdoc responde file

20000726-22:50 GMT+2 Maurilio Longo <maurilio.longo@libero.it>
   * contrib/mysql/makefile
     * changed to be harbour gnu make system compatible
   * contrib/mysql/mysql.c
     * should now compile with latest version of include files from MySQL. Not tested.
   * contrib/mysql/tmysql.prg
     * removed a couple of warnings.

2000-07-26 16:25 UTC-0400 David G. Holm <dholm@jsd-llc.com>

   * source/vm/hvm.c
     ! Made changes to solve problem where double values become
       integers in hb_vmPushNumber when SET DECIMALS is set to 0.

2000-07-25 22:35 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/harbour.slx
     * Converted CUSTOM_ACTION() macro to a function (hb_lex_CustomAction()).

2000-07-25 19:00 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *doc/garbage.txt
    *doc/idle.txt
        * added documentation for the garbage collector and idle states

    *include/hbapigt.h
        * added declaration of hb_gtSuspend(), hb_gtResume()
        and hb_gt_Suspend(), hb_gt_Resume()

    *source/vm/classes.c
    *source/pp/ppcomp.c
        * removed unused variable warnings reported by GCC

    *source/rtl/run.c
        * added call for hb_gtSuspend() and hb_gtResume() before
        calling the shell

    *source/rtl/console.c
    *source/rtl/gtapi.c
    *source/rtl/mouseapi.c
    *source/rtl/gtcrs/gtcrs.c
    *source/rtl/gtcrs/kbdcrs.c
    *source/rtl/gtcrs/mousecrs.c
    *source/rtl/gtdos/gtdos.c
    *source/rtl/gtos2/gtos2.c
    *source/rtl/gtpca/gtpca.c
    *source/rtl/gtsln/gtsln.c
    *source/rtl/gtstd/gtstd.c
    *source/rtl/gtwin/gtwin.c
        * mouse initialization is called directly from low-level GT driver
        to ommit problems with initialization order using some drivers
        * added prototypes for hb_gt_Suspend() and hb_gt_Resume() that
        are called before and after spawning to the shell
        NOTE:
        Please add appopriate code for drivers that require it

2000-07-25 09:30 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * hb_slex.bc
     * Synchronized with recent changes to makefile.bc
     + Added ;source\compiler to $(INCLUDE)

   * source/compiler/harbour.slx
     + Added logic to support 2 immediately following identifiers as needed by: DECLARE ClassName ClassVar ...

   + contrib/hb_struc
   + contrib/hb_struc/hbstruc.ch
   + contrib/hb_struc/hbstruc.prg
   + contrib/hb_struc/teststru.prg

2000-07-25 13:47 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * source/rtl/errorapi.c
   * include/hbapierr.h
     + hb_errRT_BASE_SubstR() added, which will automatically return the
       substituted value.

   * source/rtl/abs.c
   * source/rtl/at.c
   * source/rtl/chrasc.c
   * source/rtl/datec.c
   * source/rtl/dateshb.c
   * source/rtl/do.c
   * source/rtl/left.c
   * source/rtl/len.c
   * source/rtl/math.c
   * source/rtl/minmax.c
   * source/rtl/mod.c
   * source/rtl/replic.c
   * source/rtl/round.c
   * source/rtl/space.c
   * source/rtl/str.c
   * source/rtl/strcase.c
   * source/rtl/strtran.c
   * source/rtl/strzero.c
   * source/rtl/substr.c
   * source/rtl/transfrm.c
   * source/rtl/trim.c
   * source/rtl/type.c
   * source/rtl/val.c
   * source/vm/arrayshb.c
   * source/vm/classes.c
   * source/vm/eval.c
   * source/vm/hvm.c
   * source/vm/memvars.c
   * source/vm/runner.c
     % hb_errRT_BASE_Subst() -> hb_itemReturn() -> hb_itemRelease() constructs
       replaced with a simple call to hb_errRT_BASE_SubstR(), this way many
       local variables were removed, the code got smaller and a bit faster.
       The error handling code in the RTL functions is very simple now.

   * source/rtl/setkey.c
     * Minor formatting.

2000-07-24 18:25 UTC+0800 Ron Pinkas <ron@profit-master.com>
   ! tests\test.dbf
     ! Recovered previous version.

2000-07-25 22:00 GMT -3 Luiz Rafael Culik <culik@sl.conex.net>
-contrib/hbzlib/zipfile1.C
+contrib/hbzlib/zipfile.c
    *Renamed to match linux
-contrib/hbzlib/makefile
+contrib/hbzlib/Makefile
    *Renamed to match linux
-contrib/hbzlib/zlibapi.c
+contrib/hbzlib/zlibapi.c
    *Renamed to match linux
*contrib/hbzlib/makefile.bc
    +Added tzipfile.prg reference and test2.exe reference
+contrib/hbzlib/test2.prg
    *Test file for tzipfile Class
+contrib/hbzlib/tzipfile.prg
    *Tzipfile Class
+contrib/hbzlib/tzipfile.ch
    *Command for tZipClass
*contrib/hbzlib/zipfile2.c
    *some enhacements to hb___GetFilesNamesFromZip()

2000-07-25 00:53 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * source/vm/itemapi.c
     + Some NOTEs added to the Eval API functions.

2000-07-25 00:33 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * source/rtl/setkey.c
   * source/vm/memvars.c
     % Minor optimization in Item returning.

2000-07-25 00:23 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * source/rtl/abs.c
   * source/rtl/at.c
   * source/rtl/chrasc.c
   * source/rtl/datec.c
   * source/rtl/dateshb.c
   * source/rtl/dir.c
   * source/rtl/do.c
   * source/rtl/idle.c
   * source/rtl/left.c
   * source/rtl/len.c
   * source/rtl/math.c
   * source/rtl/minmax.c
   * source/rtl/mod.c
   * source/rtl/replic.c
   * source/rtl/round.c
   * source/rtl/setkey.c
   * source/rtl/space.c
   * source/rtl/str.c
   * source/rtl/strcase.c
   * source/rtl/strtran.c
   * source/rtl/strzero.c
   * source/rtl/substr.c
   * source/rtl/transfrm.c
   * source/rtl/trim.c
   * source/rtl/type.c
   * source/rtl/val.c
   * source/vm/arrayshb.c
   * source/vm/classes.c
   * source/vm/debug.c
   * source/vm/eval.c
   * source/vm/hvm.c
   * source/vm/memvars.c
   * source/vm/runner.c
     % This construct:
       hb_itemReturn( x );
       hb_itemRelease/Clear( x );
       converted to this smaller and faster one:
       hb_itemRelease/Clear( hb_itemReturn( x ) );

       Actually the speed increase and binary size decrease is almost zero,
       but the source code is more compact. This snippet is mostly found in
       runtime error branches.
       Some local variables could be eliminated this way.

20000724-22:45 GMT+2 Maurilio Longo <maurilio.longo@libero.it>

   + contrib/mysql
   + contrib/mysql/mysql.c
   + contrib/mysql/mysql.h
   + contrib/mysql/mysql_com.h
   + contrib/mysql/mysql_version.h
   + contrib/mysql/mysql.ch
   + contrib/mysql/tmysql.prg
   + contrib/mysql/dbf2mysql.prg
   + contrib/mysql/test.prg
   + contrib/mysql/readme.txt
     I've ported mSQL access classes to MySQL. There is a lot of work to do to finish them, but, nonetheless,
     in their present state I've been able to use them to port to MySQL a couple of programs written for
     mSQL.

2000-07-24 22:28 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * rdd/dbcmd.c
   * rtl/errorapi.c
   * vm/classes.c
   * vm/fm.c
   * vm/garbage.c
   * vm/hvm.c
   * vm/itemapi.c
   * vm/memvars.c
   * include/error.ch
     * IE_* macros renamed to HB_EI_* to not pollute namespace.
     ! Removed // comments from error.ch, since it was used in C code.

2000-07-24 22:12 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * include/hbextern.ch
   * source/rtl/errorapi.c
   * source/rtl/tobject.prg
   * source/vm/classes.c
     * TOBJECT_ERROR() implemented in Clipper/Harbour instead of C to keep it
       clean.
     + __errRT_SBASE() internal function added to throw a substitutable (?)
       runtime error.

   * source/lang/msgko.c
   * source/lang/Makefile
   * makefile.bc
   * makefile.vc
     + Korean language module updated. Thanks to Kwon Oh-Chul.

   - tests/test.frm
   + tests/test.frm
     - Readded in binary mode since it was corrupted.

2000-07-22 23:30 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/harbour.slx
     ! Optimized handling of Hex Numbers.
     + Added hash support for literal strings.
     * Increased aTexts[] to 1024

   * source/compiler/simplex.c
     ! Removed todo of pair action.

2000-07-22 23:08 GMT+3 Alexander Kresin <alex@belacy.belgorod.su>
   * source/compiler/harbour.c
   * source/compiler/harbour.y
   * source/compiler/hbgenerr.c
   * source/pp/ppcomp.c
   * source/pp/ppcore.c
     * Line numbering cleanups and fixes

2000-07-18 10:25 UTC+0200 JfL <jfl@mafact.com> & RaC <Rac@mafact.com>
   * source/vm/classes.c
     * Improvement within hb_clsinst (no more static var)
     * Improvement within hb_clsinst, hb_getdata(), hb_setdata()
       Not more indirect pointer ref. by its long value ...
     * Unreleased block resolved
     * One function added to improve class(y) compatibility with mess. :Error
       tObject:Error(cDesc,cClass,cMsg,nCode)
       +HB_FUNC( TOBJECT_ER )
   * include\HBEXTERN.CH
     +added  TOBJECT_ER
   * source\rtl\TObject.prg
     Improving Class(y) compatibility
     + Added :Error(...)  message
     + added :MsgNotFound() automatically called when one msg is not found

2000-07-16-20:30 GMT -3  Luiz Rafael Culik <culik@sl.conex.net>

*contrib/hbzlib/hbzip.h
     +Added declartration to hb___GetFilesNamesFromZip()
*contrib/hbzlib/zipfile2.c
       +Implementation of hb___GetFilesNamesFromZip()
*contrib/hbzlib/zipfile1.c
        +HB_GETFILESINZIP() function ( return the content of a files file in an array
         % All functons optimized to Speed and Size

2000-07-16 19:00 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *include/hbapi.h
    *source/vm/hvm.c
    *source/vm/memvars.c
        * memvars table is deleted in two steps: first clear all
        public and private variables (without the detached variables)
        and next free space allocated for memvars table. These two steps
        are separated with the garbage collector call so self
        referencing variables will be deallocated properly.

2000-07-16 17:40 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *include/hbhash.h
    *source/common/hash.c
        * added ulCount and ulUsed members of HB_HASH_TABLE structure
        * added hb_hashTableResize() function

    *source/compiler/hbident.c
        *increased the hash table

    *source/vm/garbage.c
    *source/vm/hvm.c
        * all detached variables are scanned now correctly
        * on exit the GC is called after cleaning all other internal
        data structures

2000-07-16 13:38 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * source/rtl/binnum.c
   * source/rtl/binnumx.c
     % Optimized for size and speed.

   * include/hbdefs.h
     ! Minor fix to HB_MKUSHORT(), HB_MKSHORT(), HB_MKLONG(), HB_MKULONG()

2000-07-15 20:00 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *include/hbexpra.c
    *include/hbexprb.c
    *include/hbexprc.c
    *include/hbexprop.h
    *source/common/expropt1.c
    *source/common/expropt2.c
    *source/compiler/harbour.l
    *source/macro/macroa.c
    *source/macro/macrob.c
    *source/macro/macroc.c
        * literal strings are now stored in the hash table together with
        identifiers (only the main compiler not the macro compiler)
        * expression of string type (created by the exression optimier)
        stores info it is allowed to deallocate the memory occupied by
        the string (normally it stores pointer to memory allocated
        in the identifies table - however after optimization it can store
        string allocated outside

    *source/compiler/hbident.c
        * the hash table is increased to 373 items

2000-07-14 22:40 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/harbour.slx
     ! Removed Todo: Hex Numbers. There are no more known TODOs.

2000-07-15 01:20 UTC+0200 JfL <jfl@mafact.com> & RaC <Rac@mafact.com>
   * source/vm/classes.c
     * ! minor correction to allow the case where we would be in need of
       hb_clsdictrealloc during inheritance (no more empty bucket).

2000-07-14 20:25 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *source/vm/garbage.c
        * the garbage collector scans now hb_stack.Return values

2000-07-14 09:40 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/simplex.c
     ! Minor correction, to accept a match, if all rule's tokens used.

2000-07-13 19:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/harbour.slx
     ! Removed excess characters at end of #undef directives.

2000-07-13 23:24 UTC+0200 JfL <jfl@mafact.com> & RaC <Rac@mafact.com>
   * source/rtl/tClass.prg
     * Prepared for InitClass (Not working )
   * source/rtl/tObject.prg
     * Now Default :New and :Init method 'a la Class(y)'
     * New(x,y,z) automatically call Init(x,y,z)
       { Very simple implementation limited to 20 params, will be changed asap }

2000-07-13 07:45 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/harbour.slx
     * Corrected premature release of MACROTEXT

2000-07-12 20:45 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/harbour.slx
     * Corrected support for PARAMETERS
     + Added type casts to allow c++ mode compilation

   * source/compiler/simplex.c
     - Removed unused vars.
     + Added type casts to allow c++ mode compilation

20000712-22:03 GMT+2 Maurilio Longo <maurilio.longo@libero.it>

   * source/rtl/teditor.prg
     + Added a bunch of new methods and in particular full support for a soft cursor,
       teditor does not rely upon position of hardware cursor anymore.
     + Added color support
     * made a few changes to use it as a base for tbrwtext class
   * source/debug/tbrwtext.prg
     * changed to use teditor as base class and not tbrowse. This makes it possible to single step
       inside normal size source code files. Try to single step inside dbu using previous version
       and you will understand me ;-)
   * source/debug/debugger.prg
     * a few changes to accomodate for new tbrwtext class

   Please note that there is not (yet) support for highlighting of breakpoints.

2000-07-12 14:05 UTC-0400 David G. Holm <dholm@jsd-llc.com>

   * source/rdd/dbcmd.c
     ! Added missing ( AREAP ) type override on line 3529.

2000-07-12 21:41 GMT+3 Alexander Kresin <alex@belacy.belgorod.su>
     *contrib/rdd_ads/ads1.c
     * Warning fixed, reported by David G. Holm

2000-07-12 12:30 UTC-0400 David G. Holm <dholm@jsd-llc.com>

   * config/c.cf
     * Changed to force flex to run before gcc, but after bison.

   * source/compiler/Makefile
     + Added test for HB_LEX being equal to SIMPLEX to compile
       Harbour with SimpLex. If HB_LEX is missing or is set to
       any value other than SIMPLEX, then Lex/Flex is used.

20000712-18:18 GMT+2 Maurilio Longo <maurilio.longo@libero.it>

   * source\compiler\Makefile
     + added hbslex.c and changed to remove flex usage
   * config\c.cf
     * changed to force bison to run before gcc

2000-07-12 16:08 GMT+3 Alexander Kresin <alex@belacy.belgorod.su>
    * source/rdd/dbf1.c
      * fixed a bug in dbfUpdateRecord() which caused problems with
      * FieldPut(), noted by Luiz Rafael Culik

2000-07-12-06:50 Luiz Rafael Culik <culik@sl.conex.net>
 +doc/en/stontype.txt
    *information of Harbour strong type feature
 +doc/en/sayget.txt
    *documentation for @say and @get commands
 +doc/en/memver.txt
     *documentation for local,memvar and Field command
 *doc/en/readme.txt
     *small fixes

2000-07-12-06:30 Luiz Rafael Culik <culik@sl.conex.net>
  *contrib/hbzlib/hbzip.h
     *Added an missing ";" to a function declaration
  *contrib/hbzlib/makefile.bc
     *Changes to process hbzlib.dll insted of zlib.dll
2000-07-12 10:25 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *source/common/hash.c
        * items can be removed from the hash table

    *source/compiler/harbour.l
        * fixed handling of 'with()' and '( with )' syntax

    *tests/keywords.prg
        * updated with few additional tests


2000-07-12 08:46 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * doc/whatsnew.txt
     + Added some new items.

   * source/pp/pptable.c
     ! .FMT -> .fmt (to be multiplatform friendly)

   * source/rtl/dummy.prg
     - DBSETRELATION(), DBCLEARRELATION() removed.

   * makefile.bc
     ! Fixed PP dependency for HARBOUR.EXE

   * source/pp/ppcore.c
   * source/rdd/dbfntx/dbfntx1.c
     - Removed // comments

   * source/rdd/dbfntx/dbfntx1.c
     ! Fixed some BCC warnings.

   * source/rdd/dbcmd.c
   * source/rtl/disksphb.c
   * source/rtl/errorapi.c
   * source/rtl/tget.prg
     * Formatting

   * utils/hbdoc/Makefile
     ! Fixed TAB

   * utils/hbextern/hbextern.prg
   * utils/hbtest/rt_misc.prg
     * = assigments -> :=

   * include/hbcomp.h
   * source/compiler/harbour.c
   * source/compiler/harbour.l
   * source/compiler/harbour.y
     - Removed HB_NESTED_COMPILE.

   - include/hbstruc.ch
   - source/rtl/hbstruc.prg
     - Removed.

2000-07-11 09:30 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * hb_slex.bc
     * Updated to match makefile.bc

   * source/compiler/harbour.l
   * source/compiler/harbour.c
     - Removed refrences to hb_compReleaseStrings()

   * source/compiler/harbour.slx
     * Changed identifier reuse logic to use hb_compIdentifierNew()

2000-07-11 12:00 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *include/hbhash.h
    *source/common/hash.c
    *include/Makefile
    *source/common/Makefile
        * new files with reusable hash table implementation

    *include/hbcomp.h
        * added #include hbhash.h

    *source/compiler/Makefile
    *source/compiler/hbident.c
        * new file that implements a table of reusable identifiers

    *source/compiler/harbour.c
    *source/compiler/harbour.l
    *source/compiler/harbour.y
        * changed to use a table of identifiers

    *makefile.bc
    *makefile.vc
        * updated to support the identifiers table

2000-07-10 20:25 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * include/hbcomp.h
   * source/compiler/harbour.y
   * source/compiler/hbgenerr.c
     - Removed hb_comp_szFile

   * source/compiler/harbour.slx
     * Reduced aStrings and YY_BUF_SIZE to 2048

   * source/compiler/simplex.c
     + Added RTL license exception.

2000-07-10-22:20 Luiz Rafael Culik <culik@sl.conex.net>
  *contrib/hbzlib/zipfile2.c
     +hb___GetNumbersofFilestoUnzip(char *szFile) internal function that returns
     the number of files inside a zip file
  *contrib/hbzlib/hbzip.h
     *Added declaration of hb___GetNumbersofFilestoUnzip(char *szFile)
  *Contrib/hbzlib/zipfile1.c
     +HB_GETUNZIPFILE() function to return the number of files to extract.

2000-07-10 19:55 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *source/vm/garbage.c
        * removed some '//' coments

2000-07-10 13:05 GMT+3 Alexander Kresin <alex@belacy.belgorod.su>
    * source/rdd/dbcmd.c
      * modified: hb_rddCloseAll()
      + added: virtual methods defclearRel(), defsetRel()
      + added: functions dbSetRelation(), dbClearRelation()
    * contrib/rdd_ads/ads1.c
      + added: virtual methods adsclearRel(), adssetRel()

2000-07-10 11:10 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *include/hbcomp.h
        * added a forward declaration to comiple with Watcom C/C++

    *source/compiler/harbour.c
        * added missing declaration of hb_compReleaseStrings()

    *source/rtl/errorapi.c
        * error objects created during error launching called internally
        are locked to prevent deallocation by the GC

    *source/rtl/idle.c
        * changed to call hb_gcCollectAll()

    *include/hbapi.h
    *source/vm/arrays.c
    *source/vm/classes.c
    *source/vm/codebloc.c
    *source/vm/garbage.c
    *source/vm/hvm.c
    *source/vm/memvars.c
        * changed the implementation of the GC to use a classical mark-sweep
        algorithm - this means that all garbage memory blocks are released
        during a single hb_gcCollectAll()
        * the garbage collector maintains now the separate list of
        locked items to prevend premature deallocation of items
        referenced inside of locked items
        * during sweep phase the items are checked only once to prevent
        recursive loops

2000-07-09 01:02 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * include/hbcomp.h
     + Added: external BOOL hb_comp_bSimpLex

   * source/compiler/harbour.c
     + Added: BOOL hb_comp_bSimpLex
     + Added: if( hb_comp_bSimpLex ) tests before releasing name strings of vars, and symbols.
     + Added: call to hb_compReleaseStrings(), if hb_comp_SimpLes is TRUE, after code generation.

   * source/compiler/harbour.slx
     + Added: logic to resuse same allocated strings when string for identifier was perviously allocated.
     + Added: INIT_ACTION macro to set hb_comp_bSimpLex to TRUE.
     + Added: Function hb_compReleaseStrings()

   * source/compiler/harbour.l
     + Added: empty Function hb_compReleaseStrings() to avoid link error.

   * source/compiler/hbslex.c
   * source/compiler/simplex.c
     * Moved standard #includes from simplex to hbslex.

2000-07-08 19:50 UTC+0800 Ron Pinkas <ron@profit-master.com>
  * source\compiler\simplex.c
  * source\compiler\harbour.slx
    * Short term copies dynamic memory copies of yytext are being released at <EOL>.

2000-07-08-22:00 Luiz Rafael Culik <culik@sl.conex.net>
  *contrib/hbzlib/zipfile2.c
   contrib/hbzlib/zlibapi.c
     %more optimized
     *some variables made global,
     *some bugs fixed(unzippping functions)
  *contrib/hbzlib/zipfile1.c
     +added a new parameter to hb_unzipfile() to control the creation of stored directories
  *contrib/hbzlib/hbzip.h
     *some changes
  *contrib/hbzlib/makefile.bc
     *Removed -a from impdef command line

2000-07-08 15:10 UTC+0800 Ron Pinkas <ron@profit-master.com>
  * source\compiler\simplex.c
    * Improved handling of WhiteSpace, NewLine, and Eof.

  * source\compiler\harbour.slx
    + Added rule to return only last CR in sequence of empty lines.

2000-07-08 10:40 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *source/vm/garbage.c
        * fixed possible endless loop during the garbage collecting
        (this time for real :-)

2000-07-07 17:30 UTC+0800 Ron Pinkas <ron@profit-master.com>
  - include\harbour.slx
  - source\compiler\harbourl.c

  + b32_slex.bat
  + hb_slex.bc

  + source\compiler\hbslex.c
  + source\compiler\simplex.c
  + source\compiler\harbour.slx

2000-07-07 10:30 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *source/vm/garbage.c
        * fixed possible endless loop during the garbage collecting

2000-07-06 14:10 GMT+0100 Ignacio Ortiz <ignacio@fivetech.com>
   * source/rtl/tget.prg
     * Fixed minor bugs in numbers with decimals and when clause @E was used with numbers

2000-07-05 23:55 UTC+0800 Ron Pinkas <ron@profit-master.com>
   + source\include\harbourl.slx
   + source\compiler\harbourl.c
     This is a propoesed new Generic Lexer (SimpLex) that along with language definition file (Harbour.slx) consititue
     the proposed new Harbour Lexer. It is about half the size of the Flex Lexer and Harbour.exe is about 60K smaller.
     This might help with 16bit mode and or memory limited situations. It belive it offers few benefits over Flex:
        Simplicity, Readability, and Consitency of the rules.
        More elegant look ahead/parsing capabilities.
        Does not require a 3rd party tool (the Tokens & Rules table, is inserted into the Lexer by means of an #include directive.
        it doesn't need to be "compiled" like the Flex.exe produces harbourl.c from harbour.l.
        It is much smaller than the Flex generated Lexer.
     Please note it is not yet optimized for speed, I would love to get your input/suggestion (Ryszard, Victor, Paul, ...).
     In the process of resaerching the Lex phase I found many "problems" and tried to address them all. It now compiles
     the full build including keywords.prg (3 compiler (yacc) errors), our previous lexer didn't fully parse keywords.prg
     Please forward your opinions...

2000-07-04 20:36 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * source/rtl/teditor.prg
     * Formatting.

2000-07-04 13:59 GMT+3 Alexander Kresin <alex@belacy.belgorod.su>
    * contrib/rdd_ads/adsfunc.c
      * added full set of encryption/decryption functions

2000-07-04 13:59 GMT+3 Alexander Kresin <alex@belacy.belgorod.su>
    * include/hbapirdd.h
      * uncommented relational methods in functions table
    * source/rdd/dbcmd.c
    * source/rdd/dbf1.c
    * source/rdd/dbfcdx/dbfcdx1.c
    * source/rdd/dbfntx/dbfntx1.c
      * added relational methods definitions to func table
    * contrib/rdd_ads/ads1.c
      * added relational methods definitions to func table
      * fixed adsOrderCreate - now
      * INDEX ON expression TAG tag TO indexFileName
      * creates a compound CDX index, if indexFileName is the same, as
      * current dbf name

2000-07-04 04:05 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * contrib/odbc/bld_b32.bat
     ! Fixed.

   * source/rtl/tget.prg
     ! Fix by Chen Kedem applied for __GET()/_GET_()/GetNew() not passed
       setget block bug.

   * source/rtl/filesys.c
     ! Fixed bug in hb_fsCurDir[Buff](), it's now stripping the
       leading "/" path delimiter.

   * source/rtl/memoline.c
     % Minor opt.

   * source/rtl/gtsln/kbsln.c
   * source/rtl/gtsln/keytrans.c
   * source/vm/classes.c
     * Formatting.

2000-07-03 20:00 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *source/vm/garbage.c
        * minor change

    *source/vm/hvm.c
        * changed order of the GC call on exit - it is now called before any
        stack and memvars table releasing

    *tests/onidle.prg
        * fixed to demonstrate the latest changes

2000-07-03 13:40 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *source/vm/memvars.c
        * the table of memvars is not checked for references from the GC
        after all memvars are released

2000-07-03 11:40 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *include/hbpp.h
    *source/pp/ppcore.c
        * fixed declaration and definition of hb_pp_SetRule() - Watcom C/C++
        was recognizing it as overloading of the function

    *source/rtl/gtdos/gtdos.c
        * fixed low level processor ports access for Watcom C/C++

    *source/vm/garbage.c
        * fixed possible endless loop in hb_gcCollectAll()

    *source/vm/arrays.c
        * arrays are no longer released recursively during the garbage
        collecting

    *source/rdd/dbfntx/dbfntx1.c
        * fixed warning for unused variable

2000-07-02 12:30 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *source/vm/garbage.c
    *source/vm/memvars.c
        * codeblocks that are self referencing (cb := {|| cb}) are
        correctly released by the garbage collector

2000-07-01 23:55 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
   * source\rdd\dbfntx\dbfntx1.c
     * added a few casts

2000-06-30 08:50 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *source/vm/garbage.c
        * fixed a bug when releasing the last memory block

    *source/vm/hvm.c
        * fixed an order of subsystems shutdown and items relasing

2000-06-29 10:50 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *source/vm/classes.c
        *fixed to stop handling of the garbage collector requests
        (hb_clsIsClassRef()) after all classes were released

    *source/rtl/setkey.c
        *fixed to lock codeblocks stored internally to prevent deallocation
        by the garbage collector

2000-06-28-23:20 Luiz Rafael Culik <culik@sl.conex.net>
*contrib/hbzlib/zipfile2.c
   -hb___MyMkdir() Functions. All Calls to this function replaced with hb_fsMkDir()
   *some bugs fixed
*contrib/hbzlib/hbzip.h
   -removed hb___MyMkdir() function declaration

2000-06-27 11:10 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *include/hbapi.h
    *source/rtl/errorapi.c
    *source/rtl/idle.c
    *source/vm/classes.c
    *source/vm/garbage.c
        *the garbage collector is now aware of all items stored internally
        in class related structures

2000-06-27-22:45 Luiz Rafael Culik <culik@sl.conex.net>
  *Changelog
     *Renamed to ChangeLog.008 and Started a new one
  *contrib/hbzlib/zipfile2.c
   contrib/hbzlib/zlibapi.c
     *Added code to be used by other platforms
  +contrib/hbzlib/makefile
     *makefile for gnu compiler
   * source/pp/pragma.c
   * contrib/dot/pp_harb.ch
   * tests/inline_c.prg
     * STOPDUMP renamed as ENDDUMP (with Ron permission)

2001-12-21 08:40 UTC-0300 Luiz Rafael Culik <culik@sl.conex.net>
   * utils/hbmake/hbmake.prg
    * small fix

2001-12-21 07:50 UTC-0300 Luiz Rafael Culik <culik@sl.conex.net>
  * source/rtl/filesys.c
    * hb_fsmkdir,hb_fsChdir,hb_fsRmdir,hb_fsDelete,hb_fsRename,hb_fsCurdirBuff()
      now use Win32 API calls
   * utils/hbmake/hbmake.prg
     ! Disabled profile
   * utils/hbmake/hbmutils.prg
     * An small clean up
   * ChangeLog
     * Renamed to ChangeLog.012 and started an new one
2006-02-15 13:50 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hvm.c
    ! fixed memory leak I introduced changing Ryszard modifications

      need such functionality yet
  + harbour/ChangeLog.015
  * harbour/source/vm/debug.c

  * harbour/harbour.spec
  * harbour/bin/hb-func.sh
    * some modification in xhb* scripts building - adding passing
      predefined compiler and linker switches
  * harbour/source/vm/hvm.c
    * minor code cleanup

2006-09-03 18:55 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapicls.h
  * harbour/source/vm/classes.c
  * harbour/source/vm/hvm.c
  * harbour/tests/overload.prg
    + added support for overloading [] in assignment operation

2006-09-03 16:30 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/ChangeLog
  + harbour/ChangeLog.016
    * new ChangeLog file created
  * harbour/include/hbver.h
    * updated version number to 0.47.0
  * tagged CVS as build47
