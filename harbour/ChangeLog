2000-07-24 18:25 UTC+0800 Ron Pinkas <ron@profit-master.com>
   ! tests\test.dbf
     ! Recovered previous version.

2000-07-25 22:00 GMT -3 Luiz Rafael Culik <culik@sl.conex.net>
-contrib/hbzlib/zipfile1.C
+contrib/hbzlib/zipfile.c
    *Renamed to match linux
-contrib/hbzlib/makefile
+contrib/hbzlib/Makefile
    *Renamed to match linux
-contrib/hbzlib/zlibapi.c
+contrib/hbzlib/zlibapi.c
    *Renamed to match linux
*contrib/hbzlib/makefile.bc
    +Added tzipfile.prg reference and test2.exe reference
+contrib/hbzlib/test2.prg
    *Test file for tzipfile Class
+contrib/hbzlib/tzipfile.prg
    *Tzipfile Class
+contrib/hbzlib/tzipfile.ch
    *Command for tZipClass
*contrib/hbzlib/zipfile2.c
    *some enhacements to hb___GetFilesNamesFromZip()

2000-07-25 00:53 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * source/vm/itemapi.c
     + Some NOTEs added to the Eval API functions.

2000-07-25 00:33 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * source/rtl/setkey.c
   * source/vm/memvars.c
     % Minor optimization in Item returning.

2000-07-25 00:23 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * source/rtl/abs.c
   * source/rtl/at.c
   * source/rtl/chrasc.c
   * source/rtl/datec.c
   * source/rtl/dateshb.c
   * source/rtl/dir.c
   * source/rtl/do.c
   * source/rtl/idle.c
   * source/rtl/left.c
   * source/rtl/len.c
   * source/rtl/math.c
   * source/rtl/minmax.c
   * source/rtl/mod.c
   * source/rtl/replic.c
   * source/rtl/round.c
   * source/rtl/setkey.c
   * source/rtl/space.c
   * source/rtl/str.c
   * source/rtl/strcase.c
   * source/rtl/strtran.c
   * source/rtl/strzero.c
   * source/rtl/substr.c
   * source/rtl/transfrm.c
   * source/rtl/trim.c
   * source/rtl/type.c
   * source/rtl/val.c
   * source/vm/arrayshb.c
   * source/vm/classes.c
   * source/vm/debug.c
   * source/vm/eval.c
   * source/vm/hvm.c
   * source/vm/memvars.c
   * source/vm/runner.c
     % This construct:
       hb_itemReturn( x );
       hb_itemRelease/Clear( x );
       converted to this smaller and faster one:
       hb_itemRelease/Clear( hb_itemReturn( x ) );

       Actually the speed increase and binary size decrease is almost zero,
       but the source code is more compact. This snippet is mostly found in
       error runtime error branches.
       Some local variables could be eliminated this way.

20000724-22:45 GMT+2 Maurilio Longo <maurilio.longo@libero.it>

   + contrib/mysql
   + contrib/mysql/mysql.c
   + contrib/mysql/mysql.h
   + contrib/mysql/mysql_com.h
   + contrib/mysql/mysql_version.h
   + contrib/mysql/mysql.ch
   + contrib/mysql/tmysql.prg
   + contrib/mysql/dbf2mysql.prg
   + contrib/mysql/test.prg
   + contrib/mysql/readme.txt
     I've ported mSQL access classes to MySQL. There is a lot of work to do to finish them, but, nonetheless,
     in their present state I've been able to use them to port to MySQL a couple of programs written for
     mSQL.

2000-07-24 22:28 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * rdd/dbcmd.c
   * rtl/errorapi.c
   * vm/classes.c
   * vm/fm.c
   * vm/garbage.c
   * vm/hvm.c
   * vm/itemapi.c
   * vm/memvars.c
   * include/error.ch
     * IE_* macros renamed to HB_EI_* to not pollute namespace.
     ! Removed // comments from error.ch, since it was used in C code.

2000-07-24 22:12 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * include/hbextern.ch
   * source/rtl/errorapi.c
   * source/rtl/tobject.prg
   * source/vm/classes.c
     * TOBJECT_ERROR() implemented in Clipper/Harbour instead of C to keep it
       clean.
     + __errRT_SBASE() internal function added to throw a substitutable (?)
       runtime error.

   * source/lang/msgko.c
   * source/lang/Makefile
   * makefile.bc
   * makefile.vc
     + Korean language module updated. Thanks to Kwon Oh-Chul.

   - tests/test.frm
   + tests/test.frm
     - Readded in binary mode since it was corrupted.

2000-07-22 23:30 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/harbour.slx
     ! Optimized handling of Hex Numbers.
     + Added hash support for literal strings.
     * Increased aTexts[] to 1024

   * source/compiler/simplex.c
     ! Removed todo of pair action.

2000-07-22 23:08 GMT+3 Alexander Kresin <alex@belacy.belgorod.su>
   * source/compiler/harbour.c
   * source/compiler/harbour.y
   * source/compiler/hbgenerr.c
   * source/pp/ppcomp.c
   * source/pp/ppcore.c
     * Line numbering cleanups and fixes

2000-07-18 10:25 UTC+0200 JfL <jfl@mafact.com> & RaC <Rac@mafact.com>
   * source/vm/classes.c
     * Improvement within hb_clsinst (no more static var)
     * Improvement within hb_clsinst, hb_getdata(), hb_setdata()
       Not more indirect pointer ref. by its long value ...
     * Unreleased block resolved
     * One function added to improve class(y) compatibility with mess. :Error
       tObject:Error(cDesc,cClass,cMsg,nCode)
       +HB_FUNC( TOBJECT_ER )
   * include\HBEXTERN.CH
     +added  TOBJECT_ER
   * source\rtl\TObject.prg
     Improving Class(y) compatibility
     + Added :Error(...)  message
     + added :MsgNotFound() automatically called when one msg is not found

2000-07-16-20:30 GMT -3  Luiz Rafael Culik <culik@sl.conex.net>

*contrib/hbzlib/hbzip.h
     +Added declartration to hb___GetFilesNamesFromZip()
*contrib/hbzlib/zipfile2.c
       +Implementation of hb___GetFilesNamesFromZip()
*contrib/hbzlib/zipfile1.c
        +HB_GETFILESINZIP() function ( return the content of a files file in an array
         % All functons optimized to Speed and Size

2000-07-16 19:00 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *include/hbapi.h
    *source/vm/hvm.c
    *source/vm/memvars.c
        * memvars table is deleted in two steps: first clear all
        public and private variables (without the detached variables)
        and next free space allocated for memvars table. These two steps
        are separated with the garbage collector call so self
        referencing variables will be deallocated properly.

2000-07-16 17:40 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *include/hbhash.h
    *source/common/hash.c
        * added ulCount and ulUsed members of HB_HASH_TABLE structure
        * added hb_hashTableResize() function

    *source/compiler/hbident.c
        *increased the hash table

    *source/vm/garbage.c
    *source/vm/hvm.c
        * all detached variables are scanned now correctly
        * on exit the GC is called after cleaning all other internal
        data structures

2000-07-16 13:38 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * source/rtl/binnum.c
   * source/rtl/binnumx.c
     % Optimized for size and speed.

   * include/hbdefs.h
     ! Minor fix to HB_MKUSHORT(), HB_MKSHORT(), HB_MKLONG(), HB_MKULONG()

2000-07-15 20:00 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *include/hbexpra.c
    *include/hbexprb.c
    *include/hbexprc.c
    *include/hbexprop.h
    *source/common/expropt1.c
    *source/common/expropt2.c
    *source/compiler/harbour.l
    *source/macro/macroa.c
    *source/macro/macrob.c
    *source/macro/macroc.c
        * literal strings are now stored in the hash table together with
        identifiers (only the main compiler not the macro compiler)
        * expression of string type (created by the exression optimier)
        stores info it is allowed to deallocate the memory occupied by
        the string (normally it stores pointer to memory allocated
        in the identifies table - however after optimization it can store
        string allocated outside

    *source/compiler/hbident.c
        * the hash table is increased to 373 items

2000-07-14 22:40 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/harbour.slx
     ! Removed Todo: Hex Numbers. There are no more known TODOs.

2000-07-15 01:20 UTC+0200 JfL <jfl@mafact.com> & RaC <Rac@mafact.com>
   * source/vm/classes.c
     * ! minor correction to allow the case where we would be in need of
       hb_clsdictrealloc during inheritance (no more empty bucket).

2000-07-14 20:25 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *source/vm/garbage.c
        * the garbage collector scans now hb_stack.Return values

2000-07-14 09:40 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/simplex.c
     ! Minor correction, to accept a match, if all rule's tokens used.

2000-07-13 19:00 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/harbour.slx
     ! Removed excess characters at end of #undef directives.

2000-07-13 23:24 UTC+0200 JfL <jfl@mafact.com> & RaC <Rac@mafact.com>
   * source/rtl/tClass.prg
     * Prepared for InitClass (Not working )
   * source/rtl/tObject.prg
     * Now Default :New and :Init method 'a la Class(y)'
     * New(x,y,z) automatically call Init(x,y,z)
       { Very simple implementation limited to 20 params, will be changed asap }

2000-07-13 07:45 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/harbour.slx
     * Corrected premature release of MACROTEXT

2000-07-12 20:45 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/harbour.slx
     * Corrected support for PARAMETERS
     + Added type casts to allow c++ mode compilation

   * source/compiler/simplex.c
     - Removed unused vars.
     + Added type casts to allow c++ mode compilation

20000712-22:03 GMT+2 Maurilio Longo <maurilio.longo@libero.it>

   * source/rtl/teditor.prg
     + Added a bunch of new methods and in particular full support for a soft cursor,
       teditor does not rely upon position of hardware cursor anymore.
     + Added color support
     * made a few changes to use it as a base for tbrwtext class
   * source/debug/tbrwtext.prg
     * changed to use teditor as base class and not tbrowse. This makes it possible to single step
       inside normal size source code files. Try to single step inside dbu using previous version
       and you will understand me ;-)
   * source/debug/debugger.prg
     * a few changes to accomodate for new tbrwtext class

   Please note that there is not (yet) support for highlighting of breakpoints.

2000-07-12 14:05 UTC-0400 David G. Holm <dholm@jsd-llc.com>

   * source/rdd/dbcmd.c
     ! Added missing ( AREAP ) type override on line 3529.

2000-07-12 21:41 GMT+3 Alexander Kresin <alex@belacy.belgorod.su>
     *contrib/rdd_ads/ads1.c
     * Warning fixed, reported by David G. Holm

2000-07-12 12:30 UTC-0400 David G. Holm <dholm@jsd-llc.com>

   * config/c.cf
     * Changed to force flex to run before gcc, but after bison.

   * source/compiler/Makefile
     + Added test for HB_LEX being equal to SIMPLEX to compile
       Harbour with SimpLex. If HB_LEX is missing or is set to
       any value other than SIMPLEX, then Lex/Flex is used.

20000712-18:18 GMT+2 Maurilio Longo <maurilio.longo@libero.it>

   * source\compiler\Makefile
     + added hbslex.c and changed to remove flex usage
   * config\c.cf
     * changed to force bison to run before gcc

2000-07-12 16:08 GMT+3 Alexander Kresin <alex@belacy.belgorod.su>
    * source/rdd/dbf1.c
      * fixed a bug in dbfUpdateRecord() which caused problems with
      * FieldPut(), noted by Luiz Rafael Culik

2000-07-12-06:50 Luiz Rafael Culik <culik@sl.conex.net>
 +doc/en/stontype.txt
    *information of Harbour strong type feature
 +doc/en/sayget.txt
    *documentation for @say and @get commands
 +doc/en/memver.txt
     *documentation for local,memvar and Field command
 *doc/en/readme.txt
     *small fixes

2000-07-12-06:30 Luiz Rafael Culik <culik@sl.conex.net>
  *contrib/hbzlib/hbzip.h
     *Added an missing ";" to a function declaration
  *contrib/hbzlib/makefile.bc
     *Changes to process hbzlib.dll insted of zlib.dll
2000-07-12 10:25 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *source/common/hash.c
        * items can be removed from the hash table

    *source/compiler/harbour.l
        * fixed handling of 'with()' and '( with )' syntax

    *tests/keywords.prg
        * updated with few additional tests


2000-07-12 08:46 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * doc/whatsnew.txt
     + Added some new items.

   * source/pp/pptable.c
     ! .FMT -> .fmt (to be multiplatform friendly)

   * source/rtl/dummy.prg
     - DBSETRELATION(), DBCLEARRELATION() removed.

   * makefile.bc
     ! Fixed PP dependency for HARBOUR.EXE

   * source/pp/ppcore.c
   * source/rdd/dbfntx/dbfntx1.c
     - Removed // comments

   * source/rdd/dbfntx/dbfntx1.c
     ! Fixed some BCC warnings.

   * source/rdd/dbcmd.c
   * source/rtl/disksphb.c
   * source/rtl/errorapi.c
   * source/rtl/tget.prg
     * Formatting

   * utils/hbdoc/Makefile
     ! Fixed TAB

   * utils/hbextern/hbextern.prg
   * utils/hbtest/rt_misc.prg
     * = assigments -> :=

   * include/hbcomp.h
   * source/compiler/harbour.c
   * source/compiler/harbour.l
   * source/compiler/harbour.y
     - Removed HB_NESTED_COMPILE.

   - include/hbstruc.ch
   - source/rtl/hbstruc.prg
     - Removed.

2000-07-11 09:30 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * hb_slex.bc
     * Updated to match makefile.bc

   * source/compiler/harbour.l
   * source/compiler/harbour.c
     - Removed refrences to hb_compReleaseStrings()

   * source/compiler/harbour.slx
     * Changed identifier reuse logic to use hb_compIdentifierNew()

2000-07-11 12:00 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *include/hbhash.h
    *source/common/hash.c
    *include/Makefile
    *source/common/Makefile
        * new files with reusable hash table implementation

    *include/hbcomp.h
        * added #include hbhash.h

    *source/compiler/Makefile
    *source/compiler/hbident.c
        * new file that implements a table of reusable identifiers

    *source/compiler/harbour.c
    *source/compiler/harbour.l
    *source/compiler/harbour.y
        * changed to use a table of identifiers

    *makefile.bc
    *makefile.vc
        * updated to support the identifiers table

2000-07-10 20:25 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * include/hbcomp.h
   * source/compiler/harbour.y
   * source/compiler/hbgenerr.c
     - Removed hb_comp_szFile

   * source/compiler/harbour.slx
     * Reduced aStrings and YY_BUF_SIZE to 2048

   * source/compiler/simplex.c
     + Added RTL license exception.

2000-07-10-22:20 Luiz Rafael Culik <culik@sl.conex.net>
  *contrib/hbzlib/zipfile2.c
     +hb___GetNumbersofFilestoUnzip(char *szFile) internal function that returns
     the number of files inside a zip file
  *contrib/hbzlib/hbzip.h
     *Added declaration of hb___GetNumbersofFilestoUnzip(char *szFile)
  *Contrib/hbzlib/zipfile1.c
     +HB_GETUNZIPFILE() function to return the number of files to extract.

2000-07-10 19:55 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *source/vm/garbage.c
        * removed some '//' coments

2000-07-10 13:05 GMT+3 Alexander Kresin <alex@belacy.belgorod.su>
    * source/rdd/dbcmd.c
      * modified: hb_rddCloseAll()
      + added: virtual methods defclearRel(), defsetRel()
      + added: functions dbSetRelation(), dbClearRelation()
    * contrib/rdd_ads/ads1.c
      + added: virtual methods adsclearRel(), adssetRel()

2000-07-10 11:10 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *include/hbcomp.h
        * added a forward declaration to comiple with Watcom C/C++

    *source/compiler/harbour.c
        * added missing declaration of hb_compReleaseStrings()

    *source/rtl/errorapi.c
        * error objects created during error launching called internally
        are locked to prevent deallocation by the GC

    *source/rtl/idle.c
        * changed to call hb_gcCollectAll()

    *include/hbapi.h
    *source/vm/arrays.c
    *source/vm/classes.c
    *source/vm/codebloc.c
    *source/vm/garbage.c
    *source/vm/hvm.c
    *source/vm/memvars.c
        * changed the implementation of the GC to use a classical mark-sweep
        algorithm - this means that all garbage memory blocks are released
        during a single hb_gcCollectAll()
        * the garbage collector maintains now the separate list of
        locked items to prevend premature deallocation of items
        referenced inside of locked items
        * during sweep phase the items are checked only once to prevent
        recursive loops

2000-07-09 01:02 UTC+0800 Ron Pinkas <ron@profit-master.com>
   * include/hbcomp.h
     + Added: external BOOL hb_comp_bSimpLex

   * source/compiler/harbour.c
     + Added: BOOL hb_comp_bSimpLex
     + Added: if( hb_comp_bSimpLex ) tests before releasing name strings of vars, and symbols.
     + Added: call to hb_compReleaseStrings(), if hb_comp_SimpLes is TRUE, after code generation.

   * source/compiler/harbour.slx
     + Added: logic to resuse same allocated strings when string for identifier was perviously allocated.
     + Added: INIT_ACTION macro to set hb_comp_bSimpLex to TRUE.
     + Added: Function hb_compReleaseStrings()

   * source/compiler/harbour.l
     + Added: empty Function hb_compReleaseStrings() to avoid link error.

   * source/compiler/hbslex.c
   * source/compiler/simplex.c
     * Moved standard #includes from simplex to hbslex.

2000-07-08 19:50 UTC+0800 Ron Pinkas <ron@profit-master.com>
  * source\compiler\simplex.c
  * source\compiler\harbour.slx
    * Short term copies dynamic memory copies of yytext are being released at <EOL>.

2000-07-08-22:00 Luiz Rafael Culik <culik@sl.conex.net>
  *contrib/hbzlib/zipfile2.c
   contrib/hbzlib/zlibapi.c
     %more optimized
     *some variables made global,
     *some bugs fixed(unzippping functions)
  *contrib/hbzlib/zipfile1.c
     +added a new parameter to hb_unzipfile() to control the creation of stored directories
  *contrib/hbzlib/hbzip.h
     *some changes
  *contrib/hbzlib/makefile.bc
     *Removed -a from impdef command line

2000-07-08 15:10 UTC+0800 Ron Pinkas <ron@profit-master.com>
  * source\compiler\simplex.c
    * Improved handling of WhiteSpace, NewLine, and Eof.

  * source\compiler\harbour.slx
    + Added rule to return only last CR in sequence of empty lines.

2000-07-08 10:40 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *source/vm/garbage.c
        * fixed possible endless loop during the garbage collecting
        (this time for real :-)

2000-07-07 17:30 UTC+0800 Ron Pinkas <ron@profit-master.com>
  - include\harbour.slx
  - source\compiler\harbourl.c

  + b32_slex.bat
  + hb_slex.bc

  + source\compiler\hbslex.c
  + source\compiler\simplex.c
  + source\compiler\harbour.slx

2000-07-07 10:30 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *source/vm/garbage.c
        * fixed possible endless loop during the garbage collecting

2000-07-06 14:10 GMT+0100 Ignacio Ortiz <ignacio@fivetech.com>
   * source/rtl/tget.prg
     * Fixed minor bugs in numbers with decimals and when clause @E was used with numbers

2000-07-05 23:55 UTC+0800 Ron Pinkas <ron@profit-master.com>
   + source\include\harbourl.slx
   + source\compiler\harbourl.c
     This is a propoesed new Generic Lexer (SimpLex) that along with language definition file (Harbour.slx) consititue
     the proposed new Harbour Lexer. It is about half the size of the Flex Lexer and Harbour.exe is about 60K smaller.
     This might help with 16bit mode and or memory limited situations. It belive it offers few benefits over Flex:
        Simplicity, Readability, and Consitency of the rules.
        More elegant look ahead/parsing capabilities.
        Does not require a 3rd party tool (the Tokens & Rules table, is inserted into the Lexer by means of an #include directive.
        it doesn't need to be "compiled" like the Flex.exe produces harbourl.c from harbour.l.
        It is much smaller than the Flex generated Lexer.
     Please note it is not yet optimized for speed, I would love to get your input/suggestion (Ryszard, Victor, Paul, ...).
     In the process of resaerching the Lex phase I found many "problems" and tried to address them all. It now compiles
     the full build including keywords.prg (3 compiler (yacc) errors), our previous lexer didn't fully parse keywords.prg
     Please forward your opinions...

2000-07-04 20:36 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * source/rtl/teditor.prg
     * Formatting.

2000-07-04 13:59 GMT+3 Alexander Kresin <alex@belacy.belgorod.su>
    * contrib/rdd_ads/adsfunc.c
      * added full set of encryption/decryption functions

2000-07-04 13:59 GMT+3 Alexander Kresin <alex@belacy.belgorod.su>
    * include/hbapirdd.h
      * uncommented relational methods in functions table
    * source/rdd/dbcmd.c
    * source/rdd/dbf1.c
    * source/rdd/dbfcdx/dbfcdx1.c
    * source/rdd/dbfntx/dbfntx1.c
      * added relational methods definitions to func table
    * contrib/rdd_ads/ads1.c
      * added relational methods definitions to func table
      * fixed adsOrderCreate - now
      * INDEX ON expression TAG tag TO indexFileName
      * creates a compound CDX index, if indexFileName is the same, as
      * current dbf name

2000-07-04 04:05 UTC+0100 Victor Szakats <info@szelvesz.hu>

   * contrib/odbc/bld_b32.bat
     ! Fixed.

   * source/rtl/tget.prg
     ! Fix by Chen Kedem applied for __GET()/_GET_()/GetNew() not passed
       setget block bug.

   * source/rtl/filesys.c
     ! Fixed bug in hb_fsCurDir[Buff](), it's now stripping the
       leading "/" path delimiter.

   * source/rtl/memoline.c
     % Minor opt.

   * source/rtl/gtsln/kbsln.c
   * source/rtl/gtsln/keytrans.c
   * source/vm/classes.c
     * Formatting.

2000-07-03 20:00 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *source/vm/garbage.c
        * minor change

    *source/vm/hvm.c
        * changed order of the GC call on exit - it is now called before any
        stack and memvars table releasing

    *tests/onidle.prg
        * fixed to demonstrate the latest changes

2000-07-03 13:40 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *source/vm/memvars.c
        * the table of memvars is not checked for references from the GC
        after all memvars are released

2000-07-03 11:40 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *include/hbpp.h
    *source/pp/ppcore.c
        * fixed declaration and definition of hb_pp_SetRule() - Watcom C/C++
        was recognizing it as overloading of the function

    *source/rtl/gtdos/gtdos.c
        * fixed low level processor ports access for Watcom C/C++

    *source/vm/garbage.c
        * fixed possible endless loop in hb_gcCollectAll()

    *source/vm/arrays.c
        * arrays are no longer released recursively during the garbage
        collecting

    *source/rdd/dbfntx/dbfntx1.c
        * fixed warning for unused variable

2000-07-02 12:30 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *source/vm/garbage.c
    *source/vm/memvars.c
        * codeblocks that are self referencing (cb := {|| cb}) are
        correctly released by the garbage collector

2000-07-01 23:55 UTC-0500 Paul Tucker <ptucker@sympatico.ca>
   * source\rdd\dbfntx\dbfntx1.c
     * added a few casts

2000-06-30 08:50 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *source/vm/garbage.c
        * fixed a bug when releasing the last memory block

    *source/vm/hvm.c
        * fixed an order of subsystems shutdown and items relasing

2000-06-29 10:50 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *source/vm/classes.c
        *fixed to stop handling of the garbage collector requests
        (hb_clsIsClassRef()) after all classes were released

    *source/rtl/setkey.c
        *fixed to lock codeblocks stored internally to prevent deallocation
        by the garbage collector

2000-06-28-23:20 Luiz Rafael Culik <culik@sl.conex.net>
*contrib/hbzlib/zipfile2.c
   -hb___MyMkdir() Functions. All Calls to this function replaced with hb_fsMkDir()
   *some bugs fixed
*contrib/hbzlib/hbzip.h
   -removed hb___MyMkdir() function declaration

2000-06-27 11:10 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *include/hbapi.h
    *source/rtl/errorapi.c
    *source/rtl/idle.c
    *source/vm/classes.c
    *source/vm/garbage.c
        *the garbage collector is now aware of all items stored internally
        in class related structures

2000-06-27-22:45 Luiz Rafael Culik <culik@sl.conex.net>
  *Changelog
     *Renamed to ChangeLog.008 and Started a new one
  *contrib/hbzlib/zipfile2.c
   contrib/hbzlib/zlibapi.c
     *Added code to be used by other platforms
  +contrib/hbzlib/makefile
     *makefile for gnu compiler
   * source/pp/pragma.c
   * contrib/dot/pp_harb.ch
   * tests/inline_c.prg
     * STOPDUMP renamed as ENDDUMP (with Ron permission)

2001-12-21 08:40 UTC-0300 Luiz Rafael Culik <culik@sl.conex.net>
   * utils/hbmake/hbmake.prg
    * small fix

2001-12-21 07:50 UTC-0300 Luiz Rafael Culik <culik@sl.conex.net>
  * source/rtl/filesys.c
    * hb_fsmkdir,hb_fsChdir,hb_fsRmdir,hb_fsDelete,hb_fsRename,hb_fsCurdirBuff()
      now use Win32 API calls
   * utils/hbmake/hbmake.prg
     ! Disabled profile
   * utils/hbmake/hbmutils.prg
     * An small clean up
   * ChangeLog
     * Renamed to ChangeLog.012 and started an new one
2006-02-15 13:50 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hvm.c
    ! fixed memory leak I introduced changing Ryszard modifications

      need such functionality yet
  + harbour/ChangeLog.015
  * harbour/source/vm/debug.c

  * harbour/harbour.spec
  * harbour/bin/hb-func.sh
    * some modification in xhb* scripts building - adding passing
      predefined compiler and linker switches
  * harbour/source/vm/hvm.c
    * minor code cleanup

2006-09-03 18:55 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapicls.h
  * harbour/source/vm/classes.c
  * harbour/source/vm/hvm.c
  * harbour/tests/overload.prg
    + added support for overloading [] in assignment operation

2006-09-03 16:30 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/ChangeLog
  + harbour/ChangeLog.016
    * new ChangeLog file created
  * harbour/include/hbver.h
    * updated version number to 0.47.0
  * tagged CVS as build47
