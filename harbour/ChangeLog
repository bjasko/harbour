19990723-07:45 CET Matthew Hamilton
  * tests/working/inifiles.prg
    Even newer version


19990723-02:45 GMT+2 Ryszard Glab <rglab@imid.med.pl>

        *source/compiler/harbour.y
         * corrected generation of symbols for memvar variables
         * PARAMETERS are handled now in the same way as in Clipper
          (if PARAMETERS statement is repeated in the same function then
          the first parameter listed is always equal to the first argument,
          the second parameter is initialized with the second argumennt etc)

        *source/rtl/memvars.c
         * reference to variables are correctly updated
         * item returned from hb_arrayGet() is of  proper type now and
          is properly released

        *source/rtl/codebloc.c
         * changed to use second parameter of hb_MemvarValueNew()

        *source/vm/dynsym.c
         * symbols created dynamically are properly released now
          (SYM_ALLOCATED is now type casted to new type SYMBOLSCOPE - the
          scope value (char) was compared with (int) previously and it was
          never true (char was extended to int -1)

        *include/hbdefs.h
         + added new SYMBOLSCOPE typedef

        *include/extend.h
         * changed to support new SYMBOLSCOPE typedef
         * replaced void *pDynSym with struct _DYNSYM *pDynSym 

        *tests/working/memvars.c
         + added noew code to test memvars
         * it shouldn't report the unreleased memory blocks now

19990722-10:50 EDT Paul Tucker <ptucker@sympatico.ca>
    *source/rtl/dir.c
       * corrected hang when passing a second param to dirtest.

19990722-16:30 GMT+2 Ryszard Glab <rglab@imid.med.pl>

    *source/compiler/harbour.y
	* symbol names are no longer released for the second time
	 (it caused that DJGPP hanged in 'free' function)
	 
    *source/hbpp/makefile
	+ added preproc.c
	
    *source/hbpp/harb.h
	- changed to definie LONG and ULONG typedefs if there is no 
	 HB_DEFS_H_ defined (these typedefs are defined in hbdefs.h)
	 
    *source/hbpp/preproc.c
	- removed nested /* */

    *tests/working/Makefile
	- removed statics1.prg and statics2.prg because these file have to
	 be linked together into an executable (we should change Makefile
	 architecture to support it)
	- removed testpre.prg (it requires hbpp library however this library
	 cannot be linked because of duplicated symbol 'hb_strAt' defined
	 in rtl library also) -the changes in source/hbpp/*.c was an attempt
	 to get it working.
	 
19990722-14:30 CET Matthew Hamilton
  * tests/working/inifiles.prg
    cFile -> @cFile in fRead statement


19990722-03:30 GMT+2 Ryszard Glab <rglab@imid.med.pl>

    *source/rtl/classes.c
    *source/rtl/console.c
    *source/rtl/errorapi.c
    *source/rtl/itemapi.c
    *source/rtl/transfrm.c
        * changed GetDynSym to hb_GetDynSym
        * changed FindDynSym to hb_FindDynSym

    *source/runner/runner.c
        * changed FindDynSym to hb_FindDynSym

    *source/vm/dynsym.c
        * changed GetDynSym to hb_GetDynSym
        * changed NewDynSym to hb_NewDynSym
        * changed FindDynSym to hb_FindDynSym
	+ added initialization of hMemvar and hArea

    *source/vm/hvm.c
        * changed GetDynSym to hb_GetDynSym
        * changed NewDynSym to hb_NewDynSym
        * changed FindDynSym to hb_FindDynSym
        + added support for PUBLIC and PRIVATE variables and PARAMETERS
	  (not finished yet)

    *include/extend.h
	* changed definition of DYNSYM
        + added definition of VS_MEMVAR, VS_PUBLIC, VS_PRIVATE

    *include/init.h
        + added again 'static' declaration (only for WATCOM compiler
          at this moment)

    *config/dos/watcom.cf
	* changed to not link and lib in no case exact mode
	
    *include/pcode.h
        - removed unused opcode HB_P_DEFSTATIC
        + added HB_P_PARAMETER to create memvar variables that store
         function/procedure parameters

    *source/rtl/codebloc.c
        *updated to support current memvars implementation

    *source/rtl/memvars.c
        + added support for PUBLIC and PRIVATE statements
        + new __PUBLIC and __PRIVATE functions that can be accessed
          from PRG code to create memvar variables
	+ support for PARAMETERS statement

	NOTE: It is still in development! There is something wrong with
	reference counting (see tests/working/memvar.prg)

    *source/compiler/harbour.y
        + added support for PUBLIC and PRIVATE variables
	+ added support for PARAMETERS statement

    *source/compiler/harbour.l
	+ added full support for PUBLIC, PRIVATE and PARAMETERS
	* LOCAL can now be used in abbreviated form

    +tests/working/memvar.prg
        + tests memvar variables
	 (NOTE: it can show unreleased memory blocks)

    *tests/working/Makefile
        + added memvar.prg

Wed Jul 21 17:39:35 1999  Gonzalo A. Diethelm  <Gonzalo.Diethelm@jda.cl>

	* include/hbsetup.h: 
	Added Win32 as a case when CR/LF must be output for a new line to
	appear on the screen.

19990721-22:36 CET Patrick Mast <harbour@PatrickMast.com>
  * Makefile.vc errorsys compiles with /iinclude now

19990721-10:25 CET Eddie Runia
  * source/hbpp/hbpp.c
    Old lookup returned for '??'. Follow (ER) for the change

Wed Jul 21 15:36:04 1999  Gonzalo A. Diethelm  <Gonzalo.Diethelm@jda.cl>

	* source/compiler/harbour.y: 
	Moved printing the "build..." message after the command line
	arguments have been checked, so that if the user specifies -q, it
	is not shown.
	
	* source/vm/hvm.c: 
	Got rid of a couple of warnings.

	* include/Makefile: 
	* tests/working/Makefile: 
	Updates list of files.
	
	* include/init.h: 
	* include/initsymb.h: 
	* source/hbpp/preproc.c: 
	Updated use of RCS Id keyword.
	
19990721-18:39 GMT+1 Paul Tucker / Bruno Cantero <bruno@issnet.net>
  * source/compiler/harbour.y
    Added support for empty arguments in functions.

19990721-15:50 CET Eddie Runia <eddie@runia.com>
  * source/rtl/classes.c; source/rtl/transfrm.c
    Clean-up of source

19990721-04:12 EDT Paul Tucker <ptucker@sympatico.ca>
  * source/rtl/gtapi.c
    * corrected color string Underline handling.
    * Much more color compatibility even for some undocumented
      behaviour.
      The only inconsistancy is for ie: ("w+/n*")  Clipper returns
      "w+*/n" - Harbour returns "w+/n*" This is on purpose, as it
      agrees with the documentation instead of observed behaviour.
      AFAIK, the only thing that may need change is for mono monitors.
      Is anyone using one?

19990721-09:30 CET Eddie Runia <eddie@runia>
  * source/vm/hvm.c
    Copy & Paste error

19990721-09:00 CET Jose Lalin
  * source/vm/hvm.c
    + added support for concatenation operator "-"
    + added support to generate correct runtime errors in functions:
    And(), Equal(), Greater(), GreaterEqual(),
    Inc(), Instring(), Less(), LessEqual(), Not(),
    NotEqual(), Minus(), Or(), Plus(), HB_LEN()
  + tests/working/strsub.prg
    tests for operator "-" on strings

19990721-09:00 CET Matthew Hamilton
  * tests/working/inifiles.prg
    * Case sensitive & Speed improvement

19990720-09:38 Alexander Kresin
  * source\hbpp\hbpp.c
    * Fixed bugs related to nested #ifdef, #ifndef
    * Fixed bug with '??' command

19990720-17:15 EDT David G. Holm <dholm@jsd-llc.com>
  * funclist.txt
    * Updated the status of several functions

19990720-20:55 GMT+1 Bruno Cantero <bruno@issnet.net>
  * makefile.b31
    Changed fixflex to bin\fixflex.
  * harbour.b31
    Added /iinclude to compile prg's.

19990720-20:10 CET Eddie Runia <eddie@runia.com>
  * source/vm/hvm.c
    wsize =*( (WORD *) ... part removed.

19990720-13:40 EDT Paul Tucker <ptucker@sympatico.ca>
  * source/rtl/gtapi.c
    * If a color string of ("r/b,b/r" ) is used, the
      fifth param is set equal to the second. (as in clipper)

19990720-13:30 EDT Paul Tucker <ptucker@sympatico.ca>
  * source/rtl/gtapi.c
    * implimented color attribute in gtWrite and gtScroll.
      This is the last selected color set via gt_ColorSelect()

19990721-16:35 CET David G. Holm <dholm@jsd-llc.com>
  * source/compiler/harbour.y
    ! Correct _StdFunc entty for INKEY to allow no parameters
    - Removed _StdFunc entry for SET
    * Display build date for include/version.h instead of a season

19990721-15:10 CET Felipe Coury
  + bldodbc.bat; hbodbc.b32; source/odbc/bld32exe.bat; source/odbc/harbour.mdb;
    source/odbc/hb32.bat; source/odbc/odbc.c; source/odbc/odbc.txt;
    source/odbc/odbc32.def; source/odbc/sql.ch; source/odbc/sql.h;
    source/odbc/sqlext.h; source/odbc/sqltypes.h; source/odbc/testodbc.prg
    First version of ODBC implemented.

19990720-14:35 CET Matthew Hamilton
  * tests/working/inifiles.prg
    New version installed

19990720-09:55 CET Eddie Runia <eddie@runia.com>
  * source/rtl/files.c
    #include <errno.h> added for __BORLANDC__

19990720-09:30 CET Eddie Runia <eddie@runia.com>
  * tests/working/run_all.bat
    %1 exchanged for test_all

19990719-17:55 EDT Paul Tucker <ptucker@sympatico.ca>
  * source/rtl/gtapi.c
    - removed temp init line now that init order is fixed.
    + added call to gtDone from hb_gtExit
  * source/rtl/setcolor.c
    * removed a comma
  * tests/working tstcolor.prg
    + Added 'numeric' color example.

19990719-16:50 EDT David G. Holm <dholm@jsd-llc.com>
  * config/dos/bcc31.cf
    + Added -DHARBOUR_USE_GTAPI and -DHARBOUR_USE_DOS_GTAPI
      to the C preprocessor options
  * include/set.h
    + Added prototypes for hb_consoleInitialize() and
      hb_consoleRelease(), because console doesn't own
      an include file and these two functions were added
      to allow synchronization with hb_setInitialize() and
      hb_setRelease(), both of which are prototyped here
  * include/version.h
    * Updated build to 29, set revision to "", and set date
      to 1999, 7, 19, in anticipation of a new public release
  * source/compiler/harbour.y
    + Added #include "version.h"
    * Changed version printout to use hb_build from version.h
    * Changed version printout us use "Summer" instead of "Spring"
    * Removed newline from middle of version printout
    * Moved prinout of version ahead of command line option checks,
      so that the version is always displayed, like in Clipper
  * source/rtl/console.c
    + Added hb_consoleRelease() function that calls hb_gtExit()
    * Converted InitializeConsole() from an HB_CALL_ON_STARTUP
      function to a normal function named hb_consoleInitialize()
  * source/rtl/setcolor.c
    - Removed HARBOUR GTEXIT() function
  * source/vm/hvm.c
    + Added call to hb_consoleInitialize() immediately following call to
      hb_setInitialize and added call to hb_consoleRelease() immediately
      prior to calling hb_setRelease().
  * tests/working scroll.prg
    * Changed the introductory text message
  * tests/working/tstcolor.prg
    - Removed GTEXIT() call

19990719-16:15 EDT Paul Tucker <ptucker@sympatico.ca>
   * source/rtl/gtapi.c
     * Minor change to catch last color parameter
       that may be empty

19990719-15:55 EDT Paul Tucker <ptucker@sympatico.ca>
   * source/rtl/gtapi.c
     * Added support for 'numeric' color strings
       ie: "1/7,8/15"

19990719-19:28 GMT+2 Ryszard Glab <rglab@imid.med.pl>
    *source/compiler/harbour.y
     +added 'PushFunCall' function to push the name of function. This
      function checks if passed name is an abbreviation of reserved
      function. If the abbreviation is used then the full name is pushed.
     
19990719-18:33 Antonio Linares <alinares@fivetech.com>
   * source/rtl/classes.c
     * enhanced methods amount meanwhile DictRealloc() is built.
     * several defines missing.
   * source/rtl/extend.c
     * new hb_xsize() function needed for classes.c DictRealloc() implementation.

19990719-18:30 GMT+2 Ryszard Glab <rglab@imid.med.pl>
    *source/compiler/harbour.y
     -removed call for non ANSI C 'stricmp'
     *changed to support abbreviated functions' names
     
19990719-11:40 EDT Paul Tucker <ptucker@sympatico.ca>
    *source/rtl/gtapi.c
     * Changed call in hb_gtinit() to pass the
       literal initial color setting in case
       the GT system is initialised prior to Set
     * Skipped color params in a string now keep
       their previous value.  ie ",,,r/b"
    *source/rtl/set.c
     * corrected parameter passing in _SET_COLOR case.

19990719-10:40 EDT Paul Tucker <ptucker@sympatico.ca>
    *source/compiler/harbour.y
     * replace CheckArgs() as supplied by Jose Lalin -
       with a few minor tweaks.

19990719-16:00 GMT+2 Ryszard Glab <rglab@imid.med.pl>
    *source/rtl/msgxxx.c
     +added support for Polish national messages

    *source/rtl/natmsg/msgpl852.c
    *source/rtl/natmsg/msgplmaz.c
     * corrected names of months

19990719-03:10 EDT David G. Holm <dholm@jsd-llc.com>
  * config/os2/icc.cf
    + Added /Gs+ option to enable runtime stack checking
  * include/dates.h
    + Added prototype for hb_dow()
  * include/gtapi.h
    + Added prototype for hb_gtExit()
  * include/set.h
    + Added prototype for hb_setColor()
    * Changed hb_set.HB_SET_COLOR from char * to char[64]
  * source/compiler/harbour.y
    * Replaced _StdFunc table with new table supplied by Jose Lalin,
      while keeping the entry for SET that Paul Tucker had CVSed
  * source/hbpp/hbpp.c
    * Made mpatt and rpatt buffers in ParseCommand() static.
  * source/hbpp/hbppint.c
    * Allocate sBuffer in Hp_Parse() using _xgrab() (and
      release with _xfree() before exiting)
  * source/rtl/console.c
    + Added call to hb_gtInit() to InitializeConsole()
    - Removed all gt...() calls from InitializeConsole()
  * source/rtl/gtapi.c
    + Added gt...() calls that used to be in InitializeConsole()
      to hb_gtInit() and also added a call to gtInit()
    * Renamed hb_gtexit() to hb_gtExit() to match Harbour style
    * Converted three // style comments to /* style comments */
  * source/rtl/set.c
    * Simplified handling of HB_SET_COLOR by just calling hb_setColor()
    * Made changes related to hb_set.HB_SET_COLOR now being char[64]
  * source/rtl/setcolor.c
    + Added #include <set.h>
    * Replaced gt prototypes with #include <gtapi.h>
    * Changed hb_SetColor() to hb_setColor() to match Harbour style
    * Changed hb_setColor() to use hb_set.HB_SET_COLOR instead of
      allocating a buffer and requiring the caller to free the buffer
    + Added conditional logic for not using the GT API
  * source/rtl/gt/gtwin.c
    - Removed call to hb_gtInit()
  * source/tools/dates2.c
    + Added #include <dates.h>
    ! Added missing semicolon to HB_INIT_SYMBOLS_END()
    - Removed prototypes for hb_dow() and hb_dateDecode()
  * tests/working/Makefile
    - Removed strings4.prg
    + Added tstcolor.prg
  * tests/working/empty.prg
    - Removed call to empty() with no parameters, because
      it now results in a compile error
  - tests/working/string4.prg
    - Removed this test program, because Harbour now checks for
      the correct number of arguments when compiling

19990719-00:55 EDT Paul Tucker <ptucker@sympatico.ca>
  * source/rtl/set.c
    * Trap for NIL param in Set( _SET_SETCOLOR, NIL )

19990719-00:12 EDT Paul Tucker <ptucker@sympatico.ca>
  * corrected new parameter check
    added {"SET",1,3}
    also increased strncmp len param by 1 to get null byte for
    complete match.

19990718-22:25 EDT Paul Tucker <ptucker@sympatico.ca>
  * source/rtl/gtapi.c
    * corrected returned color strings so pair ordering is
      the same as Clipper

19990718-21:20 EDT Paul Tucker <ptucker@sympatico.ca>
  * source/rtl/gt/gtwin.c
    * call hb_gtinit from gtinit
  * source/rtl/gtapi.c
    * changed gtSetColorStr and gtGetColorStr to support
      clipper compatible color strings.
  * source/rtl/set.c
    * changed _SET_COLOR support to tie in to SetColor()
  * source/rtl/setcolor.c
    * cleaned up - added HB_GTEXIT till proper exit
      support is working
  + tests/working/tstcolor.prg
    test for SetColor()
  * makefile.b16
    makefile.b31
    makefile.b32
    makefile.icc
    source/rtl/makefile
    * added setcolor
  * makefile.vc
    * added setcolor
    * changed -o$(RTL_DIR) -o$(**D)
    * added missing datesx and copyfile
    * removed duplicate errorsys from harbour.lib obj list

19990718-20:45 CET Eddie Runia <eddie@runia.com>
  - source/rdd/rdd.api
    And removed again

19990718-20:35 CET Jose Lalin
  * source/compiler/harbour.y; include/hberrors.h
    Argument checking for standard functions added. Thanks to Ryszard

19990718-20:30 CET Eddie Runia <eddie@runia.com>
  + source/rdd/rdd.api
    Restore from the attic

19990718-13:06 EDT Paul Tucker <ptucker@sympatico.ca>
  + source/rtl/setcolor.c
    * my first cvs upload
    * I'll work on adding this to the various makefiles
      as well as the required support code in gtapi.c
      (not posted yet)

19990718-18:05 CET Patrick Mast <harbour@PatrickMast.com>
  * Release of Build #28
  * version.h, updated build version

19990718-17:33 CET Patrick Mast <harbour@PatrickMast.com>
  * /source/rtl/errorsys.prg
    changed #include "include\error.ch" back into #include "error.ch"
    changed makefile.b32 to compile PRG's with switch iinclude

19990718-15:44 CET Patrick Mast <harbour@PatrickMast.com>
  * /test/working/buildvc.bat For PRG -> EXE with MSVC++
  * buildvc.bat Includes MASM'ing Symbols.obj now

19990718-15:25 CET Bruno Cantero / Eddie Runia
  * source/vm/hvm.c
    PushString endian ordered not determined by compiler but by HVM

19990718-14:13 CET Patrick Mast <harbour@PatrickMast.com>
  * /source/hbpp
    latest files from Alexander. With these files Build32.bat works ok.

19990718-14:22 CET Eddie Runia <eddie@runia.com>
  * tests/working/run_all.bat
    Harbour compile added

19990718-14:00 CET Eddie Runia <eddie@runia.com>
  * build32.bat
    bldhbpp.bat called
  * makefile.b16; makefile.b31; makefile.b32; makefile.icc; makefile.vc
    dates2 included
  * makedos.env
    very strange error. msgxxx could not include natmsg/msguk.c.
    I haven't seen this error before, -Isource/rtl was added to resolve
    the problem
  * source/rtl/dates.c; source/rtl/descend.c; source/rtl/hardcr.c;
    source/rtl/mtran.c
    Copyright Jose Lalin added
  * source/rtl/msgxxx.c
    Esparanto added
  + source/rtl/natmsg/msgeo.c
    Esparanto added
  + source/tools/dates2.c
    File from Jose Lalin added.
    The following modification have been made :
    * Symbol table added
    * Bug as reported by Andi resolved
    * Casts added to eliminate warnings produced by DJGPP
  * source/tools/makefile
    dates2.c added
  * include/initsymb.h; source/runner/runner.c; source/vm/initsymb.c
    Dates2 added to file list.
  + tests/working/dates4.prg
    Test program tools/dates2 added
  + tests/working/run_all.bat
    Batch file for testbench added. Will run test_all.prg and subsequently
    run all symbols

19990716-20:00 EDT David G. Holm <dholm@jsd-llc.com>
  * config/rules.cf
    + Added ifeq section for BCC, which requires that the output
      file be listed ahead of the input file on the command line
      (at least for version 3.1)
  + config/dos/bcc31.cf
    + New GNU Make System module for Borland C++ 3.1
      (adapted from original config/win32/bcc32.cf)
  * config/dos/global.cf
    + Added 'if not exist' to both 'dirbase::' commands
    + Added 'if exist' to all deletes of a single file type
  * config/win32/bcc32.cf
    * Applied several changes from config/dos/bcc31.cf,
      but remains untested
  * doc/gmake.txt
    + Added dos/bcc31
  * source/hbpp/hbpp.c
    ! Temporary fix to avoid an incorrect "Cycled #define" error
  * source/hbpp/hbppint.c
    ! Use of exit() warrants inclusion of stdlib.h for all compilers
  * source/rtl/environ.c
    + Added RUN() support for MSC, IBMCPP, and GCC for OS/2
  * tests/working/dosshell.prg
    + Added support for OS/2
  * tests/working/procline.prg
    - Removed unneeded 'local a' that I accidentally left in earlier

Fri Jul 16 17:53:35 1999  Gonzalo A. Diethelm  <Gonzalo.Diethelm@jda.cl>

	* source/rtl/gt/gtwin.c:
	Added the possibility to log everything to a file; this made it
	possible for me to find out what was wrong with GTwin (which is,
	noone was calling gtInit()).
	
	* source/rtl/console.c: 
	Call gtInit() as the first console initialization. This finally
	made it possible to have a working GT on Win32 with gcc (it should
	work with other compilers too).

19990716-20:43 Alexander Kresin
  * source\hbpp\hbpp.c
    * Problem with C++ Builder resolved
    
19990716-18:10 CET Eddie Runia <eddie@runia.com>
  + tests/working/clasname.prg
    Test program for clasname implemented. Warning : Just a partial
    implementation
  * source/vm/hvm.c
    void Do() changed so all types call GetMethod
  * source/rtl/classes.c
    Small changes so messages to non-objects are properly handled.

19990716-16:00 CET Eddie Runia <eddie@runia.com>
  * source/rtl/transfrm.c
    Memory allocation error resolved

19990716-15:00 CET Eddie Runia <eddie@runia.com>
  * source/rtl/math.c
    Round() : One byte more should be allocated
  * source/rtl/copyfile.c; source/runner/runner.c; source/vm/initsymb.c;
    include/initsymb.h
    __CopyFile added as symbol
  * source/rtl/console.c
    DevOutPict() added as symbol

19990716-14:30 CET Eddie Runia <eddie@runia.com>
  * source/runner/runner.c
    Typo corrected

19990716-13:00 CET Eddie Runia <eddie@runia.com>
  * include/initsymb.h; source/vm/initsymb.c; source/runner/runner.c;
    include/run_exp.h
    The runner is back on-line :-))

19990716-10:54 Alexander Kresin
  * source\hbpp\hbpp.c
  * source\hbpp\table.c
    * fixed some bugs, simplified expressions in SearnRep()

19990716-06:45 GMT+1 Ryszard Glab <rglab@imid.med.pl>

        *source/compiler/harbour.y
         * corrected generation of proper static frame for functions
           (the values of static variables defined in different modules
           are no longer overlapped)

        *tests/broken/statics1.prg
        *tests/broken/statics2.prg
         -moved to tests/working directory

        *config/dos/watcom.cf
         * corrected to support HB_*_COMPILE variables

        *config/global.cf
        *config/rules.cf
         * removed duplicated definition of HB variable
         * HB_*_COMPILE variables are defined now before architecture
           and compiler specific config file is included (it allows to change
           these variables for specific architecture/compiler requirements)

        *doc/codebloc.txt
         + added description of an incompatibility with Clipper

19990715-23:40 CET Eddie Runia <eddie@runia.com>
   * tests/working/arrays.prg;
     tests/working/dosshell.prg;
     tests/working/dupvars.prg;
     tests/working/keywords.prg;
     tests/working/linecont.prg;
     tests/working/linecont.prg;
     tests/working/longstr2.prg;
     tests/working/spawn.prg;
     tests/working/spawn2.prg;
     tests/working/test10.prg;
     tests/working/testid.prg;
     tests/working/test_all.prg
     //NOTEST should be the first line

19990715-23:14 CET Patrick Mast <harbour@PatrickMast.com>
   All files for the Preprocessor lib from Felipe Coury <fcoury@flexsys-ci.com>
   + source/hbpp/preproc.c
   + doc/hbpplib.txt
   + tests/working/testpre.prg
   + Hbpplib.b32
   + Bldhbpp.bat
   * changed tests/working/bld32exe.bat (to include hbpp.lib)

Thu Jul 15 17:32:29 1999  Gonzalo A. Diethelm  <Gonzalo.Diethelm@jda.cl>

        * config/rules.cf:
        Added support for a couple of environment variables for the user
        to specify additional flags for compilation. They are C_USR and
        PRG_USR. An example using bash:

          export C_USR='-DHARBOUR_USE_GTAPI -DHARBOUR_USE_WIN_GTAPI'
          make -w

        * include/hbdefs.h:
        * source/rtl/gt/gtwin.c:
        Modified these files to be able to compile gtwin.c with gcc. It
        compiles and links, but it dumps core on execution...

19990715-16:30 Ryszard Glab <rglab@imid.med.pl>

    *source/compiler/harbour.l
     * added support for
         case ::variable
         while ::variable
     * corrected line numbering in NEXT and END keywords
     * changed ';' (line continuation logic)

    *source/compiler/harbour.y
     * corrected line numbering (opcode for line number is no longer placed
       inside an expression)

    *tests/working/procline.prg
     * corrected line numbering

    *config/linux/gcc.cf
    *config/linux/global.cf
     * corrected to support the latest changes in GNU make system

19990715-09:50 CET Patrick Mast <harbour@PatrickMast.com>
   *makefile.vc
    * Changed output for PRG's that needed to be compiled with Harbour
    * Deleted 'Classes.Prg' lines. (No need for them)
    * Added parameter -n for compiling asort.prg
    * Added parameter -n for compiling errorsys.prg
    * Deleted 'GenObj.c' lines (No need for them)
    * Changed 'Stringp.c' line $(RTL_DIR) should be $(TOOLS_DIR)
    = Works fine with MSVC++ 6.01 now

19990715-09:50 CET Patrick Mast <harbour@PatrickMast.com>
   *source/rtl/environ.c
    changed all 'defined(__MSC__)' to 'defined(__MSC__) || defined(_MSC_VER)'
    It compiles with MSVC++ 6.01 now

19990714-22:45 EDT David G. Holm <dholm@jsd-llc.com>
  * config/dos/djgpp.cf
    * Modified to support new HB_*_COMPILE variables
  * config/dos/global.cf
    - Removed initialization of old HB_*_DIR variables
  * config/dos/watcom.cf
    * Modified to support new HB_*_COMPILE variables
  + config/os2/dir.cf
    + New GNU Make System module for OS/2
  + config/os2/gcc.cf
    + New GNU Make System module for GCC for OS/2
  + config/os2/global.cf
    + New GNU Make System module for OS/2
  + config/os2/icc.cf
    + New GNU Make System module for IBM Visual Age C++ for OS/2
  + config/os2/install.cf
    + New GNU Make System module for OS/2
  * doc/gmake.txt
    + Added documentation for os2/gcc and os2/icc
    * Changed names of installation variables to HB_*_INSTALL
    * Changed NOTES section to reflect new 2-step process for a clean build
  * include/hbsetup.h
    + Added documentation of new #define for HARBOUR_GCC_OS2, which is used
      by config/os2/gcc.cf in order to ensure that the GCC build of Harbour
      for OS/2 gets created as OS_DOS_COMPATIBLE and not OS_UNIX_COMPATIBLE
    + Added platform #defines for the GT API for use by the GNU Make System
  * include/set.h
    - Removed obsolete global variable hb_set_fixed and declaration for
      obsolete HB_SETFIXED()
  * source/compiler/harbour.y
    + Added #ifdef guard for GCC around generated #pragma startup directive
      (like the #ifdef guard that was added to the runtime source modules)
    ! Display entire command line option when reporting invalid options
      (like Clipper, instead of leaving off the option switch character)
  * source/hbpp/hbpp.c
    + Added grouping parentheses as a safeguard around the one use of the
    isname() macro parameter that didn't already have a grouping
    ! The use of 'exit(1);' requires that stdlib be included for all compilers
  * source/hbpp/table.c
    ! Changed all _SET_<name> constants to match Harbour instead of Clipper
  * source/rtl/Makefile
    + Added new gtxxx.c module
  * source/rtl/environ.c
    + Added OS() support for GCC when using OS/2, because OS/2 uses 'version'
      as the version indicator and uses 'release' as a revision indicator
  * source/rtl/files.c
    + Only use S_IRUSR and S_IWUSR flags when creating a read/write file,
      per correction supplied by Dave Pearson
  + source/rtl/gtxxx.c
    + Added new module to allow the GNU Make system to build the GT API
  * source/rtl/set.c
    + Added #include <sys/types.h> for GCC, per warning generated by GCC for
      OS/2 when sys/types.h was not included
    - Removed obsolete global variable hb_set_fixed
  * source/rtl/strings.c
    ! Replaced use of obsolete hb_set_fixed with hb_set.HB_SET_FIXED
  * tests/working/codebloc.prg
    ! Corrected the spelling of 'Trying'
  * tests/working/procline.prg
    ! Corrected the expected ProcLine() line numbers
  * tests/working/testcgi.prg
    ! Initialize cRes variable to "" to get rid of run time error on line 280

Wed Jul 14 20:02:55 1999  Gonzalo A. Diethelm  <Gonzalo.Diethelm@jda.cl>

        * config/bin.cf:
        * config/c.cf:
        * config/global.cf:
        * config/header.cf:
        * config/lib.cf:
        * config/rules.cf:
        * config/win32/bcc32.cf:
        * config/win32/gcc.cf:
        * config/win32/icc.cf:
        * config/win32/msvc.cf:
        Now there are two sets of variables to control compilation and
        installation: HB_*_COMPILE points to where to get all the files
        (binaries, includes, etc.); if not defined, it will pick them off
        the working repository. HB_*_INSTALL points to where you want to
        install the files (binaries, includes, etc.) when you issue a
        "make install".

Wed Jul 14 18:20:24 1999  Gonzalo A. Diethelm  <Gonzalo.Diethelm@jda.cl>

        * config/global.cf:
        * config/rules.cf:
        * config/dos/djgpp.cf:
        * config/linux/gcc.cf:
        * config/win32/gcc.cf:
        * config/win32/msvc.cf:
        Now it is not necessary to "install" harbour anywhere.
        If you do NOT define HB_BIN_DIR, HB_INC_DIR and HB_LIB_DIR, it
        uses all the files (binaries, headers, libraries, etc.) right off
        the working repository.

        * include/Makefile:
        Updated list of files.

19990714-12:01 Alexander Kresin
  * source\hbpp\hbpp.c
  * source\hbpp\hbppint.c
  * source\hbpp\hbppmain.c
  * include\hberrors.h
    * fixed some bugs, including those, needed for classes.ch

19990713-22:30 CET Eddie Runia <eddie@runia.com>
   - source/runner/run_exp.h
   + include/run_exp.h
     run_exp.h moved because of problem with BC 4.5

19990713-20:35 CET Eddie Runia <eddie@runia.com>
   * source/rtl/tclass.prg
     Changed standard message Super to __Super
   * tests/working/clsdata.prg
     Named class name used instead of Super


Tue Jul 13 14:06:03 1999  Gonzalo A. Diethelm  <Gonzalo.Diethelm@jda.cl>

        * include/classes.ch:
        * include/compat.h:
        * include/extra.h:
        * include/super.h:
        * source/rtl/natmsg/msgbas.c:
        * source/runner/run_exp.h:
        * source/runner/runner.c:
        * tests/broken/clasname.prg:
        * tests/broken/parexpr.prg:
        * tests/broken/statics1.prg:
        * tests/broken/statics2.prg:
        * tests/broken/vec1.prg:
        * tests/working/ainstest.prg:
        * tests/working/and_or.prg:
        * tests/working/array16.prg:
        * tests/working/arrayidx.prg:
        * tests/working/arrays.prg:
        * tests/working/arrindex.prg:
        * tests/working/atest.prg:
        * tests/working/box.prg:
        * tests/working/byref.prg:
        * tests/working/calling.prg:
        * tests/working/cdow.prg:
        * tests/working/clasinit.prg:
        * tests/working/classch.prg:
        * tests/working/classes.prg:
        * tests/working/clsdata.prg:
        * tests/working/cmphello.prg:
        * tests/working/codebl.prg:
        * tests/working/codebloc.prg:
        * tests/working/comments.prg:
        * tests/working/copyfile.prg:
        * tests/working/dates.prg:
        * tests/working/dates2.prg:
        * tests/working/dates3.prg:
        * tests/working/debugtst.prg:
        * tests/working/descend.prg:
        * tests/working/dirtest.prg:
        * tests/working/docase.prg:
        * tests/working/dosshell.prg:
        * tests/working/dupvars.prg:
        * tests/working/dynobj.prg:
        * tests/working/empty.prg:
        * tests/working/exittest.prg:
        * tests/working/extend1.prg:
        * tests/working/extend2.c:
        * tests/working/fib.prg:
        * tests/working/fileio.prg:
        * tests/working/filexist.prg:
        * tests/working/fornext.prg:
        * tests/working/fornext2.prg:
        * tests/working/funcarr.prg:
        * tests/working/guess.prg:
        * tests/working/hardcr.prg:
        * tests/working/hello.prg:
        * tests/working/ifelse.prg:
        * tests/working/ifinline.prg:
        * tests/working/inherit.prg:
        * tests/working/inifiles.prg:
        * tests/working/initexit.prg:
        * tests/working/inline.prg:
        * tests/working/instr.prg:
        * tests/working/iotest.prg:
        * tests/working/iotest2.prg:
        * tests/working/keywords.prg:
        * tests/working/linecont.prg:
        * tests/working/longstr.prg:
        * tests/working/longstr2.prg:
        * tests/working/mankala.prg:
        * tests/working/mathtest.prg:
        * tests/working/mtran.prg:
        * tests/working/multiarg.prg:
        * tests/working/nums.prg:
        * tests/working/objarr.prg:
        * tests/working/objasign.prg:
        * tests/working/objects.prg:
        * tests/working/operat.prg:
        * tests/working/os.prg:
        * tests/working/output.prg:
        * tests/working/overload.prg:
        * tests/working/passref.prg:
        * tests/working/procline.prg:
        * tests/working/procname.prg:
        * tests/working/readhrb.prg:
        * tests/working/recursiv.prg:
        * tests/working/returns.prg:
        * tests/working/round.prg:
        * tests/working/rtfclass.prg:
        * tests/working/rtl_test.prg:
        * tests/working/say.prg:
        * tests/working/scroll.prg:
        * tests/working/seconds.prg:
        * tests/working/set_num.prg:
        * tests/working/set_test.prg:
        * tests/working/spawn.prg:
        * tests/working/spawn2.prg:
        * tests/working/statfun.prg:
        * tests/working/statics.prg:
        * tests/working/strcmp.prg:
        * tests/working/strdelim.prg:
        * tests/working/strings.prg:
        * tests/working/strings2.prg:
        * tests/working/strings3.prg:
        * tests/working/strings4.prg:
        * tests/working/strip.prg:
        * tests/working/syserror.prg:
        * tests/working/t1.prg:
        * tests/working/test.prg:
        * tests/working/test10.prg:
        * tests/working/test_all.prg:
        * tests/working/testcgi.prg:
        * tests/working/testcopy.prg:
        * tests/working/testerro.prg:
        * tests/working/testfor.prg:
        * tests/working/testgt.prg:
        * tests/working/testhbf.prg:
        * tests/working/testhtml.prg:
        * tests/working/testid.prg:
        * tests/working/testinc.prg:
        * tests/working/testmem.prg:
        * tests/working/teststr.prg:
        * tests/working/testtok.prg:
        * tests/working/testvars.prg:
        * tests/working/testwarn.prg:
        * tests/working/transfrm.prg:
        * tests/working/val.prg:
        * tests/working/version.prg:
        * tests/working/while.prg:
        Added RCS Id keywords to all these files.
        Got rid of a few '//' comments in C/H files.
        Added include guards to a few H files.

Tue Jul 13 13:44:04 1999  Gonzalo A. Diethelm  <Gonzalo.Diethelm@jda.cl>

        * include/Makefile:
        * source/rtl/Makefile:
        * tests/working/Makefile:
        Updated list of files.

        * source/rtl/arrays.c:
        * source/rtl/classes.c:
        * source/rtl/console.c:
        * source/rtl/dates.c:
        * source/rtl/descend.c:
        * source/rtl/dir.c:
        * source/rtl/environ.c:
        * source/rtl/files.c:
        * source/rtl/hardcr.c:
        * source/rtl/math.c:
        * source/rtl/mtran.c:
        * source/rtl/set.c:
        * source/rtl/strings.c:
        * source/rtl/transfrm.c:
        Protected all uses of #pragma startup so they won't trigger a
        warning with gcc.

        * tests/working/inifiles.prg:
        Fixed a typo.

19990712-23:40 EDT David G. Holm <dholm@jsd-llc.com>
  * include/hbdefs.h
    ! The HB_HANDLE type was being defined in the #else section of a #ifdef
      __IBMCPP__ section instead of being defined for all compilers

19990712-19:30 EDT David G. Holm <dholm@jsd-llc.com>
  * tests/working/inifiles.prg
    ! new() no longer returns nil and now checks to see if the file was
      successfully opened or created before attempting to access it

19990712-19:15 EDT David G. Holm <dholm@jsd-llc.com>
  * source/rtl/files.c
    ! hb_fsCreate now creates files that are read-write instead of write-only
    ! hb_fsRead now returns 0 instead of 65536U after a read() error

19990712-22:00 Eddie Runia <eddie@runia.com>
  * source/rtl/classes.c
    Some more test data left in

19990712-19:10 Eddie Runia <eddie@runia.com>
  * tests/working/*.prg
    Little inconsistency corrected

19990712-16:52 Antonio Linares <alinares@fivetech.com>
  * include\classes.ch
    * Inheritance class creation command support
  * Enhanced tests\working\classch.prg classes.ch sample

19990712-15:54 Antonio Linares <alinares@fivetech.com>
  * include\classes.ch
    * Missing oClass:Create call
    * Fixed Method INLINE command
  * Added tests\working\classch.prg classes.ch sample

19990712-13:56 Antonio Linares <alinares@fivetech.com>
  * include\classes.ch
    * Added support for CONSTRUCTOR and INLINE Methods

19990712-10:52 Alexander Kresin
  * source\hbpp\hbpp.c
    * fixed some bugs of #translate implementation

19990711-21:30 Eddie Runia <eddie@runia.com>
   * source/rtl/classes.c
     Debug text removed


19990711-21:15 Eddie Runia <eddie@runia.com>
   * include/hbdefs.h; include/extend.h; source/rtl/codebloc.c;
     source/rtl/memvars.c
     HANDLE changed to HB_HANDLE

19990711-20:25 Ryszard Glab <rglab@imid.med.pl>
* include/init.h
 * all functions and variables declared in this file have to be 'static'

* source/vm/initsymb.c
 * added again #ifdef HARBOUR_STRICT_ANSI_C to call functions for
   symbols table initialization only when strict ANSI C compiler
   is used.

* include/extend.h
 + added HB_VALUE structure for storing memvars and detached locals
 + added hb_struMemvar used in HB_ITEM structure

* include/hbdefs.h
 + added IT_MEMVAR constant for values stored as memvar reference
 + added IS_MEMVAR macro

* source/vm/hvm.c
 * corrected support for detached local variables
 + added support for static variables passed by reference
 * variables passed by reference can be now chained and a reference to
   static variable can be mixed with a reference to local variable
   (this should work for memvar variables too)

* source/rtl/codebloc.c
 * corrected support for detached local variables
 + added copyright info

+ source/rtl/memvars.c
 + new file for PUBLIC and PRIVATE variables handling
   (it supports detached locals currently)

* source/rtl/classes.c
 * updated to use 'ItemUnRef()' function instead of direct stack access

* source/rtl/extend.c
 * updated to use 'ItemUnRef()' function instead of direct stack access
 * removed all if( pItem->type & IT_BYREF ) and replaced with the *only*
   correct if( IS_BYREF(pItem) )

* source/rtl/Makefile
 + added memvars.c file

- tests/working/codebl2.c
 - removed this file because its code is now in codebl.prg file

* tests/working/codebl.prg
 * added new code to test detached locals (donated by David Pearson)

* tests/working/byref.prg
 * added new code to test if Harbour handles variables passed by
   reference correctly

* tests/working/Makefile
 - removed codebl2.prg

* doc/codebloc.txt
 * updated information to reflect current implementation of codeblocks

+ config/win32/bcc32.cf
 + new file for Borland C/C++ Builder
   (This file is NOT TESTED yet)

+ config/win32/icc.cf
 + new file for IBM Visual Age C++
   (This file is NOT TESTED yet)

* makefile.b16
* makefile.b32
* makefile.icc
* makefile.vc
 + added source/rtl/memvars.c

* makedos.env
 * added '-I.' switch for compiler flags

* source/compiler/harbour.l
 - removed #include "./harboury.h" (it is now handled by makedos.env)

* source/tools/stringp.prg
 * corrected bug in line 101 (':=' should be here instead of '+='

19990710-23:15 Alexander Kresin
  * source\hbpp\hbpp.c
    * fixed some bugs - now we can use classes.ch
  Old Changelog renamed to Changelog.001
  + ChangeLog
   * source/pp/pragma.c
   * contrib/dot/pp_harb.ch
   * tests/inline_c.prg
     * STOPDUMP renamed as ENDDUMP (with Ron permission)

2001-12-21 08:40 UTC-0300 Luiz Rafael Culik <culik@sl.conex.net>
   * utils/hbmake/hbmake.prg
    * small fix

2001-12-21 07:50 UTC-0300 Luiz Rafael Culik <culik@sl.conex.net>
  * source/rtl/filesys.c
    * hb_fsmkdir,hb_fsChdir,hb_fsRmdir,hb_fsDelete,hb_fsRename,hb_fsCurdirBuff()
      now use Win32 API calls
   * utils/hbmake/hbmake.prg
     ! Disabled profile
   * utils/hbmake/hbmutils.prg
     * An small clean up
   * ChangeLog
     * Renamed to ChangeLog.012 and started an new one
2006-02-15 13:50 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hvm.c
    ! fixed memory leak I introduced changing Ryszard modifications

      need such functionality yet
  + harbour/ChangeLog.015
  * harbour/source/vm/debug.c

  * harbour/harbour.spec
  * harbour/bin/hb-func.sh
    * some modification in xhb* scripts building - adding passing
      predefined compiler and linker switches
  * harbour/source/vm/hvm.c
    * minor code cleanup

2006-09-03 18:55 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapicls.h
  * harbour/source/vm/classes.c
  * harbour/source/vm/hvm.c
  * harbour/tests/overload.prg
    + added support for overloading [] in assignment operation

2006-09-03 16:30 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/ChangeLog
  + harbour/ChangeLog.016
    * new ChangeLog file created
  * harbour/include/hbver.h
    * updated version number to 0.47.0
  * tagged CVS as build47
