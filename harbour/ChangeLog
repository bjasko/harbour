2001-08-06 20:50 UTC-0400 David G. Holm <dholm@jsd-llc.com>

  * source/rtl/math.c
    ! Added missing type override for hb_xgrab return value on line 99
      (type overrides are *mandatory* for hb_xgrab and hb_xrealloc, so
      that Harbour can be built using C++ compilers).

  * source/rtl/gtsln/gtsln.c
  * contrib/libct/ctstr.c
  	! Fixed typos causing compile errors with HB_TR_DEBUG and gcc. Case
  	  error in variable names in debug info calls (e.g. nstrLen instead
  	  of nStrLen). Fixed by "Fergus McDonald" <listsub@qvolution.com>

2001-08-06 20:30 GMT -3 Luiz Rafael Culik <culik@sl.conex.net>
   *source/rtl/tbrowse.prg
      * Fixed support to display pictures in TBrwose. Thanks for Manu Exposito <maex14@dipusevilha.es>

2001-08-06 09:15 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/genc.c
     ! Improved sync logic of HB_SETMACRO() level, to only activate once per module with same level used by compiler.

2001-08-06 10:33 UTC+0300 Chen Kedem <niki@actcom.co.il>
   * doc/funclist.txt
     ! Fix excessive use of global replace forcing 'n' or 'N' into 'S'

   * doc/en/macro.txt
     - Remove "<file[.prg]>" from line #19 (Copy & Paste mistake)
     * Small formating

   * doc/en/var.txt
     + doc for __ISMV()

2001-08-05 18:00 GMT -3 Luiz RafaelCulik<culik@sl.conex.net>
   * doc/en/compiler.txt
     * Updated provided by Fergus McDonald

2001-08-05 12:15 UTC-0800 Ron Pinkas <ron@profit-master.com>
   + include/hbmsetup.h
   * include/hbmacro.h
     * Moved #defines of HB_SM_* to new file hbmsetup.h

   * source/compiler/harbour.c
   * source/vm/macro.c
   * source/compiler/genc.c
     + Added logic to automatically synchronize HB_SETMACRO() level with the -k option supplied to compiler.

     /* HB_SETMACRO() may still be called explictly, but now specifying any -k option to harbour will automatically provide same
       level of functionalty in macro compiler. Example:

           harbour test -kc

        will restrict the compiler to the Clipper level mode, and will automatically disable extended macro support in that module
        without requiring:

           HB_SETMACRO( HB_SM_HARBOUR, .F. )
           HB_SETMACRO( HB_SM_XBASE, .F. )

        By default all harbour extensions are enabled - you can use -kc, -kx -ki, etc., to disable any unwanted feature.

        We should still review the need to have -ki which I find absolutley redundant and unproductive.
     */

2001-08-05 22:58 GMT+3 Alexander Kresin <alex@belacy.belgorod.su>
  * source/vm/memvars.c
    + Two functions added: hb_memvarGetVarHandle() and hb_memvarGetValueByHandle()

2001-08-05 14:20 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    *include/hbcomp.h
    *source/compiler/cmdcheck.c
    *source/compiler/hbusage.c
        * added new command line switch: -ki
        * added new flag: HB_COMPFLAG_HB_INLINE
        This switch enables support for HB_INLINE syntax
        (by default it is disabled)
        * all options used with -k switch are letter case sensitive
        * -kc (Clipper compatibility) clears all other switches (minimal
          set of features)

    *source/compiler/harbour.l
        * added support for -ki command line switch

    *source/compiler/harbour.sly
    *source/compiler/harbour.y
        * fixed line numer issues in generated pcode

2001-08-04 18:40 GMT -3  Luiz Rafael Culik<culik@sl.conex.net>
   *utils/hbmake/hbmake.prg
     * Small fix to the library edit mode of hbmake

2001-08-04 13:50 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/harbour.l
   * source/compiler/harbour.slx
     * Added inline c support for hb_comp_iLanguage == LANG_OBJ_MODULE

   * source/compiler/harbour.sly
     * Added support for HB_COMP_ISSUPPORTED( HB_COMPFLAG_XBASE ) in Statement : ( MacroVar and MacroExpr ) to sync with harbour.y

2001-08-04 11:00 UTC-0800 Ron Pinkas <ron@profit-master.com>
    * source/vm/macro.c
      ! Added missing ; in line 956

2001-08-04 15:15 UTC+0100 Ryszard Glab <rglab@imid.med.pl>

    * doc/en/compiler.txt
    * include/hbapi.h
    * include/hbcomp.h
    * include/hbexpra.c
    * include/hbexprb.c
    * include/hbmacro.h
    * source/compiler/cmdcheck.c
    * source/compiler/expropta.c
    * source/compiler/exproptb.c
    * source/compiler/harbour.c
    * source/compiler/harbour.y
    * source/compiler/hbfunchk.c
    * source/compiler/hbusage.c
        * added command line switch which controls a compilation
          compatibility level -k<modes>
          Currently supported modes (can be joined):
          -kc  ==> 100% Clipper compatible (with some obvious bugs fixed)
          -kh  ==> harbour extensions enabled (default)
          -kx  ==> other xbase dialects extensions
        * new macro HB_COMP_ISSUPPORTED(<mode>) to check if a feature
          is enabled. Currently supported modes (defined in hbcomp.h):
          HB_COMPFLAG_HARBOUR  ==> -kh
          HB_COMPFLAG_XBASE    ==> -kx
        * extended macro support for expression lists is disabled by
          default (latest Ron's additions) - use -kx switch to enable

    * include/set.ch
    * source/vm/macro.c
    * source/macro/macro.y
    * source/macro/macroa.c
    * source/macro/macrob.c
        * added HB_SETMACRO() function to control various compatibility
          issues at the runtime.
          HB_SETMACRO( <nFeature>, <lOnOff> )
          This controls the macro compiler's features. The feature can
          be either enabled (.T.) or disabled (.F.)
          Currently available features (defined in set.ch file)
          HB_SM_HARBOUR => (enabled by default)
              enable/disable harbour extensions
          HB_SM_XBASE => (disaled by default)
              enable/disable xbase dialects extensions
          HB_SM_SHORTCUTS => (enabled by default)
              enable/disable shortcut evaluation of logical expressions
          HB_SM_PREPROC =>
              enable/disable preprocessing (if harbour is build with
              HB_MACRO_STATEMENTS option)

    * source/rdd/dblist.prg
        * the array of expressions is scanned for extended macro lists
          when xbase compatibility is enabled (see HB_SETMACRO())

    * source/vm/asort.c
        * moved HB_ASORT_OPT_ITEMCOPY setting to hbsetup.h

    * include/hbsetup.h
        * updated/added descriptions of all #ifdef settings used
          in the harbour code
          (Please keep updated this file (and hbsetup.ch) if a new
          setting is used)

    + doc/en/macro.txt
        * initial documentation for macro compiler
        * documentation of HB_SETMACRO() function

2001-08-04 00:06 GMT Dave Pearson <davep@davep.org>
   * doc/whatsnew.txt
     * Brought the document up to date.

2001-08-03 19:30 GMT -3 Luiz Rafael Culik<culik@sl.conex.net>
   *Changelog
      *renamed to Changelog.011 and started an new one
   *utils/hbmake/radios.prg
    utils/hbmake/radios.ch
      Small changes on this function due an change on the hbmake edit mode
   *utils/hbmake/hbmake.prg
      +gl option to tell that the compiler is gcc under linux
      *fixes to the edit mode to be more compatible with linux
      *Now Setbuild() return the command line to gcc(Linux and Os/2) insted of an response file

   * source/pp/pragma.c
   * contrib/dot/pp_harb.ch
   * tests/inline_c.prg
     * STOPDUMP renamed as ENDDUMP (with Ron permission)

2001-12-21 08:40 UTC-0300 Luiz Rafael Culik <culik@sl.conex.net>
   * utils/hbmake/hbmake.prg
    * small fix

2001-12-21 07:50 UTC-0300 Luiz Rafael Culik <culik@sl.conex.net>
  * source/rtl/filesys.c
    * hb_fsmkdir,hb_fsChdir,hb_fsRmdir,hb_fsDelete,hb_fsRename,hb_fsCurdirBuff()
      now use Win32 API calls
   * utils/hbmake/hbmake.prg
     ! Disabled profile
   * utils/hbmake/hbmutils.prg
     * An small clean up
   * ChangeLog
     * Renamed to ChangeLog.012 and started an new one
2006-02-15 13:50 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hvm.c
    ! fixed memory leak I introduced changing Ryszard modifications

      need such functionality yet
  + harbour/ChangeLog.015
  * harbour/source/vm/debug.c

  * harbour/harbour.spec
  * harbour/bin/hb-func.sh
    * some modification in xhb* scripts building - adding passing
      predefined compiler and linker switches
  * harbour/source/vm/hvm.c
    * minor code cleanup

2006-09-03 18:55 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapicls.h
  * harbour/source/vm/classes.c
  * harbour/source/vm/hvm.c
  * harbour/tests/overload.prg
    + added support for overloading [] in assignment operation

2006-09-03 16:30 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/ChangeLog
  + harbour/ChangeLog.016
    * new ChangeLog file created
  * harbour/include/hbver.h
    * updated version number to 0.47.0
  * tagged CVS as build47
