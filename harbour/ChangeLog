19990817-17:13 GMT+1 Antonio Linares <alinares@fivetech.com>
   + source/debug/tbrwtext.prg
     * Class TBrwText for browsing debugger source code
   * source/debug/debugger.prg
     * Improved
   * makefile.b32
     * TBrwText module added

19990817-13:20 GMT+1 Antonio Linares <alinares@fivetech.com>
   * include/classes.ch
     * extern <SuperClass> added, so now the SuperClass symbol is properly linked.

19990817-07:30 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/vm/hvm.c
    source/rtl/errorapi.c
    source/rtl/classes.c
    source/rtl/fm.c
    source/rtl/itemapi.c
    source/rtl/transfrm.c
    include/errors.ch
    + printf()s changed to a call to hb_errInternal() instead.
    * hb_callStackShow() modified so that it uses the same format as
      the standard error handler.

  * include/initsymc.h
    include/initsymd.h
    source/rtl/errorapi.c
    + Harbour callable __errRT_BASE() function added.

  * include/errorapi.h
    source/rdd/dbcmd.c
    source/rtl/errorapi.c
    source/rtl/arrays.c
    source/rtl/classes.c
    source/rtl/copyfile.c
    source/rtl/dates.c
    source/rtl/do.c
    source/rtl/errorapi.c
    source/rtl/filesys.c
    source/rtl/inkey.c
    source/rtl/math.c
    source/rtl/memvars.c
    source/rtl/set.c
    source/rtl/strings.c
    source/rtl/transfrm.c
    source/tools/dates2.c
    source/vm/hvm.c
    * hb_error*() -> hb_err*()
    - removed obsolete hb_errorNat*() prototypes.

  * include/hberrors.h
    include/hbpp.h
    source/compiler/harbour.y
    source/hbpp/*.c
    source/hbpp/stdalone/*.c
    + Added the ability to display warnings in standard format.
    ! Adjusted and corrected to help display of HBPP.EXE

  * source/rtl/objfunc.prg
    doc/subcodes.txt
    * Got rid of the QOUT() type runtime-error messages, there's now
      a more comprehensive, standard error checking system, which throws
      Harbour errors.
    ! Some small bugs fixed. (checking argument after usage, additional
      parameters passed in one place - typo)

  * include/hboo.ch
    source/rtl/objfunc.prg
    source/rtl/tclass.prg
    source/tools/stringp.prg
    * DATA_VAL -> DATA_VALUE

19990816-21:57 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/rtl/console.c
    tests/working/colorind.prg
    + Added standard header to __ColorIndex()
    ! Some Lint warnings fixed.
    + Some tests added.
  * include/hbdefs.h
    include/extend.h
    ! Some Lint warnings fixed.
  * include/Makefile
    + Added hboo.ch

19990816-22:15 GMT+3 Alexander Kresin
  * source/rtl/tbrowse.prg
  * tests/working/testbrw.prg
    * added functionality - methods PanLeft().PanRight(),Hilite(),DeHilite()
    * Up() and Down() now uses Scroll() and Hilite()/DeHilite() instead of
      RefreshAll() and RefreshCurrent()
  * source/hbpp/hbpp.c
    * Bug fixed for new CLASS implementation ( with 'extern' )

19990816-12:26 EDT Paul Tucker <ptucker@sympatico.ca>
  * source/rtl/browdb.prg
    + copyright info.
    + todo info
  * makefile.vc
    + browdb
    + tone

>>>>>>> 1.792
19990816-15:30 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/rtl/errorapi.c
    ! Fixed hb_errLaunch() so that it will handle error handler return
      values correctly. NOTEs added about this.

19990816-13:30 CET Eddie Runia <eddie@runia.com>
  * source/compiler/harbour.y
    EndProc error resolved.
    PushDouble error resolved.
    Padding problem resolved
  * source/runner/runner.c; include/run_exp.h
    First symbol should be executed. Main renamed to HB_RUN
    Init symbol code fixed

19990816-13:20 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/rtl/Makefile
    + browdb.prg added
  * source/rtl/errorsys.prg
    ! Removed ErrorLevel() call.
  * source/rtl/itemapi.c
    ! hb_evalNew() is no longer making a copy of the passed block/name
      parameters, so hb_evalRelease() will properly release that item.
      Although not exactly defined in CA-Clipper NG, the example program
      suggest that it works like this. CA-Clipper example generated unreleased
      blocks in Harbour.
    % Some variable scope optimized.

19990816-12:39 GMT+1 Antonio Linares <alinares@fivetech.com>
   + source/rtl/browdb.prg
     * source code for TBrowseDb()
   * source/rtl/tbrowse.prg
     * removed source code for TBrowseDb()
   * harbour/makefile.b32
     * browdb module added.

19990816-12:03 GMT+1 Antonio Linares <alinares@fivetech.com>
   * source/vm/hvm.c
     * Enhanced ProcName() returned information.
     (it generates the name of the Class and the method).

19990816-12:03 GMT+1 Antonio Linares <alinares@fivetech.com>
   * include/ctoharb.h
     + Added new hb_callStackShow() prototype
   * source/vm/hvm.c
     + Added new hb_callStackShow() function
     * improved internal errors reporting information

19990816-01:11 EDT Paul Tucker <ptucker@sympatico.ca>
  * source/vm/hvm.c
    * ProcessObjSymbols -> hb_vmProcessObjSymbols

19990816-02:45 GMT+1 Victor Szel <info@szelvesz.hu>

  * include/extend.h
    source/rtl/classes.c
    source/rtl/objfunc.prg
    source/rtl/tclass.prg
    source/vm/hvm.c
    source/tools/stringp.prg
    tests/working/dynobj.prg
    tests/working/debugtst.prg
    tests/working/inherit.prg
    tests/working/strip.prg
    tests/working/objects.prg

    % Some variables and functions made static in classes.c
    ! Completed init symbol list.

    * Names changed to standard ones (they should also work in 10 chars mode):

      ClassCreate     -> __clsNew
      ClassInstance   -> __clsInst
      __InstSuper     -> __clsInstSuper
      ClassAdd        -> __clsAddMsg
      ClassDel        -> __clsDelMsg
      ClassMod        -> __clsModMsg
      WClsDatas       -> __cls_CntClsData
      __wDatas        -> __cls_CntData
      __wDataDec      -> __cls_DecData
      __wDataInc      -> __cls_IncData

      aOMethod        -> __objGetMethodList
      aOData          -> __objGetMsgList
      aOGet           -> __objGetValueList
      aOSet           -> __objSetValueList
      oClone          -> __objClone
      ClassName       -> __objGetClsName
      oSend           -> __objSendMsg
      isMessage       -> __objHasMsg
      IsData          -> __objHasData
      IsMethod        -> __objHasMethod
      oAddMethod      -> __objAddMethod
      oAddInline      -> __objAddInLine
      oAddData        -> __objAddData
      oModMethod      -> __objModMethod
      oModInline      -> __objModInLine
      oDelMethod      -> __objDelMethod
      oDelInline      -> __objDelInLine
      oDelData        -> __objDelData

      ClassH          -> __msgClsH
      ClassName       -> __msgClsName
      ClassSel        -> __msgClsSel
      SelectSuper     -> __msgSuper
      EvalInline      -> __msgEvalInline
      GetClassData    -> __msgGetClsData
      SetClassData    -> __msgSetClsData
      GetData         -> __msgGetData
      SetData         -> __msgSetData
      Virtual         -> __msgVirtual

      DictRealloc     -> hb_clsDictRealloc
      ReleaseClass    -> hb_clsRelease
      ReleaseClasses  -> hb_clsReleaseAll
      hb_GetClassName -> hb_objGetClsName
      hb_GetMethod    -> hb_objGetMethod
      hb_isMessage    -> hb_objHasMsg

  * include/hboo.ch
    source/rtl/classes.c
    source/rtl/objfunc.prg
    source/rtl/tclass.prg
    source/tools/stringp.prg
    tests/working/dynobj.prg
    tests/working/objects.prg
    tests/working/overload.prg
    tests/working/objects.prg

    + MET_ and DATA_ declaration moved to one place (hboo.ch).

  * source/rtl/errorapi.c
    include/errorapi.h

    % hb_error*() functions are returning void instead of WORD, except for
      hb_errorRT_BASE_Ext1().

  * include/error.ch
    include/langapi.h
    source/rtl/langapi.c

    + New error code EG_ARRDIMENSION added

  * source/rtl/arrays.c

    ! ARRAY() now properly checks the passed parameters (Clipper compatible).
    + ARRAY() TODO: added (to support multiple dimensions)
    ! AADD() Fixed parameter handling, throws errors like Clipper.
    ! ASIZE() Fixed parameter handling.
    ! hb_arrayIns() removed one error to be Clipper compatible.
    ! hb_arrayDel() removed one error to be Clipper compatible.
    + AFILL(), ASCAN(), AEVAL(), ACOPY() TOFIX: added.

  * source/rtl/transform.c

    ! _exit -> exit (_exit had no prototype, and that was the only place
      where it was used)
    ! Some BYTE and int changed to BOOL at obviouse place.
    ! Some functions made static.
    ! Some unused variables removed (lFact*)

19990815-18:45 GMT+2 Ryszard Glab <rglab@imid.med.pl>

    *source/rtl/hvm.c
         * added 'hb_vm' prefix to alias/field related functions
         * some functions declared 'static'

    *include/ctoharb.h
         - removed declarations of internal virtual machine functions

    *source/compiler/harbour.y
         * changed an error description for incorrect use of PARAMETERS
         statement
         * added type casting to compile under C++ compilers
         * static frame is correctly generated if static variable
         is used in a codeblock only

    *include/extend.h
         - removed obsolete declaration of hb_memvarNewSymbol()

    *include/hb_vmpub.h
         + added definition of callback function HB_DYNS_FUNC used
         to enumerate dynamic symbols

    *source/vm/dynsym.c
         + new function hb_dynsymEval() that enumerates dynamic symbols
         by calling specified HB_DYNS_FUNC * function

    *source/rtl/memvars.c
         + added __MVCLEAR function to release all PRIVATE and PUBLIC
         variables (this function is used in CLEAR MEMORY statement)

19990815-19:59 GMT+3 Alexander Kresin
  * source/rtl/tbrowse.prg
  * tests/working/testbrw.prg
    * added functionality - some methods implemented, added support of
      footing, head separator, footer separator, freeze.
      Now it seems almost complete.

19990815-17:40 GMT+1 Victor Szel <info@szelvesz.hu>
  * bldodbc.bat
    hbodbc.b32
    * moved to /contrib/odbc
    * updated for the new locations (not tested though).

19990814-20:40 GMT+1 Victor Szel <info@szelvesz.hu>
  * include/hb_vmpub.h
    source/vm/dynsym.c
    ! FS_ declarations now included casts, to suppress some
      pedantic warnings (Win32/GCC -ansi -pedantic).
  * source/hbpp/hbpp.c
    source/hbpp/table.c
    ! Made them end with newline. (ANSI C req.)
  * source/vm/hvm.c
    include/rddapi.h
    source/hbpp/hbpp.c
    ! // comment changed to /**/ (ANSI C req.)
  * include/init.h
    include/run_exp.h
    source/compiler/harbour.y
    contrib/odbc/odbc.c
    source/hbpp/hbpplib.c
    source/rdd/dbfntx/dbfntx1.c
    source/rdd/dbcmd.c
    source/rdd/dbf1.c
    source/rdd/delim1.c
    source/rdd/sdf1.c
    source/rtl/arrays.c
    source/rtl/classes.c
    source/rtl/console.c
    source/rtl/copyfile.c
    source/rtl/dates.c
    source/rtl/descend.c
    source/rtl/dir.c
    source/rtl/environ.c
    source/rtl/filesys.c
    source/rtl/hardcr.c
    source/rtl/inkey.c
    source/rtl/math.c
    source/rtl/mtran.c
    source/rtl/set.c
    source/rtl/setcolor.c
    source/rtl/strings.c
    source/rtl/tone.c
    source/rtl/transfrm.c
    source/tools/dates2.c
    ! Corrected some HB_INIT_SYMBOLS_END() and HB_CALL_ON_STARTUP_END()
      macro definitions to include the ending ";".
    ! Removed the ";" after
      HB_INIT_SYMBOLS_END() and HB_CALL_ON_STARTUP_END() macro references.
      (ANSI C req.) (Win32/GCC complained about it with -ansi -pedantic:
      "warning: ANSI C does not allow extra `;' outside of a function")

19990814-19:55 GMT+1 Victor Szel <info@szelvesz.hu>
  * ChangeLog
    ChangeLog.002
    * Old ChangeLog renamed to ChangeLog.002
    * New ChangeLog created.
   * source/pp/pragma.c
   * contrib/dot/pp_harb.ch
   * tests/inline_c.prg
     * STOPDUMP renamed as ENDDUMP (with Ron permission)

2001-12-21 08:40 UTC-0300 Luiz Rafael Culik <culik@sl.conex.net>
   * utils/hbmake/hbmake.prg
    * small fix

2001-12-21 07:50 UTC-0300 Luiz Rafael Culik <culik@sl.conex.net>
  * source/rtl/filesys.c
    * hb_fsmkdir,hb_fsChdir,hb_fsRmdir,hb_fsDelete,hb_fsRename,hb_fsCurdirBuff()
      now use Win32 API calls
   * utils/hbmake/hbmake.prg
     ! Disabled profile
   * utils/hbmake/hbmutils.prg
     * An small clean up
   * ChangeLog
     * Renamed to ChangeLog.012 and started an new one
2006-02-15 13:50 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hvm.c
    ! fixed memory leak I introduced changing Ryszard modifications

      need such functionality yet
  + harbour/ChangeLog.015
  * harbour/source/vm/debug.c

  * harbour/harbour.spec
  * harbour/bin/hb-func.sh
    * some modification in xhb* scripts building - adding passing
      predefined compiler and linker switches
  * harbour/source/vm/hvm.c
    * minor code cleanup

2006-09-03 18:55 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapicls.h
  * harbour/source/vm/classes.c
  * harbour/source/vm/hvm.c
  * harbour/tests/overload.prg
    + added support for overloading [] in assignment operation

2006-09-03 16:30 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/ChangeLog
  + harbour/ChangeLog.016
    * new ChangeLog file created
  * harbour/include/hbver.h
    * updated version number to 0.47.0
  * tagged CVS as build47
