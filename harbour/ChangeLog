19990915-02:20 GMT+1 Victor Szel <info@szelvesz.hu>
  * .cvspass
    - File removed, since it was probably added by incident.

19990915-01:22 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/compiler/gen*.c
    + some fflush() calls added to see a better feedback about the progress
      of the generation process.

19990915-00:38 GMT+1 Victor Szel <info@szelvesz.hu>
  * tests/working/sound.prg
    tests/working/*.bat
    tests/working/*.ch
    + CVS header added to all files.
    + @echo off added were missing.

19990915-00:30 GMT+1 Victor Szel <info@szelvesz.hu>
  * (*.* in the root directory)
    + CVS header added to all files.
    + @echo off added were missing.
  * build32.bat
    build40.bat
    build31.bat
    build.bat (renamed)
    build16.bat (new)
    buildrdd.bat (removed)
    bldgt32.bat (removed)
    bldhbpp.bat (removed)
    % These three batch files has been incorporated to the main build
      batch files, since they were simple one-liners.
    ! hbpplib.b32 build process was executed two times from the build32.bat
      and build40.bat files.
    * build.bat renamed to build16.bat

19990914-17:30 GMT+1 Victor Szel <info@szelvesz.hu>
  * config/rules.cf
    * Harbour flag /q changed to /q0 to omit the compiler header.
  * source/rtl/do.c
    ! DO() fixed to use hb_dynsymFind() instead of hb_dynsymGet(), 
      now it properly displays when the passed string is not a symbol, rather
      then throwing an internal error.
  * source/compiler/harbour.y
    + /CREDITS command line switch to display the development team. Like in 
      Clipper.

19990914-13:15 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/compiler/harbour.y
    source/compiler/gen*.c
    + Help screen made more Clipper like.
    + /f switch changed to /gf, and the whole object generation build
      in to the source in a more standard way. It works now.
    + /q0 switch added to the help screen.
    + All filename composing stuff related to specific output types moved to 
      the appropriate gen*.c file. This way the code is more modular.
    ! One variable made static in genobj32.c

19990914-11:40 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/runner/stdalone/external.prg
    include/external.ch
    * Regenerated.
  * source/runner/runlib.c
    ! Made some steps to release memory blocks when an undeclared symbol error 
      occurs, seemingly with few success. This needs some more work.
    + TODO added about a possible direction for further development.
      The idea would be to replicate the Blinker DLL functionality.
  * source/compiler/harbour.y
    source/compiler/harbour.l
    source/compiler/gen*.c
    * Only every 100th line number is shown on the counter while parsing,
      this way it's more Clipper like. In theory it should also be faster,
      but due to the stdout buffering, it's approx. the same speed. Though it 
      could be faster in some platform/compiler/screen output combinations.
    + The "syntax ok" message is now replaced with the total number of 
      functions and the total number of lines. Similar to Clipper, but not
      so specific to the generated output.
    + /q0 switch no suppresses the "Harbour Compiler" header.
    + The "Generating ... output" line format changed, it's now more
      compact.
  * tests/working/rtl_test.prg
    + A new VAL() test added to test the huge value problem.
    ! One failure eliminated by hiding a filename generating difference in
      __COPYFILE(), NOTE added about this.
  * source/rtl/strings.c
    + HB_VAL() now uses hb_retnlen().
    ! HB_VAL() was incompatible for huge integer values (5000000000). This
      is fixed.
  * source/rtl/memvars.c
    * __MVRESTORE() is now using hb_itemPutNLen()
  * source/rtl/extend.c
    include/extend.h
    + hb_retnlen() Extend API function added, which is a wrapper for
      hb_itemPutNLen().
  * source/rtl/itemapi.c
    include/itemapi.h
    + hb_itemPutNLen() generic function added to assign a number to an item, 
      the low-level type of the number is automatically selected, based on the
      magnitude and presence of decimal places. Similar to hb_vmPushNumber().
    + hb_itemPutN?Len() functions will now accept any negative width/dec
      parameters as a request for the default. So:
      For iDec now any negative number will do the same as -1 before.
      For iWidth now any negative number will do the same as 0 before.
      This way the interface is more fool proof and consistent.

19990914-01:00 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/vm/hvm.c
    include/ctoharb.h
    + hb_vmEqual() - Added support for alternate equal operator: "="
      Currently they are exact synonyms.
    + hb_vmInc()/hb_vmDec() - "++", "--" operator overloading support added.
    + hb_stackDispLocal() - More values are printed, the format changed.
  * tests/working/rtl_test.prg
    tests/working/overload.prg
    ! The tests fixed again, "+="/"-=" operators removed from the class 
      declaration.
    * "+"/"-" implementation changed to not modify the original value, since
      the expression "oString + 'A'" in itself in one line is not valid anyway.
    + "++", "--" operator overloading added.
    - Removed the "<>" and "#" overloading methods since they were not needed
      in this case.

19990913-23:45 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/vm/hvm.c
    + hb_vmInString() - Added support for overloading the "$" operator.
    ! hb_vmPlus() - Fixed the operator overloading feature.
    + hb_vmNotEqual() - Added support for alternate notequal operators: 
      "<>" and "#".
  * tests/working/rtl_test.prg
    tests/working/overload.prg
    - Removed +=, -= tests, since they will destroy the object, basically
      this gets executed: oString := oString + "Hello", where the right side
      expression will result in a string, which gets assigned to the object.
      This could be fixed by changing the overloader block to return self BTW,
      but from the test point of view, this is the same as "+"/"-".
  * gt.b32
    makefile.b32
    runner.b32
    ! Fixes by Jose Lalin

19990913-23:00 GMT+1 Victor Szel <info@szelvesz.hu>
  * ChangeLog
    ChangeLog.003
    * Old ChangeLog renamed to ChangeLog.003
    * New ChangeLog created.
   * source/pp/pragma.c
   * contrib/dot/pp_harb.ch
   * tests/inline_c.prg
     * STOPDUMP renamed as ENDDUMP (with Ron permission)

2001-12-21 08:40 UTC-0300 Luiz Rafael Culik <culik@sl.conex.net>
   * utils/hbmake/hbmake.prg
    * small fix

2001-12-21 07:50 UTC-0300 Luiz Rafael Culik <culik@sl.conex.net>
  * source/rtl/filesys.c
    * hb_fsmkdir,hb_fsChdir,hb_fsRmdir,hb_fsDelete,hb_fsRename,hb_fsCurdirBuff()
      now use Win32 API calls
   * utils/hbmake/hbmake.prg
     ! Disabled profile
   * utils/hbmake/hbmutils.prg
     * An small clean up
   * ChangeLog
     * Renamed to ChangeLog.012 and started an new one
2006-02-15 13:50 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hvm.c
    ! fixed memory leak I introduced changing Ryszard modifications

      need such functionality yet
  + harbour/ChangeLog.015
  * harbour/source/vm/debug.c

  * harbour/harbour.spec
  * harbour/bin/hb-func.sh
    * some modification in xhb* scripts building - adding passing
      predefined compiler and linker switches
  * harbour/source/vm/hvm.c
    * minor code cleanup

2006-09-03 18:55 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapicls.h
  * harbour/source/vm/classes.c
  * harbour/source/vm/hvm.c
  * harbour/tests/overload.prg
    + added support for overloading [] in assignment operation

2006-09-03 16:30 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/ChangeLog
  + harbour/ChangeLog.016
    * new ChangeLog file created
  * harbour/include/hbver.h
    * updated version number to 0.47.0
  * tagged CVS as build47
