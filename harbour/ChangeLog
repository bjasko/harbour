19990820-12:40 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/rtl/filesys.c
    include/filesys.h
    + hb_fsFNameSplit()
      hb_fsFNameMerge() 
      filename handling functions and structure added to the Harbour RTL.
      These function were originated from MakeFilename() and SplitFileName()
  * tests/working/rtl_test.prg
    + rtl_test now shows the compiler version, os, date and time, other
      improvements.
    * All TRANSFORM() tests moved to rtl_test to allow automatic regression
      testing.
  * source/rtl/transfrm.c
    * PicFlags type changed to WORD
    * Some length and pos variable types changed to ULONG.
    * TOFIX: added about an unreachable code segment.
    * Some zero changed to '\0'.
  * source/rtl/strings.c
    source/rtl/maths.c
    source/rtl/dates.c
    source/rtl/arrays.c
    * QUESTION:s changed to NOTE: regarding the parameter checking

19990820-12:28 GMT+1 Antonio Linares <alinares@fivetech.com>
   * source/debug/debugger.prg
     * improved debugger functionality. F8 and F4 already operative.
   * source/debug/tbrwtext.prg
     * GotoLine() method added
   * source/vm/hvmc.
     * new bDebugging, bDebugShowLines variables added.
     * new hb_vmDebuggerShowLine() function

19990820-11:47 GMT+1 Bruno Cantero <bruno@issnet.net>
   * funclist.txt
     include/rddapi.h
     source/rdd/dbcmd.c
     source/rdd/dbf1.c
     source/rdd/sdf1.c
     source/rdd/delim1.c
     source/rdd/dbfntx/dbfntx1.c
     source/vm/hvm.c
     + Added new functions, changed VM for support Alias and updated function list.

19990819-18:42 GMT+1 Victor Szel <info@szelvesz.hu>
  * tests/working/rtl_test.prg
    + STUFF() and RAT() tests added, some more tests added to PAD*() family.
  * include/extend.h
    source/rtl/strings.c
    source/rtl/descend.c
    source/vm/hvm.c
    ! hb_strUpper(), hb_strLower(), hb_strAt() uses ULONG instead of long
      for string positions and lengths.
    ! hb_pad_prep() uses ULONG instead of WORD
    + REPLICATE() now checks for string overflow.
    * REPLICATE() uses only standard Extend API calls now.
    * STUFF() made completely Clipper compatible, it now uses only standard
      Extend API calls.
    * hb_stricmp() USHORT changed to ULONG.
    * return type of hb_strgreater changed to int from WORD
    ! Some types changed to BOOL, many "long"s changed to ULONG.
    * long -> LONG, _retni() -> retnl() in one place.
    * Some zeros changed to \0 and NULL.
    * Small name changes:
      hb_pad_prep() -> hb_itemPadConv()
      hb_strempty   -> hb_strEmpty
      hb_strdescend -> hb_strDescend
  * source/rtl/copyfile.c
    ! Fixed a bug when HB_STRICT_CLIPPER_COMPATBILITY was set.
  * contrib/odbc/odbc.c
    source/rtl/copyfile.c
    source/rtl/descend.c
    source/hbpp/hbpplib.c
    ! Fixed #pragma startup directives. (missing "startup", missing
      __GNUC__ guard.)
  * source/hbpp/hbpplib.c
    tests/working/testpre.prg
    * HB_PREPROCESS -> HB___PREPROCESS, since this is an extension.
      PREPROCESS -> __PREPROCESS
  * source/vm/dynsym.c
    * One small change.

19990819-12:30 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/rtl/strings.c
    ! hb_itemStr() possible error fixed when item.asDouble was
      accessed without making sure whether the item is a double.

19990819-00:15 EDT Paul Tucker <ptucker@sympatico.ca>
  * source/rtl/gtapi.c
    + hb_gtPreExt()
    + hb_gtPostExt()
      Like Clipper internals - these functions should be called as
      bookends to printf if there is a possibility that a dispbegin
      is in effect when the printf or fprintf(stderr) takes place.
    * gtDispEnd();
      decrement counter after restoring screen
  * source/rtl/console.c
    * added calls to above functions
  * source/rtl/gt/gtdos.c
    * account for dispCount change
  * source/rtl/gt/gtwin.c
    * If the Windows console handle is not the initial handle inherited
      from stdin - printf fails to work.  Modified Dispbegin/end logic
      to account for this.

19990819-05:26 GMT+1 Victor Szel <info@szelvesz.hu>

  * source/compiler/harbour.l
    source/compiler/harbour.y
    source/compiler/genobj32.c
    source/hbpp/hbpp.c
    source/hbpp/hbppint.c
    source/hbpp/hbpplib.c
    source/hbpp/stdalone/hbpp.c
    include/compiler.h
    include/hbpp.h

    + Standardized the names of the memory handling functions.
      OurMalloc()  -> hb_xalloc()
      OurRealloc() -> hb_xrealloc()
      OurFree()    -> hb_xfree()
      _xgrab()     -> hb_xgrab()
      _xrealloc()  -> hb_xrealloc()
      _xfree()     -> hb_xfree()
      So that from now on, the Harbour API form can be used everywhere.
      Some duplicate code eliminated.

  * source/rtl/arrays.c - hb_arrayScan()

    ! Checks the return value of the comparer block whether it's logical.

19990819-04:44 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/rtl/memvars.c
    include/extend.h
    * int -> BOOL (hb_memvarValueNew())
    + PUBLIC CLIPPER and PUBLIC HARBOUR will initialize those variables with
      .T. instead of .F., to be compatible with Clipper, and to be able to
      detect Harbour.
  * include/extend.h
    source/rtl/extend.c
    source/rtl/itemapi.c
    source/vm/hvm.c
    source/rtl/transfrm.c
    - Removed HB_ITEM/asLogical.length variable, since it was never
      used, and has no sense anyway.
    - Removed HB_ITEM/asDate.length variable, since it was never
      used, and has no sense anyway.
    - Removed HB_ITEM/asInteger.decimal variable, since it was never
      used, and has no sense anyway, it's always zero.
    - Removed HB_ITEM/asLong.decimal variable, since it was never
      used, and has no sense anyway, it's always zero.
  * source/rtl/arrays.c
    source/rtl/extend.c
    source/rtl/memvars.c
    source/vm/hvm.c
    include/extend.h
    * HB_ITEM/asLogical.value type changed to BOOL
  * include/hbdefs.h
    + ISNIL() macro added.
  * source/tools/dates2.c
    * Some optimalizations, simplifications.
  * source/rtl/transfrm.c
    ! Fixed handling of the case, when the second parameter was not a
      string.
    * Some optimalizations, simplifications.
    ! Reenabled symbol registration, to avoid an empty initialization list.
      This is only a temporary workaround.

19990819-02:15 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/hbpp/hbpplib.c
    ! OurMalloc -> _xgrab
  * source/compiler/genobj32.c
    ! "_VirtualMachine" -> "_hb_vmExecute"
  * source/rtl/arrays.c
    source/rtl/console.c
    source/rtl/dates.c
    source/rtl/inkey.c
    source/rtl/math.c
    source/rtl/strings.c
    source/rtl/transfrm.c
    source/vm/hvm.c
    ! Commented out those symbol registration line, which are already included
      in source/vm/initsymb.c
  * source/vm/dynsym.c
    * Some variable declaration moved to the block where it's used.
    * Some 0 (zero) changed to NULL and '\0'
  * source/rdd/dbcmd.c
    ! extern HARBOUR functions declared as extern.
  * source/rtl/classes.c
    ! __msg*() function names changed to hb___msg*(), to avoid the
      leading underscores.
    * Many variable declaration moved to the block where it's used.
    ! Some (5?) potential GPFs fixed when the string/block parameter was
      omitted.
    * BYTE changed to BOOL in one place.
    ! Added proper (commented out) error description to three runtime errors.
  * source/rtl/extend.c
    * Some 0 (zero) changed to NULL and '\0'
  * include/inkey.ch
    ! Typo fixed.
  * include/extend.h
    source/rtl/arrays.c
    source/rtl/classes.c
    * BASEARRAY/wSuperCast changed to bSuperCase, type changed to BOOL.
  * source/vm/hvm.c
    source/vm/initsymb.c
    source/tools/io.c
    source/runner/runner.c
    source/rtl/codebloc.c
    source/rtl/console.c
    source/rtl/dates.c
    source/rtl/dir.c
    source/rtl/extend.c
    source/rtl/filesys.c
    source/rtl/fm.c
    source/rtl/inkey.c
    source/rtl/langapi.c
    source/rtl/memvars.c
    source/rtl/msgxxx.c
    source/rtl/set.c
    source/rtl/strings.c
    source/compiler/harbour.y
    % Removed all #includes which are always included indirectly via
      extend.h
  * include/extend.h
    * changed inclusion order of hbsetup.h and hbdefs.h, so that
      hbsetup.h is included first.
  * source/vm/initsymb.c
    source/compiler/harbour.y
    - DO removed from here. (since it's non standard Clipper)
  * source/vm/initsymb.c
    - STOD removed from here. (since it's non standard Clipper)
    * made all HARBOUR prototypes extern.
    - #include "init.h" removed.
    + #include "initsymd.h" guarded with HARBOUR_STRICT_ANSI_C
    + INKEY, PCOL, PROW address filled with proper value instead of NULL.
  * include/memvars.ch
    * Really small correction.

19990818-19:20 EDT David G. Holm <dholm@jsd-llc.com>
  * source/vm/hvm.c
    * Added TODO: comment to indicate that the divide by zero check
      needs to be removed once proper divide by zero error handling
      has been added to Harbour.

19990818-18:45 EDT David G. Holm <dholm@jsd-llc.com>
  * config/os2/icc.cf
    ! Fix to only use RDD libraries when RDD library is specified.
  * include/inkey.h
    + Added '#include "set.h"' to get HB_set_enum.
  * source/rtl/dates.c
    * Renamed hb_seconds() to hb_secondsToday() to avoid a duplicate
      symbol warning when using a C++ compiler.
  * source/rtl/environ.c
    * Moved hb_revision to after hb_build to match Harbour build
      number (e.g., "(Build 29a)").
  * source/rtl/gtapi.c
    ! Moved speed enhancement display code in hb_gtWriteCon() to be
      outside the switch() statement, so that forced display updates
      take place immediately instead of when the next character is
      processed. (This bug caused QOUT to act like QQOUT.)
    ! Added a check to force the display of whatever is in 'strng' when
      the buffer is full, because it's possible to write more than 500
      characters without hitting any other forced display conditions
      when starting more than 500 characters away from the bottom right
      corner of the screen (a 25 x 80 screen is 2000 characters).
    - Commented out the calls to hb_gtDispBegin() and hb_gtDispEnd() in
      hb_gtWriteCon() in anticipation of removing them, because their use
      subverts the use of DISPBEGIN() and DISPEND() in Harbour code.
  * source/rtl/inkey.c
    - Removed '#include "set.h"', because inkey.h includes it.
    + Uncommented DOS release CPU code and added '#if defined(DOS)'.
  * source/rtl/tone.c
    * Added support for long delays, like in Clipper.
    ! OS/2 upper frequency limit is 32767.
    * Limited all platforms to an upper frequency of 32767.
  * source/vm/hvm.c
    ! When dividing by 0, always return 0, just like Clipper.
  * tests/working/mathtest.prg
    * Moved modulo 0 test ahead of divide by 0 test.
    * Put "error" text on a separate line.
  * tests/working/sound.prg
    + Calculate elapsed time, which should be close to 1.5 seconds
      (except on platforms where SECONDS() only returns whole seconds).

19990819-02:23 GMT+1 Bruno Cantero <bruno@issnet.net>
   * funclist.txt
     source/rdd/rddsys.prg
     source/rdd/dbcmd.c
     source/rdd/dbf0.prg
     source/rdd/dbf1.c
     source/rdd/sdf0.prg
     source/rdd/sdf1.c
     source/rdd/delim0.prg
     source/rdd/delim1.c
     source/rdd/dbfntx/dbfntx0.prg
     source/rdd/dbfntx/dbfntx1.c
     tests/working/testrdd.prg

     Added new functions, run-time errors and update function list.

19990818-16:16 EDT Paul Tucker <ptucker@sympatico.ca>
   * source/rtl/console.c source/rtl/gtapi.c source/rtl/gt/gtwin.c
     * fixes to my fixes
   * makefile.vc
     + source/debug/tbrwtext.prg

19990818-14:33 EDT Paul Tucker <ptucker@sympatico.ca>
   * source/rtl/console.c
   * source/rtl/gtapi.c
     * a number of small changes to improve speed.
   * source/rtl/gt/gtwin.c
     * correction to cursor positioning when dispend called
   * tests/working/dirtest.prg
     * comment out (for now) asort
       it works, but it's rather slow on a larger directory

19990818-14:13 GMT+1 Bruno Cantero <bruno@issnet.net>
   * include/rddapi.h
     source/rdd/dbcmd.c
     source/rdd/dbf1.c
     source/rdd/sdf1.c
     source/rdd/delim1.c
     source/rdd/dbfntx/dbfntx1.c
     Added new functions

19990818-03:00 GMT+1 Victor Szel <info@szelvesz.hu>

  * source/compiler/harbour.y
    ! Fixed "incorrect pcode" error with /gh switch and certain .prg files.
      (Thanks to: Ryszard Glab <rglab@imid.med.pl>)

  * source/compiler/harbour.y
    + Invalid pcode error now shows the failing pcode number.

  * source/vm/hvm.c
    + TODO: added to include the actual unsupported pcode in the error
      message.

  * include/run_exp.h
    include/initsymc.h
    include/initsymd.h
    source/vm/hvm.c
    source/rtl/memvars.c
    source/rtl/math.c
    source/rtl/arrays.c
    source/rtl/console.c
    source/rtl/dates.c
    source/rtl/do.c
    source/rtl/errorapi.c
    source/rtl/filesys.c
    source/rtl/strings.c
    + Standard name registration method added (hvm.c).
    ! Completed init tables so that all declared Harbour function get
      registered.

  * include/run_exp.h
    + ACHOICE added.

  * source/compiler/harbour.y
    source/compiler/harbour.l
    source/rtl/itemapi.c
    source/rdd/dbcmd.c
    * Some tricks used to suppress unused variable warnings changed
      to HB_SYMBOL_UNUSED().

19990817-15:36 EDT Paul Tucker <ptucker@sympatico.ca>
   * source/debug/tbrwtext.prg
     * modified to with with cr/lf or just lf

19990817-21:10 GMT+1 Antonio Linares <alinares@fivetech.com>
   * source/rtl/errorsys.prg
     * public getlist := {} uncommented.

19990817-14:26 EDT Paul Tucker <ptucker@sympatico.ca>
   * source/debug/Makefile
     + tbrwtext.prg

19990817-20:51 GMT+1 Antonio Linares <alinares@fivetech.com>
   * source/rtl/tbrowse.prg
     * Added lHeaders := .f. at method New().
   * source/rtl/tbcolumn.prg
     * Small fix on nWidth do case otherwise.

19990817-20:35 GMT+2 Ryszard Glab <rglab@imid.med.pl>

    *source/compiler/harbour.y
        * corrected code used to generate HB_P_ENDPROC - the declared
         length of function/procedure is now equal to the number of bytes
         written into HRB file - some comments added

    *source/runner/runner.c
        * corrected reading of function/procedure body (it was trying to
         read (size+1) bytes)
        * the MAIN procedure is defined if HARBOUR_START_PROCEDURE is
         defined - the runner works with GCC/Linux now
        * corrected code used to call (_INITSTATIC) function - inside
         this function there is no access to passed parameters then
         there is no need to pass them - static variables can be
         initialized using literal values only

19990817-20:14 GMT+1 Victor Szel <info@szelvesz.hu>
  * tests/working/Makefile
    tests/working/colorind.prg (content moved to rtl_test.prg)
    tests/working/rtl_test.prg
    tests/working/testhbf.prg
    tests/working/and_or.prg
    ! Starting procedure name changed to Main() so Win32/GCC is also able to
      run them.
    * Some minor changes

19990817-13:50 EDT David G. Holm <dholm@jsd-llc.com>
  * config/dos/global.cf
    + Added code to leave COMSPEC alone instead of changing '\' to
      '/' for bcc31, because NT chokes on '/' when using the Cygwin
      GNU Make System to build the Borland C 3.1 version of Harbour.
  * source/rtl/console.c
    + Surrounded 'if( isatty( fileno( stdout ) ) )' in hb_outstd()
      with '#ifndef __CYGWIN__' and '#endif'.
    ! Corrected 'if( isatty( fileno( stdout ) ) )' in hb_outerr()
      to check stderr instead of stdout.
    + Surrounded 'if( isatty( fileno( stderr ) ) )' in hb_outerr()
      with #ifndef '__CYGWIN__' and '#endif'.
  * source/runner/runner.c
    ! Added ')' that was missing from a conditional test.
  * tests/working/dates4.prg
    * Moved output of extra CR/LF pair in CheckDate() subroutine to
      after the __Accept() call, because __Accept() already outputs
      a CR/LF pair before displaying the prompt.

19990817-17:13 GMT+1 Antonio Linares <alinares@fivetech.com>
   + source/debug/tbrwtext.prg
     * Class TBrwText for browsing debugger source code
   * source/debug/debugger.prg
     * Improved
   * makefile.b32
     * TBrwText module added

19990817-13:20 GMT+1 Antonio Linares <alinares@fivetech.com>
   * include/classes.ch
     * extern <SuperClass> added, so now the SuperClass symbol is properly linked.

19990817-07:30 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/vm/hvm.c
    source/rtl/errorapi.c
    source/rtl/classes.c
    source/rtl/fm.c
    source/rtl/itemapi.c
    source/rtl/transfrm.c
    include/error.ch
    + printf()s changed to a call to hb_errInternal() instead.
    * hb_callStackShow() modified so that it uses the same format as
      the standard error handler.

  * include/initsymc.h
    include/initsymd.h
    source/rtl/errorapi.c
    + Harbour callable __errRT_BASE() function added.

  * include/errorapi.h
    source/rdd/dbcmd.c
    source/rtl/errorapi.c
    source/rtl/arrays.c
    source/rtl/classes.c
    source/rtl/copyfile.c
    source/rtl/dates.c
    source/rtl/do.c
    source/rtl/errorapi.c
    source/rtl/filesys.c
    source/rtl/inkey.c
    source/rtl/math.c
    source/rtl/memvars.c
    source/rtl/set.c
    source/rtl/strings.c
    source/rtl/transfrm.c
    source/tools/dates2.c
    source/vm/hvm.c
    * hb_error*() -> hb_err*()
    - removed obsolete hb_errorNat*() prototypes.

  * include/hberrors.h
    include/hbpp.h
    source/compiler/harbour.y
    source/hbpp/*.c
    source/hbpp/stdalone/*.c
    + Added the ability to display warnings in standard format.
    ! Adjusted and corrected to help display of HBPP.EXE

  * source/rtl/objfunc.prg
    doc/subcodes.txt
    * Got rid of the QOUT() type runtime-error messages, there's now
      a more comprehensive, standard error checking system, which throws
      Harbour errors.
    ! Some small bugs fixed. (checking argument after usage, additional
      parameters passed in one place - typo)

  * include/hboo.ch
    source/rtl/objfunc.prg
    source/rtl/tclass.prg
    source/tools/stringp.prg
    * DATA_VAL -> DATA_VALUE

19990816-21:57 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/rtl/console.c
    tests/working/colorind.prg
    + Added standard header to __ColorIndex()
    ! Some Lint warnings fixed.
    + Some tests added.
  * include/hbdefs.h
    include/extend.h
    ! Some Lint warnings fixed.
  * include/Makefile
    + Added hboo.ch

19990816-22:15 GMT+3 Alexander Kresin
  * source/rtl/tbrowse.prg
  * tests/working/testbrw.prg
    * added functionality - methods PanLeft().PanRight(),Hilite(),DeHilite()
    * Up() and Down() now uses Scroll() and Hilite()/DeHilite() instead of
      RefreshAll() and RefreshCurrent()
  * source/hbpp/hbpp.c
    * Bug fixed for new CLASS implementation ( with 'extern' )

19990816-12:26 EDT Paul Tucker <ptucker@sympatico.ca>
  * source/rtl/browdb.prg
    + copyright info.
    + todo info
  * makefile.vc
    + browdb
    + tone

19990816-15:30 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/rtl/errorapi.c
    ! Fixed hb_errLaunch() so that it will handle error handler return
      values correctly. NOTEs added about this.

19990816-13:30 CET Eddie Runia <eddie@runia.com>
  * source/compiler/harbour.y
    EndProc error resolved.
    PushDouble error resolved.
    Padding problem resolved
  * source/runner/runner.c; include/run_exp.h
    First symbol should be executed. Main renamed to HB_RUN
    Init symbol code fixed

19990816-13:20 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/rtl/Makefile
    + browdb.prg added
  * source/rtl/errorsys.prg
    ! Removed ErrorLevel() call.
  * source/rtl/itemapi.c
    ! hb_evalNew() is no longer making a copy of the passed block/name
      parameters, so hb_evalRelease() will properly release that item.
      Although not exactly defined in CA-Clipper NG, the example program
      suggest that it works like this. CA-Clipper example generated unreleased
      blocks in Harbour.
    % Some variable scope optimized.

19990816-12:39 GMT+1 Antonio Linares <alinares@fivetech.com>
   + source/rtl/browdb.prg
     * source code for TBrowseDb()
   * source/rtl/tbrowse.prg
     * removed source code for TBrowseDb()
   * harbour/makefile.b32
     * browdb module added.

19990816-12:03 GMT+1 Antonio Linares <alinares@fivetech.com>
   * source/vm/hvm.c
     * Enhanced ProcName() returned information.
     (it generates the name of the Class and the method).

19990816-12:03 GMT+1 Antonio Linares <alinares@fivetech.com>
   * include/ctoharb.h
     + Added new hb_callStackShow() prototype
   * source/vm/hvm.c
     + Added new hb_callStackShow() function
     * improved internal errors reporting information

19990816-01:11 EDT Paul Tucker <ptucker@sympatico.ca>
  * source/vm/hvm.c
    * ProcessObjSymbols -> hb_vmProcessObjSymbols

19990816-02:45 GMT+1 Victor Szel <info@szelvesz.hu>

  * include/extend.h
    source/rtl/classes.c
    source/rtl/objfunc.prg
    source/rtl/tclass.prg
    source/vm/hvm.c
    source/tools/stringp.prg
    tests/working/dynobj.prg
    tests/working/debugtst.prg
    tests/working/inherit.prg
    tests/working/strip.prg
    tests/working/objects.prg

    % Some variables and functions made static in classes.c
    ! Completed init symbol list.

    * Names changed to standard ones (they should also work in 10 chars mode):

      ClassCreate     -> __clsNew
      ClassInstance   -> __clsInst
      __InstSuper     -> __clsInstSuper
      ClassAdd        -> __clsAddMsg
      ClassDel        -> __clsDelMsg
      ClassMod        -> __clsModMsg
      WClsDatas       -> __cls_CntClsData
      __wDatas        -> __cls_CntData
      __wDataDec      -> __cls_DecData
      __wDataInc      -> __cls_IncData

      aOMethod        -> __objGetMethodList
      aOData          -> __objGetMsgList
      aOGet           -> __objGetValueList
      aOSet           -> __objSetValueList
      oClone          -> __objClone
      ClassName       -> __objGetClsName
      oSend           -> __objSendMsg
      isMessage       -> __objHasMsg
      IsData          -> __objHasData
      IsMethod        -> __objHasMethod
      oAddMethod      -> __objAddMethod
      oAddInline      -> __objAddInLine
      oAddData        -> __objAddData
      oModMethod      -> __objModMethod
      oModInline      -> __objModInLine
      oDelMethod      -> __objDelMethod
      oDelInline      -> __objDelInLine
      oDelData        -> __objDelData

      ClassH          -> __msgClsH
      ClassName       -> __msgClsName
      ClassSel        -> __msgClsSel
      SelectSuper     -> __msgSuper
      EvalInline      -> __msgEvalInline
      GetClassData    -> __msgGetClsData
      SetClassData    -> __msgSetClsData
      GetData         -> __msgGetData
      SetData         -> __msgSetData
      Virtual         -> __msgVirtual

      DictRealloc     -> hb_clsDictRealloc
      ReleaseClass    -> hb_clsRelease
      ReleaseClasses  -> hb_clsReleaseAll
      hb_GetClassName -> hb_objGetClsName
      hb_GetMethod    -> hb_objGetMethod
      hb_isMessage    -> hb_objHasMsg

  * include/hboo.ch
    source/rtl/classes.c
    source/rtl/objfunc.prg
    source/rtl/tclass.prg
    source/tools/stringp.prg
    tests/working/dynobj.prg
    tests/working/objects.prg
    tests/working/overload.prg
    tests/working/objects.prg

    + MET_ and DATA_ declaration moved to one place (hboo.ch).

  * source/rtl/errorapi.c
    include/errorapi.h

    % hb_error*() functions are returning void instead of WORD, except for
      hb_errorRT_BASE_Ext1().

  * include/error.ch
    include/langapi.h
    source/rtl/langapi.c

    + New error code EG_ARRDIMENSION added

  * source/rtl/arrays.c

    ! ARRAY() now properly checks the passed parameters (Clipper compatible).
    + ARRAY() TODO: added (to support multiple dimensions)
    ! AADD() Fixed parameter handling, throws errors like Clipper.
    ! ASIZE() Fixed parameter handling.
    ! hb_arrayIns() removed one error to be Clipper compatible.
    ! hb_arrayDel() removed one error to be Clipper compatible.
    + AFILL(), ASCAN(), AEVAL(), ACOPY() TOFIX: added.

  * source/rtl/transform.c

    ! _exit -> exit (_exit had no prototype, and that was the only place
      where it was used)
    ! Some BYTE and int changed to BOOL at obviouse place.
    ! Some functions made static.
    ! Some unused variables removed (lFact*)

19990815-18:45 GMT+2 Ryszard Glab <rglab@imid.med.pl>

    *source/rtl/hvm.c
         * added 'hb_vm' prefix to alias/field related functions
         * some functions declared 'static'

    *include/ctoharb.h
         - removed declarations of internal virtual machine functions

    *source/compiler/harbour.y
         * changed an error description for incorrect use of PARAMETERS
         statement
         * added type casting to compile under C++ compilers
         * static frame is correctly generated if static variable
         is used in a codeblock only

    *include/extend.h
         - removed obsolete declaration of hb_memvarNewSymbol()

    *include/hb_vmpub.h
         + added definition of callback function HB_DYNS_FUNC used
         to enumerate dynamic symbols

    *source/vm/dynsym.c
         + new function hb_dynsymEval() that enumerates dynamic symbols
         by calling specified HB_DYNS_FUNC * function

    *source/rtl/memvars.c
         + added __MVCLEAR function to release all PRIVATE and PUBLIC
         variables (this function is used in CLEAR MEMORY statement)

19990815-19:59 GMT+3 Alexander Kresin
  * source/rtl/tbrowse.prg
  * tests/working/testbrw.prg
    * added functionality - some methods implemented, added support of
      footing, head separator, footer separator, freeze.
      Now it seems almost complete.

19990815-17:40 GMT+1 Victor Szel <info@szelvesz.hu>
  * bldodbc.bat
    hbodbc.b32
    * moved to /contrib/odbc
    * updated for the new locations (not tested though).

19990814-20:40 GMT+1 Victor Szel <info@szelvesz.hu>
  * include/hb_vmpub.h
    source/vm/dynsym.c
    ! FS_ declarations now included casts, to suppress some
      pedantic warnings (Win32/GCC -ansi -pedantic).
  * source/hbpp/hbpp.c
    source/hbpp/table.c
    ! Made them end with newline. (ANSI C req.)
  * source/vm/hvm.c
    include/rddapi.h
    source/hbpp/hbpp.c
    ! // comment changed to /**/ (ANSI C req.)
  * include/init.h
    include/run_exp.h
    source/compiler/harbour.y
    contrib/odbc/odbc.c
    source/hbpp/hbpplib.c
    source/rdd/dbfntx/dbfntx1.c
    source/rdd/dbcmd.c
    source/rdd/dbf1.c
    source/rdd/delim1.c
    source/rdd/sdf1.c
    source/rtl/arrays.c
    source/rtl/classes.c
    source/rtl/console.c
    source/rtl/copyfile.c
    source/rtl/dates.c
    source/rtl/descend.c
    source/rtl/dir.c
    source/rtl/environ.c
    source/rtl/filesys.c
    source/rtl/hardcr.c
    source/rtl/inkey.c
    source/rtl/math.c
    source/rtl/mtran.c
    source/rtl/set.c
    source/rtl/setcolor.c
    source/rtl/strings.c
    source/rtl/tone.c
    source/rtl/transfrm.c
    source/tools/dates2.c
    ! Corrected some HB_INIT_SYMBOLS_END() and HB_CALL_ON_STARTUP_END()
      macro definitions to include the ending ";".
    ! Removed the ";" after
      HB_INIT_SYMBOLS_END() and HB_CALL_ON_STARTUP_END() macro references.
      (ANSI C req.) (Win32/GCC complained about it with -ansi -pedantic:
      "warning: ANSI C does not allow extra `;' outside of a function")

19990814-19:55 GMT+1 Victor Szel <info@szelvesz.hu>
  * ChangeLog
    ChangeLog.002
    * Old ChangeLog renamed to ChangeLog.002
    * New ChangeLog created.
   * source/pp/pragma.c
   * contrib/dot/pp_harb.ch
   * tests/inline_c.prg
     * STOPDUMP renamed as ENDDUMP (with Ron permission)

2001-12-21 08:40 UTC-0300 Luiz Rafael Culik <culik@sl.conex.net>
   * utils/hbmake/hbmake.prg
    * small fix

2001-12-21 07:50 UTC-0300 Luiz Rafael Culik <culik@sl.conex.net>
  * source/rtl/filesys.c
    * hb_fsmkdir,hb_fsChdir,hb_fsRmdir,hb_fsDelete,hb_fsRename,hb_fsCurdirBuff()
      now use Win32 API calls
   * utils/hbmake/hbmake.prg
     ! Disabled profile
   * utils/hbmake/hbmutils.prg
     * An small clean up
   * ChangeLog
     * Renamed to ChangeLog.012 and started an new one
2006-02-15 13:50 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hvm.c
    ! fixed memory leak I introduced changing Ryszard modifications

      need such functionality yet
  + harbour/ChangeLog.015
  * harbour/source/vm/debug.c

  * harbour/harbour.spec
  * harbour/bin/hb-func.sh
    * some modification in xhb* scripts building - adding passing
      predefined compiler and linker switches
  * harbour/source/vm/hvm.c
    * minor code cleanup

2006-09-03 18:55 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapicls.h
  * harbour/source/vm/classes.c
  * harbour/source/vm/hvm.c
  * harbour/tests/overload.prg
    + added support for overloading [] in assignment operation

2006-09-03 16:30 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/ChangeLog
  + harbour/ChangeLog.016
    * new ChangeLog file created
  * harbour/include/hbver.h
    * updated version number to 0.47.0
  * tagged CVS as build47
