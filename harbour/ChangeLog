19990919-21:40 GMT+1 Victor Szel <info@szelvesz.hu>

  * source/rtl/console.c
    include/extend.h
    + BYTE* changed back to char* for the Console API functions, BYTE* casts
      were added for all hb_gt* and hb_fs*() calls.

19990919-17:14 GMT+1 Victor Szel <info@szelvesz.hu>

  * source/rtl/errorapi.c
    source/rtl/fm.c
    source/vm/hvm.c

    ! printf() calls changed to hb_outerr() calls, since Clipper is sending
      these to STDERR, too. The other issues fixed are file buffering and 
      console inconsistency.

      In general one should not use printf(), fprintf(), or any f*() file 
      functions to handle STDOUT/STDERR(), since this can cause anomalies due 
      to both direct and buffered access to the same device, and also the 
      internal cursor positions cannot be tracked that way. When using 
      f*() functions from console.c an fflush() call must be issued after
      them.

  * source/rtl/console.c
    include/extend.h
    + hb_outerr(), hb_outstd() are now public functions.
    + hb_outerr(), hb_outstd() now automatically determines the length 
      if the length parameter is zero.
    + hb_outerr(), hb_outstd() now don't call GT after hb_consoleRelease()
      has been called. This is needed since these functions are used in such
      situation, from hb_xexit() for example.
    ! hb_consoleRelease() now sets back the CRLF buffer to match the BINARY
      mode.
    ! fflush() calls are added after fputc()/fputs() call groups.

  * source/rtl/filesys.c
    ! hb_fsFNameMerge() now checks for buffer overrun.
  * source/rtl/gt/gtwin.c
    ! Added come casts to make Visual C happy. (mentioned by Matteo)
  * include/hbsetup.h
    * HARBOUR_YYDEBUG is now turned off by default. It can be
      turned on via the command line or C_USR. Please set your configuration
      if you need this feature.
  * include/rddsys.ch
    + Comment line added.
  * include/Makefile
    ! Updated the list of header files.
  * source/tools/hb_f.c
    ! Missing static added.
  * source/rtl/memofile.c
    + Added one cast.
  * source/rtl/itemapi.c
    ! hb_itemPutC() and hb_itemPutCL() now handles when the szText parameter
      is NULL. Clipper seems to handle this. GT_*() functions relies on this
      feature so they will not GPF now.

19990919-17:14 GMT+1 Victor Szel <info@szelvesz.hu>

  * source/compiler/harbour.y
    + Added some new items to the new TODO list.
  * include/hbsetup.h
    source/compiler/harbour.y
    + HARBOUR_YYDEBUG moved here for easy setup.

19990919-15:34 GMT+1 Victor Szel <info@szelvesz.hu>

  * source/rtl/console.c
    + Support added for //STDERR:x switch form.
    ! Fixed the redirection, it needed a bit more work, see next two items.
    % Some variable scopes adjusted. (these were removed with the next change)
    % fputs()/fputc()/fflush() changed to hb_fsWriteLarge()
    % Some (BYTE*) casts for BYTE* variables removed.
  * source/vm/cmdarg.c
    ! hb_cmdargNum() to not return -1 when the switch was found, but with
      not parameter.
  * source/vm/hvm.c
    ! Fixed constant error message about no starting procedure.
  * source/rtl/gt/gtwin.c
    ! Commented out closing of standard input and output, now printf()
      works after hb_consoleRelease(). (Thanks Paul)
  * tests/working/rtl_test.prg
    + Added Empty(ErrorNew()) test.
  * source/rtl/fm.c
    * Changed the ending message, since this is not the maximum memory 
      consumed, but the total. Made it more compact, and meaningful.

19990919-15:45 GMT+2 Ryszard Glab <rglab@imid.med.pl>

    *source/vm/hvm.c
	* added checking if starting symbol name points to a function
	
19990919-14:25 GMT+2 Ryszard Glab <rglab@imid.med.pl>

    *source/rtl/console.c
        * added two (char *) casts

    *source/compiler/harbour.y
        * corrected invalid error when LOOP or EXIT was used inside
          a BEGIN/END sequence

    *source/compiler/harbour.l
        * corrected recognition of invalid number when no separators
          were used (for example:  ? ( a=22.or.b=10 )

    *tests/broken/numform.prg
        - removed (code moved to tests/working/rtl_test.prg)

19990919-01:55 EDT Paul Tucker <ptucker@sympatico.ca>
  * source/rtl/environ.c
    * added 1 cast to an xgrab call.

19990919-09:31 GMT+3 Alexander Kresin
  * source/hbpp/hbpp.c
    * fixed bug with repeating result clauses ( noted by Antonio Linares )

19990919-06:21 GMT+1 Victor Szel <info@szelvesz.hu>

  * source/vm/hvm.c
    + Added support for CA-Clipper undocumented _APPMAIN starting function,
      if this is defined, Harbour will start it first, overriding the default
      starting proc.
    ! Fixed the case when no PUBLIC functions were declared with no
      explicit starting procedure. Now it will silently exit (STRICT mode)
      or show a proper unrecoverable error message, instead of a possible GPF,
    * __XHELP() - hb_dynsymFindName() changed to hb_dynsymFind()
  * source/rtl/environ.c
    include/extend.h
    + hb_version() added, separated from HB_VERSION(), to make it callable
      from C, too. //INFO needed it.
  * source/rtl/console.c
    + Added undocumented //STDERR feature, when specified it will redirect
      all stderr output to stdout.
  * source/rtl/alert.prg
    + ALERT() now handles the //NOALERT switch.
      The NOALERT feature is now always turned on, not only in STRICT mode.
    + __NONOALERT() undocumented Clipper function added.
  * source/rtl/hvm.c
  + source/rtl/cmdarg.c
    source/rtl/Makefile
    include/extend.h
    makefile.*
    makefile.vc (with extra care taken to retain the alphabetical order :-))
    + Internal command line and environment variable support added.
      //INFO //F:30 //TEMPPATH:"C:\TEMP", SET HARBOUR=F30;X00,
      SET CLIPPER=E0 INFO, now can be queried from Harbour runtime.
    + API added to reach the above functionality.
    + Harbour argument handling functions added:
      __ARGC()
      __ARGV()
      __ARGCHECK()
      __ARGGET()
    ! Now the internal parameters (//INFO) are no more passed to the Harbour
      MAIN and INIT functions.
    + Harbour now prints the version when //INFO switch is speficied.
  * source/rtl/fm.c
    + Will always print some memory info when the //INFO switch was specified.
  * include/clipdefs.h
    + Added WORD, DWORD typedefs.
  * source/rtl/strings.c
    include/extend.h
    + hb_strnicmp() added.
    % hb_stricmp() formatted, variable scopes adjusted, int type changed to
      char.
  * source/rtl/classes.c
    * Small modification.

19990918-17:42 GMT+1 Victor Szel <info@szelvesz.hu>

  * source/rtl/set.c
    * printhan < 0 changed to printhan == FS_ERROR, to not rely on the fact
      that FS_ERROR is negative.
  * source/rtl/console.c
    ! hb_out - One fsError() save/restore added for non GT mode console output.
    * *han >= 0 changed to *han != FS_ERROR, to not rely on the fact that
      FS_ERROR is negative.
    - Removed the // commented sections.
  * source/rtl/copyfile.c
    ! __COPYFILE() - Made the hb_fsOpen() flags Clipper compatible.
  * source/rtl/memvars.c
    ! __MVSAVE() - Made the hb_fsOpen flags Clipper compatible.
  * source/vm/hvm.c
    + new printf() info in hb_vmDo() integrated to hb_stackDispLocal().
      (not tested)
  * include/extend.h
    source/rtl/arrays.c
    source/vm/hvm.c
    * hb_arrayGetItemPointer() -> hb_arrayGetItemPtr()

19990918-14:59 GMT+1 Victor Szel <info@szelvesz.hu>

  * source/rtl/browdb.prg
    + _lastrec() -> lastrec()
    + _recno() -> recno()
  * source/rtl/transfrm.c
    * Small modification.

19990918-14:05 GMT+2 Ryszard Glab <rglab@imid.med.pl>

    *source/vm/hvm.c
        * corrected operators overloading
        (tests/working/overload.prg works correctly now)

19990918-13:07 GMT+1 Victor Szel <info@szelvesz.hu>

  * tests/working/rtl_test.prg
    ! OS_NewLine() is only used when __HARBOUR__ is defined.

19990918-01:55 EDT David G. Holm <dholm@jsd-llc.com>
  * config/win32/bcc32.cf
    ! My previous update only allowed Borland to compile, but not link.
      For some reason, the -L option didn't work. This update fixes that
      by dropping the -L option and specifying all libraries fully.
  * source/tools/io.c
    ! Restored version 1.11 as version 1.13 to restore the functions
      that were removed but shouldn't have been removed.

19990917-23:45 EDT David G. Holm <dholm@jsd-llc.com>

  * source/tools/Makefile
  + source/tools/osnewlin.prg
    + New module simplifies deciding when to use CR/LF
      or just LF when using OUTSTD() and/or OUTERR()

  * tests/working/Makefile
  + tests/working/longdev.prg
    + I forgot to 'cvs add' this module with my earlier large string
      changes, so it's a good thing that I left it out of the Makefile

  * tests/working/rtl_test.prg
    + Added 3 tests for long strings (longer than 64 KB, Harbour only)
      in a new function, Long_STRINGS()

  * tests/working/adirtest.prg
  * tests/working/cdow.prg
  * tests/working/dates.prg
  * tests/working/dates2.prg
  * tests/working/dates3.prg
  * tests/working/dates4.prg
  * tests/working/dirtest.prg
  * tests/working/harbour.ini
  * tests/working/longstr2.prg
  * tests/working/output.prg
  * tests/working/readfile.prg
  * tests/working/round.prg
  * tests/working/rtl_test.prg
  * tests/working/seconds.prg
  * tests/working/set_num.prg
  * tests/working/set_test.prg
  * tests/working/testcgi.prg
  * tests/working/testhtml.prg
    % These test programs now use OS_NewLine()
      instead of using 4 different methods.

19990918-04:58 GMT+1 Victor Szel <info@szelvesz.hu>

  * source/vm/hvm.c
    + Added WORD typedef for HARBOUR_OBJ_GENERATION section.
  * source/rtl/memofile.c
    + Added, this time for sure.
  * makefile.vc
    ! Now in alphabetical order.
  * source/compiler/harbour.y
    + Now the compiler shows if a message is a YACC error.
  * source/rtl/console.c
    + hb_max_row() now returns 23 for UNIXes and 24 otherwise.
    % fputs(" "...) -> fputc(' '...)

19990918-03:22 GMT+1 Victor Szel <info@szelvesz.hu>

  * source/rtl/memofile.c
    source/rtl/Makefile
    makefile.*
    funclist.txt
    + MEMOREAD()/MEMOWRIT() functions added.
      (Borland/MSVC makefiles modified, but not tested)
  * tests/working/rtl_test.prg
    + MEMOREAD()/MEMOWRIT() tests added.
  * include/itemapi.h
    source/rtl/itemapi.c
    + hb_itemPutCPtr() Item API function added, to make it possible to
      attach a buffer directly to a string item in a standard way, this
      way one memcpy()/strcpy() can be saved, this can be used when the caller
      have already allocated a buffer. Recommended when the expected string
      size is very large. The allocated buffer size must be ulLen + 1.
  * source/tools/io.c
    - CD(), MD(), RD(), DISKFREE() removed since these are in the standard
      RTL.
  * source/rtl/tget.prg
    ! Insert() fix by Kwon,Oh-Chul <ohchul@fivetech.net>
  * source/rtl/console.c
    ! HB___ACCEPTSTR() one missing underscore added.
    ! SAVESCREEN() pBuffer type changed back to void *, since xgrab() would not
      be compatible, (char*) casts would not be needed, and gtSave() would have
      to complain...in theory at least.
      (What was the compiler (and which one) complaining about ?)

19990917-21:10 EDT David G. Holm <dholm@jsd-llc.com>
  * include/extend.h
    % Changed local pointers in hb_xmemcpy() and hb_xmemset()
      from void * to BYTE * to keep Borland C compiler happy.

19990917-18:00 EDT David G. Holm <dholm@jsd-llc.com>

  * include/extend.h
    + Added hb_xmemcpy() and hb_xmemset()

  * source/hbpp/hbpp.c
  * source/hbpp/hbppint.c
  * source/hbpp/table.c
  * source/hbpp/stdalone/hbpp.c
    % Set __MINGW32__ up to use the same #includes as _MSC_VER so
      that a search for instances of where they are not sharing
      won't give false hits on these files (has no effect on code)

  * source/hbpp/table.c
    % __HARBOUR__ now has the value 1 (should we set this to be
      the same as the build number, leave it at 1, or increment
      it with each version number change?)

  * source/rtl/console.c
    % Changed all looping hb_fsWrite() calls to hb_fsWriteLarge()
    % Use hb_fsWriteLarge() instead of putc() and/or puts()
    + Added s_iFilenoStdout and s_iFilenoStderr to avoid calling
      fileno() more than once each for stdout and stderr

  * source/rtl/dates.c
    % Set __MINGW32__ up to use the same #includes as _MSC_VER,
      so that SECONDS() also returns fractions of a second

  * source/rtl/dir.c
    ! Moved normal hb_itemReturn() and ...Release()
      calls out of the MSC, IBM & MingW32 #if block

  * source/rtl/extend.c
    + Added hb_xmemcpy() and hb_xmemset() to allow copying and setting
      of strings that are up to ULONG_MAX in length.

  * source/rtl/filesys.c
    ! hb_fsReadLarge() and hb_fsWriteLarge() can now read and write
      strings up to ULONG_MAX in length instead of only USHORT_MAX

  * source/rtl/itemapi.c
    % All string copying is now done via the new hb_xmemcpy() to allow
      string lengths up to ULONG_MAX instead of UINT_MAX

  * source/rtl/strings.c
    % All string copying is now done via the new hb_xmemcpy() to allow
      string lengths up to ULONG_MAX instead of UINT_MAX
    % HB_SPACE() now uses the new hb_xmemset() to allow string lengths
      up to ULONG_MAX instead of UINT_MAX

  * source/rtl/gt/gtos2.c
    ! Added missing ';' on 'USHORT width, y' in hb_gt_SetAttribute()

  * source/vm/hvm.c
    % All string copying is now done via the new hb_xmemcpy() to allow
      string lengths up to ULONG_MAX instead of UINT_MAX

  + tests/working/longdev.prg
    + New module tests VM and file handling of strings longer than USHRT_MAX

  * tests/working/inkeytst.prg
    % Only display the Cygwin if the program was built using Cygwin

19990917-15:10 GMT+1 Victor Szel <info@szelvesz.hu>

  * include/compiler.h
    include/hbdefs.h
    source/rtl/gt/gtwin.c
    ! WORD/DWORD type declaration moved from hbdefs.h to compiler.h and
      gtwin.c
    - LOWORD() removed from hbdefs.h
    * HIBYTE() now uses USHORT instead of WORD. (Is this OK ?)
  * source/rtl/extend.c
    * WORD -> USHORT
    ; Now only the compiler should be cleaned up from WORD types. (TODO !)
      GTWIN.C should define these types locally.
  * source/rtl/classes.c
    * WORD -> USHORT
    ! Some hb_parnl() changed to hb_parni() for class handles.
  * include/extend.h
    * WORD -> USHORT for all variables within HB_ITEM.
  * source/itemapi.c
    source/arrays.c
    include/extend.h
    * WORD -> USHORT for array/object struct.

19990917-13:30 GMT+1 Victor Szel <info@szelvesz.hu>

  * source/rtl/codebloc.c
    include/extend.h
    * WORD -> USHORT for codeblocks.
  * source/rtl/transfrm.c
    % Internal vmDo() call replaced with standard API functions.
    ! Internal error removed, direct buffer string modification resolved.
  * source/rtl/objfunc.prg
    + Explcitly repeated function names in the __ERR*() calls changed to
      PROCNAME(0).
  * source/vm/hvm.c
    include/ctoharb.h
    include/init.h
    ! Typo fixed.
    * WORD -> USHORT (for parameter count, local/static indexes and almost
      all the others)
      Only one WORD declaration stayed, this one is related to OBJ generation
      and SYMBOLS.ASM, so it should have strictly fixed size.
    ; Here comes to mind that the PCODE model should have a clear definition on
      the byte level, so that VMs could process pcode byte stream compiled
      on any platform, we are almost there, but for example storing a DOUBLE
      directly in the pcode could cause portability problems.
  * source/rdd/dbcmd.c
    + WORD -> USHORT (wLen)
    % HB_USED() small opt.
  * source/compiler/harbour.y
    * pOutPath made global and renamed to _pOutPath
    * "Functions %i" -> "Functions/Procedures %i"
  * source/rtl/console.c
    % __SHADOW() param checking logic simplified and corrected.
    % DISPOUT(), DEVOUT() one ISCHAR() call removed so it's a bit faster now.

19990917-11:30 GMT+1 Victor Szel <info@szelvesz.hu>

  * include/ctoharb.h
    source/vm/hvm.c
    + WORD -> USHORT (s_wActionRequest)
    + WORD -> int (wDec)
    + WORD -> USHORT (array dimensions)
    + WORD -> ULONG (array elements)
    ! __XHELP now uses hb_dynsymFindName() instead of hb_dynsymFind()
  * source/vm/debug.c
    + WORD -> USHORT
    * Using hb_itemRelease() instead of hb_itemClear() + hb_xfree()
    * Small formatting changes.
  * source/vm/dynsym.c
    + WORD -> USHORT
  * source/rtl/gtapi.c
    + Some types changed from char* to BYTE* to match the environment, so a
      few casts could be removed.
  * tests/working/dynsym.prg
    + Added test for __dynsymGetIndex(), it will now GPF, since this function
      is buggy right now.

19990916-23:45 EDT Paul Tucker <ptucker@sympatico.ca>
  * source/rtl/console.c
  * source/rtl/gtapi.c
    * added a number of casts
      The problem with declaring something to acctype (BYTE*) is that then
      the overly sensitive MSVC complains about passing a const * to it -
      it becomes quite bothersome to use (IMO).

19990917-03:15 GMT+1 Victor Szel <info@szelvesz.hu>

  * source/rtl/transfrm.c
    * WORD -> USHORT
  * include/errorapi.h
    source/rtl/errorapi.c
    source/rtl/copyfile.c
    source/rtl/filesys.c
    source/rtl/memvars.c
    source/rtl/set.c
    source/runner/runlib.c
    source/rdd/dbcmd.c
    * Changed WORD to USHORT in all Error handling stuff.
  * tests/working/rtl_test.prg
    * Version() -> Version( 0 ) (xBase++ likes the numeric value better here,
      but I could not test it)

19990917-03:15 GMT+1 Victor Szel <info@szelvesz.hu>

  * source/rtl/console.c (mainly)
    source/rtl/gtapi.c
    source/rtl/strings.c
    source/rtl/hardcr.c
    source/rtl/mtran.c
    + Changed some explicit constants to manifest constants (keyboard codes,
      character codes)
    % [f]printf( "%c", c ) -> fputc( c, std??? ) for speed.
    % [f]printf( "%s", s ) -> fputs( s, std??? ) for speed.
    % printf( constant ) -> fputs( constant, std??? ) for speed.
    ; Since I'm not sure whether fflush() is called from fput*() functions,
      it may be needed to place more explicit flush calls. This may have been
      an issue already since printf() is only flushing on \n chars, at least
      in MINGW32.
    ! s_szAcceptResult is now initialized on startup as an empty string.
    ! One cast added to hb_retc()/SAVESCREEN().
  * include/inkey.h
    + NOTE that is's used from C, too.
  * include/hbdefs.h
    + HB_CHAR_ common character constants added.

19990916-19:35 EDT David G. Holm <dholm@jsd-llc.com>

  * doc/gmake.txt
    + Added gcc/mingw32.
    + Updated the BUILD.BAT paragraph.

  * source/rtl/console.c
    ! Added missing type override to hb_xgrab() call in SAVESCREEN().

  * source/rtl/dir.c
    ! Changed FA_READONLY to FA_RDONLY
    ! Changed FILE_RDONLY to FILE_READONLY

  * source/rtl/environ.c
    ! Added conditional definition of a Windows define
      that is missing from some versions of Borland C.
      Thanks to Jose Lalin.
    + Added compiler identification to VERSION(), but
      only if called with a parameter (any parameter)
      based on an idea by Victor Szel.

  * source/rtl/filesys.c
    ! Added '#include <dos.h>' for Borland C in order
      to eliminate a warning regarding '_getdrive()'.

  * source/rtl/inkey.c
    ! Restored Unix-style keyboard input, because it is
      non-blocking under Linux/GCC.
    + Added separate __CYGWIN__ Unix-style keyboard input,
      because it is blocking under Win32/GCC.
    + Actually added the Borland C Windows #elif code block
      supplied by Jose Lalin this time.

  * tests/working/inkeytst.prg
    * Modified warning text to refer only to Cygwin.

  * tests/working/version.prg
    * Changed 'QOUT( VERSION() )' to '? VERSION()'.
    + Added '? VERSION( .T. )' to display the compiler that
      was used to build Harbour.exe (which does not have to
      be the same compiler used to build the Harbour program).

19990917-00:50 GMT+1 Victor Szel <info@szelvesz.hu>

  * source/rtl/hardcr.c
    ! Fixed so that it doesn't modify the buffer returned by hb_parc(),
      it now uses Item API calls.
  * source/hbpp/stdalone/hbpp.c
    + Enhanced header.
  * source/runner/stdalone/runner.prg
    + Enhanced header.
  * source/runner/runlib.c
    + __HRBRUN() will now add default extension (.hrb) to the passed filename.

19990917-00:05 GMT+1 Victor Szel <info@szelvesz.hu>

  * include/hbdefs.h
    + typedef BYTE HB_CHAR;
    + typedef BYTE HB_ATTR;
  * source/rtl/mtran.c
    % Some Extend API calls changed for Item API, for speed.
    + const keyword added.
  * source/rtl/tone.c
    % TONE() parameters checking simplified.
    * Variable names standardized.
  * source/rtl/set.c
    * Removed all direct item access, replaced them with Item API calls.
    * Some variable names standardized.
    ! int -> BOOL in one place.
    ! int -> USHORT for hb_fsError() retvals.
  * source/rtl/console.c
    ! int -> USHORT for hb_fsError() retvals.
    * Variable names changed ( len -> ulLen, count -> ulCount, uiCount )
    * pcount() > x -> pcount() >= x+1
  * source/vm/hvm.c
    * pcount() > x -> pcount() >= x+1 (ERRORLEVEL())
  * source/rtl/setcolor.c
    ! 0 -> '\0'
    ! SETCOLOR() now doesn't accept a non string parameter.

19990916-23:00 GMT+1 Victor Szel <info@szelvesz.hu>

  * source/rtl/gtapi.c
    ! hb_gtWriteCon() fixed handling of backspace character.
  * source/rtl/console.c
    % Some extend API calls changed to Item API to make it faster
    * Types changed: WORD -> USHORT to better sync it with GT API.
      char * -> BYTE *, int -> USHORT
    ! __ACCEPT() the length of the return string was not set properly under
      Unix.
    ! __ACCEPT() now displays non-string parameters, too, the logic is
      also simplified by just calling HB_QOUT(), like in Clipper.
      It will always call QOUT() even if no parameters were passed. This is
      still not *exactly* what Clipper does.
    ! __ACCEPT() now displays all parameters not only the first one.
    ! __ACCEPT() now used hb_retc() instead of hb_retclen().
    ! hb_consoleRelease() now sets back stdout, and stderr to TEXT mode.
    ! __ACCEPT() one explicit constant changed to ACCEPT_BUFFER_LEN.
    ! __ACCEPT() now accepts ascii chars higher than 127, like in Clipper.
    + __ACCEPTSTR() added for Clipper compatbility, this will return the
      result of the last __ACCEPT() call.
  * source/rtl/inkey.c
    ! Small formatting fix.

19990916-21:00 GMT+1 Victor Szel <info@szelvesz.hu>

  * source/rtl/*.c
    * Copyright text format change.
    + Missing copyright headers added.
    ; Now this work is finished.
  * include/extend.h
    + hb_tone() prototype added.
  * source/rtl/gt/gtwin.c
    - Commented out two unused static variables.
  * source/rtl/classes.c
    - Removed two unused variables.
  * tests/working/rtl_test.prg
    + Some lines uncommented, since the PP can now process them.
  * tests/working/testcopy.prg
    tests/working/Makefile
    - Removed since it's now in RTL_TEST.
  * tests/working/hb*.bat
    ! Updates by Jose Lalin.
  * makefile.b32
    ! Added memvarbl.prg
  * source/rtl/achoice.prg
    source/rtl/adir.prg
    source/rtl/alert.prg
    source/rtl/asort.prg
    source/rtl/memvarbl.prg
    source/rtl/menuto.prg
    source/rtl/objfunc.prg
    source/rtl/readvar.prg
    source/rtl/setkey.prg
    source/rtl/tbcolumn.prg
    source/rtl/tclass.prg
    source/rtl/tgetlist.prg
    source/rtl/errorsys.prg
    + Using IS*() macros for type checking, common.ch
      #included to all of these files.
    * Some = changed to == in setkey.prg

19990916-17:10 GMT+2 Ryszard Glab <rglab@imid.med.pl>

    *source/vm/dynsym.c
    *include/extend.h
        + new function HB_DYNS hb_dynsymFindName( char * szName )
        that checks if given name is a public symbol - this function
        converts given name to uppercase before checking

    *source/rtl/itemapi.c
    *source/rtl/classes.c
    *source/rtl/do.c
    *source/vm/hvm.c
        * replaced hb_dynsymGet with new hb_dynsymFindName

    *source/rdd/dbcmd.c
        * replaced hb_dynsymFind with new hb_dynsymFindName

    *source/rtl/dir.c
        * corrected invalid mask value in HarbourToOsMask()

19990916-14:30 GMT+1 Victor Szel <info@szelvesz.hu>
  * makefile.vc
    ! Fixed version by Matteo Baccan.

19990916-14:20 GMT+1 Victor Szel <info@szelvesz.hu>

  * source/rtl/mouse/*.*
    * Copyright text format change.
  * source/rtl/gt/*.c
    ! Indentations, formatting errors corrected.
    ! // comments change to /**/
    + Copyright headers added.
  * source/rtl/inkey.c
    ! // comments change to /**/
  * source/rtl/gt/gt_tpl.c
    ! Fixed hb_gt_SetMode() return value type.
  * source/rtl/gtapi.c
    ! hb_gtRepChar() will check for buffer overflow.
  * include/gtapi.h
    ! Added hb_gt_Replicate() to GTAPI.H
    * Variable names revised, standardized.
  * source/rtl/errorapi.c
    * hb_errPutArgs() Now using Item API instead of Array API.

  * source/rtl/console.c
    source/rtl/gtapi.c
    source/rtl/gt/*.c
    include/gtapi.h
    + API functions made more Clipper compatible with some arg type changes:
      hb_gtBox() - Character parameter: char * -> BYTE *
      hb_gtRepChar() - USHORT character changed to BYTE, this is not completely
           Clipper compatible, but I've considered a bug to accept a character
           in an USHORT.
      hb_gtRest() - Buffer parameter: char * -> void *
      hb_gtSave() - Buffer parameter: char * -> void *
      hb_gtWrite*() - Character parameter: char * -> BYTE *
    * Some types changed in the low-level API.
      hb_gt_IsColor() - retval: int -> BOOL
      hb_gt_Get/SetCursorStyle() - int -> USHORT to match the high level API
      hb_gt_Puts() - char * -> BYTE *, int -> ULONG for the length.
      hb_gt_GetText() - char * -> BYTE *
      hb_gt_PutText() - char * -> BYTE *
      hb_gt_Replicate() - char -> BYTE, DWORD -> ULONG
    ; IMHO later we should change all unsigned coordinate types to signed ones,
      so that we can have a better "virtual screen" support. All attribute
      types to a generic HB_ATTR, all characters to HB_CHAR.

19990916-11:15 GMT+1 Victor Szel <info@szelvesz.hu>

  * source/vm/hvm.c
    + __XHELP() function added.
    ; So now if we had defined a function named HELP() in our app, it will be
      called by default if the user presses the F1 key. Like in Clipper.
    + Now using SYSINIT to force linking of the system init modul, instead of
      ERRORSYS. Forcing ERRORNEW explicitly is not needed, so it's now removed.
  * source/rtl/harbinit.prg
    + ANNOUNCE SYSINIT added.
    + __SETHELPK() function added.
  * source/rtl/harbinit.prg (added)
    source/rtl/errorsys.prg
    source/rtl/Makefile
    makefile.*
    ! ClipInit() INIT procedure moved from ERRORSYS to a separate .prg,
      this way the ERRORSYS.PRG module is completely replacable, like in
      Clipper.
      ( ! Borland and MSVC users please check the modified Makefiles ! )
  * source/rtl/*.prg
    + All copyright header changed to the new one.
    + Missing copyright headers added.

19990916-13:07 GMT+3 Alexander Kresin
  * source/hbpp/hbpp.c
    * fixed  bug with Release ( noted by David G. Holm )

19990916-10:37 GMT+1 Antonio Linares <alinares@fivetech.com>
  * source/compiler/harbour.y
    * Added support for multiple include paths using /I compiler flag

19990916-05:50 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/rtl/itemapi.c
    + Added NOTE why pItemArg1 is needed.
  * tests/working/transdef.prg
    tests/broken/parexpr.prg
    - Removed (now for sure)

19990915-23:35 EDT Paul Tucker <ptucker@sympatico.ca>
  * source/rtl/gt/gtos2.c
    source/rtl/gt/gtwin.c
    source/rtl/gt/gtdos.c
    include/gtapi.h
    * converted a number of parameters to USHORT, SHORT or BYTE

19990916-05:30 GMT+1 Victor Szel <info@szelvesz.hu>

  * source/compiler/harbour.y
    include/hberrors.h
    ! Proper error shown when more than one input (.prg) filenames are
      specified, it caused a leak previously and was not compatible with
      Clipper.
    ! Invalid filename message when the passed filename only contains dir/drive.
      GPF fixed.
  * *.bat
    tests/working/*.bat
    ! @echo off commands moved to the top of files.
  * tests/working/setkeys.prg
    ! Some functions names fixed, it still doesn't work because GetActive()
      function is not yet implemented.
  * tests/working/rtl_test.prg
    tests/working/transdef.prg (removed)
    tests/working/Makefile
    * Tests from transdef.prg moved to rtl_test.prg (2 failures more now)
    tests/working/transdef.prg (removed)
  * tests/broken/parexpr.prg
    - Removed, since it's in working now.
  ; The bugs above were reported by Jose Lalin.
  * source/rtl/*.* (partial)
    + All copyright header changed to the new one.
    + Missing copyright headers added.

19990916-03:57 GMT+1 Victor Szel <info@szelvesz.hu>

  * source/rdd/*
    source/tools/dates2.c
    source/tools/stringp.prg
    source/tools/nconvert.prg
    source/tools/fileread.prg
    source/tools/numtxthu.prg
    source/tools/strfmt.c
    + All copyright header changed to the new one.
  * source/rtl/menuto.prg
    ! RELEASE (cVariable) changed to __MVRELEASE( cVariable ) since now
      to former is not preprocessed, which is fine BTW, since Clipper
      is doing the same.
  * make_tpl.*
    + mingw32 added as a new option.

19990916-03:17 GMT+1 Victor Szel <info@szelvesz.hu>

  * source/debug/*.*
    source/hbpp/*.*
    source/hbpp/stdalone/hbpp.c
    + Copyright text changed to the newer version.
    + Missing copyright headers added.
  * source/runner/runlib.c
    + TODO: added about default extension handling.
  * source/hbpp/stdalone/hbpp.c
    source/hbpp/hbppint.c
    source/hbpp/hbpplib.c
    ! Formatting error corrected.

19990914-20:45 EDT David G. Holm <dholm@jsd-llc.com>
  + config/win32/mingw32.cf
  * source/hbpp/hbpp.c
  * source/hbpp/hbppint.c
  * source/rtl/console.c
  * source/rtl/dir.c
  * source/rtl/environ.c
  * source/rtl/filesys.c
  * source/rtl/inkey.c
  * source/rtl/tone.c
    + Added __MINGW32__ support for Cygnus GCC compiler.

19990916-02:25 GMT+1 Victor Szel <info@szelvesz.hu>

  * source/compiler/symbols.asm (removed)
    source/vm/symbols.asm (added)
    makefile.b31
    * Moved to VM since it belongs there.
  * source/rtl/filesys.c
    ! Added missing break; to hb_fsSetDevMode()/_MSC_VER branch.
  * source/tools/hb_f.c
    source/vm/*.c
    source/compiler/*.c
    source/compiler/harbour.l
    source/compiler/harbour.y
    * Copyright text changed to the newer version.
  * source/compiler/harbour.y
    ! One buggy error message text fixed (%i format specifier removed).

19990915-17:40 EDT David G. Holm <dholm@jsd-llc.com>

  * include/itemapi.h
  * source/rtl/itemapi.c
    ! Added a third argument, PBH_ITEM pItemArg1, to the hb_itemDo()
      and hb_itemDoC() functions to solve a var-arg problem with the
      OS/2 version of GCC. When calling hb_itemDo() or hb_itemDoC() to
      evaluate a symbol, function, or code block that does not take
      any arguments, use '(PHB_ITEM *) 0' as the third argument.

  * config/win32/bcc32.cf
    ! The GNU make system now works with Borland 32-bit compilers.

  * config/win32/gcc.cf
    * Removed '-lmoldname' in order to avoid polluting the __CYGWIN__
      build with __MINGW32__ stuff.

  * source/compiler/harbour.l
    ! Removed 'extern int _bQuiet', because it conflicts with the
      'extern BOOL _bQuiet' declaration in include/compiler.h.

  * source/rtl/console.c
    ! Added __CYGWIN__ to the Unix-style input in HB___ACCEPT()

  * source/rtl/filesys.c
    ! Removed the alleged Cygwin mode flag fix, which turned out to
      be an incomptibility between the CYGWIN and MINGW32 libraries.

  * source/rtl/inkey.c
    ! Applied the Borland Windows fix supplied by Jose Lalin.
    ! Changed Cygwin support to use the Unix method in order to
      avoid polluting the __CYGWIN__ build with __MINGW32__ stuff.
    ! Moved the Unix keyboard input from hb_inkeyPoll() to hb_inkeyGet()
      in order to stop blocking the VM when it polls the keyboard.

  * tests/working/inkeytst.prg
    + Display a note regarding Unix-style keyboard input.
    ! Changed the final keyboard test exit key from ESC to TAB, because
      Unix-style keyboard input uses ESC as the lead-in for extended keys.

19990915-23:20 GMT+3 Alexander Kresin
  * source/hbpp/hbpp.c
  * source/hbpp/table.c
    * fixed some bugs, reported by Victor and Matteo

19990915-15:50 GMT+1 Victor Szel <info@szelvesz.hu>
  * doc/hdr_tpl.txt
    * Some small changes.
  * include/*.api
    include/*.ch
    include/*.h
    + Added copyright header to all files, where the original author is not
      known, it's not filled.
    * Standardized the copyright header for all users.
    * ChangeLog sections separated from the copyright headers.
    * The one-liner file descriptions standardized.

19990915-14:14 GMT+1 Victor Szel <info@szelvesz.hu>
  * doc/license.txt
    + Added a text file containing the license text.
  * doc/hdr_tpl.txt
    ! Typo fixed (now v1.8)

19990915-14:04 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/rtl/dir.c
    include/directry.ch
    ! printf()s commented out, proper (but silent) error handling added.
    + Now using directry.ch for the array format.
    + A TODO: added about changing the file composing/decomposing functionality
      to hb_fsFNameSplit()/Merge() functions.
    + NOTE added that the third parameter is a Harbour extension.
    % Some small logic streamlining.
    * Some variable names changes, some variable scopes adjusted.
  * source/compiler/genobj32.c
    + Every static thing is now declared static.
    + Missing prototypes added.
  * source/rtl/hardcr.c
    source/rtl/mtran.c
    source/tools/dates2.c
    * Slight change in the format of the copyright header, the text itself
      has not changed.
  * source/rtl/filesys.c
    + hb_fnFNameMerge() - TOFIX: added again about the lack of buffer overlow
      handling.
  * .cvsignore
    ! DOS/LINUX/OS2 GNU Make systems working directories added.
  * doc/hdr_tpl.txt
    + Some fine tunings, see the files own history. The copyright text hasn't
      changed. Version 1.7
  * include/std.ch
    include/Makefile
    + Added a skeleton and a TODO for the STD.CH file.

19990915-11:15 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/rtl/dir.c
    ! Two warnings fixed about possibly missing paranthesis.
    + Reformatted.
  * source/rtl/adir.prg
    ! Default flags reset to "HSD"
  * tests/working/adirtest.prg
    ! Fixed a bug which caused an error when zero files was found.
    + Added: SET DATE ANSI, SET CENTURY ON
    ! Newline handling made platform compatible.
    ! Some other fixes.
  * source/rtl/memvars.c
    ! Typos fixed.

19990915-03:40 EDT Paul Tucker <ptucker@sympatico.ca>
  * source/rtl/dir.c
    * Now Clipper compatible results are returned.
      definately with MSVC - most likely with compilers running under MS OS.
      since I'm not familliar with any quirks with those compilers I made
      almost no changes to compiler specific code.  I suspect though that
      there may be problems when passing a full path with wildcard to
      Directory() - please test.
    + You can now get the 8.3 filename (msvc again) for true Clipper
      compatibible return results by passing a logical as the new 3rd
      parameter. The default is .f. which gives full long filenames
    + Add a number of static funcs like HarbourMaskToAttributes() to
      convert "DHS" to something the os understands.
    ! Where this all falls apart is for OS_UNIX_COMPATIBLE.
      I don't know what to do about translating Hidden or System files.
      and not too sure how to handle Readonly.
      Nobody commented when I posted the code - so here is what I came up
      with.
  * tests/working/dirtest.prg
    + added 3rd parameter to indicate 'want 8.3 filenames'

19990915-03:20 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/rtl/do.c
    - Previous fix undone, since it was causing other problems.

19990915-02:20 GMT+1 Victor Szel <info@szelvesz.hu>
  * .cvspass
    - File removed, since it was probably added by incident.

19990915-01:22 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/compiler/gen*.c
    + some fflush() calls added to see a better feedback about the progress
      of the generation process.

19990915-00:38 GMT+1 Victor Szel <info@szelvesz.hu>
  * tests/working/sound.prg
    tests/working/*.bat
    tests/working/*.ch
    + CVS header added to all files.
    + @echo off added where missing.

19990915-00:30 GMT+1 Victor Szel <info@szelvesz.hu>
  * (*.* in the root directory)
    + CVS header added to all files.
    + @echo off added where missing.
  * build32.bat
    build40.bat
    build31.bat
    build.bat (renamed)
    build16.bat (new)
    buildrdd.bat (removed)
    bldgt32.bat (removed)
    bldhbpp.bat (removed)
    % These three batch files has been incorporated to the main build
      batch files, since they were simple one-liners.
    ! hbpplib.b32 build process was executed two times from the build32.bat
      and build40.bat files.
    * build.bat renamed to build16.bat

19990914-17:30 GMT+1 Victor Szel <info@szelvesz.hu>
  * config/rules.cf
    * Harbour flag /q changed to /q0 to omit the compiler header.
  * source/rtl/do.c
    ! DO() fixed to use hb_dynsymFind() instead of hb_dynsymGet(),
      now it properly displays when the passed string is not a symbol, rather
      then throwing an internal error.
  * source/compiler/harbour.y
    + /CREDITS command line switch to display the development team. Like in
      Clipper.

19990914-13:15 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/compiler/harbour.y
    source/compiler/gen*.c
    + Help screen made more Clipper like.
    + /f switch changed to /gf, and the whole object generation build
      in to the source in a more standard way. It works now.
    + /q0 switch added to the help screen.
    + All filename composing stuff related to specific output types moved to
      the appropriate gen*.c file. This way the code is more modular.
    ! One variable made static in genobj32.c

19990914-11:40 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/runner/stdalone/external.prg
    include/external.ch
    * Regenerated.
  * source/runner/runlib.c
    ! Made some steps to release memory blocks when an undeclared symbol error
      occurs, seemingly with few success. This needs some more work.
    + TODO added about a possible direction for further development.
      The idea would be to replicate the Blinker DLL functionality.
  * source/compiler/harbour.y
    source/compiler/harbour.l
    source/compiler/gen*.c
    * Only every 100th line number is shown on the counter while parsing,
      this way it's more Clipper like. In theory it should also be faster,
      but due to the stdout buffering, it's approx. the same speed. Though it
      could be faster in some platform/compiler/screen output combinations.
    + The "syntax ok" message is now replaced with the total number of
      functions and the total number of lines. Similar to Clipper, but not
      so specific to the generated output.
    + /q0 switch no suppresses the "Harbour Compiler" header.
    + The "Generating ... output" line format changed, it's now more
      compact.
  * tests/working/rtl_test.prg
    + A new VAL() test added to test the huge value problem.
    ! One failure eliminated by hiding a filename generating difference in
      __COPYFILE(), NOTE added about this.
  * source/rtl/strings.c
    + HB_VAL() now uses hb_retnlen().
    ! HB_VAL() was incompatible for huge integer values (5000000000). This
      is fixed.
  * source/rtl/memvars.c
    * __MVRESTORE() is now using hb_itemPutNLen()
  * source/rtl/extend.c
    include/extend.h
    + hb_retnlen() Extend API function added, which is a wrapper for
      hb_itemPutNLen().
  * source/rtl/itemapi.c
    include/itemapi.h
    + hb_itemPutNLen() generic function added to assign a number to an item,
      the low-level type of the number is automatically selected, based on the
      magnitude and presence of decimal places. Similar to hb_vmPushNumber().
    + hb_itemPutN?Len() functions will now accept any negative width/dec
      parameters as a request for the default. So:
      For iDec now any negative number will do the same as -1 before.
      For iWidth now any negative number will do the same as 0 before.
      This way the interface is more fool proof and consistent.

19990914-01:00 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/vm/hvm.c
    include/ctoharb.h
    + hb_vmEqual() - Added support for alternate equal operator: "="
      Currently they are exact synonyms.
    + hb_vmInc()/hb_vmDec() - "++", "--" operator overloading support added.
    + hb_stackDispLocal() - More values are printed, the format changed.
  * tests/working/rtl_test.prg
    tests/working/overload.prg
    ! The tests fixed again, "+="/"-=" operators removed from the class
      declaration.
    * "+"/"-" implementation changed to not modify the original value, since
      the expression "oString + 'A'" in itself in one line is not valid anyway.
    + "++", "--" operator overloading added.
    - Removed the "<>" and "#" overloading methods since they were not needed
      in this case.

19990913-23:45 GMT+1 Victor Szel <info@szelvesz.hu>
  * source/vm/hvm.c
    + hb_vmInString() - Added support for overloading the "$" operator.
    ! hb_vmPlus() - Fixed the operator overloading feature.
    + hb_vmNotEqual() - Added support for alternate notequal operators:
      "<>" and "#".
  * tests/working/rtl_test.prg
    tests/working/overload.prg
    - Removed +=, -= tests, since they will destroy the object, basically
      this gets executed: oString := oString + "Hello", where the right side
      expression will result in a string, which gets assigned to the object.
      This could be fixed by changing the overloader block to return self BTW,
      but from the test point of view, this is the same as "+"/"-".
  * gt.b32
    makefile.b32
    runner.b32
    ! Fixes by Jose Lalin

19990913-23:00 GMT+1 Victor Szel <info@szelvesz.hu>
  * ChangeLog
    ChangeLog.003
    * Old ChangeLog renamed to ChangeLog.003
    * New ChangeLog created.
   * source/pp/pragma.c
   * contrib/dot/pp_harb.ch
   * tests/inline_c.prg
     * STOPDUMP renamed as ENDDUMP (with Ron permission)

2001-12-21 08:40 UTC-0300 Luiz Rafael Culik <culik@sl.conex.net>
   * utils/hbmake/hbmake.prg
    * small fix

2001-12-21 07:50 UTC-0300 Luiz Rafael Culik <culik@sl.conex.net>
  * source/rtl/filesys.c
    * hb_fsmkdir,hb_fsChdir,hb_fsRmdir,hb_fsDelete,hb_fsRename,hb_fsCurdirBuff()
      now use Win32 API calls
   * utils/hbmake/hbmake.prg
     ! Disabled profile
   * utils/hbmake/hbmutils.prg
     * An small clean up
   * ChangeLog
     * Renamed to ChangeLog.012 and started an new one
2006-02-15 13:50 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hvm.c
    ! fixed memory leak I introduced changing Ryszard modifications

      need such functionality yet
  + harbour/ChangeLog.015
  * harbour/source/vm/debug.c

  * harbour/harbour.spec
  * harbour/bin/hb-func.sh
    * some modification in xhb* scripts building - adding passing
      predefined compiler and linker switches
  * harbour/source/vm/hvm.c
    * minor code cleanup

2006-09-03 18:55 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapicls.h
  * harbour/source/vm/classes.c
  * harbour/source/vm/hvm.c
  * harbour/tests/overload.prg
    + added support for overloading [] in assignment operation

2006-09-03 16:30 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/ChangeLog
  + harbour/ChangeLog.016
    * new ChangeLog file created
  * harbour/include/hbver.h
    * updated version number to 0.47.0
  * tagged CVS as build47
