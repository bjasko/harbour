2001-04-28 23:15 CET Martin Vogel <vogel@inttec.de>

   + contrib/libct/atrepl.c
     ! ATREPL() function with !new! 6th parameter

   + contrib/libct/charlist.c
     ! CHARLIST(), CHARNOLIST() function
     + CHARSLIST() sorted character list  !New function!
     + CHARHIST()  character histogram    !New function!

   * contrib/libct/Makefile
     + added atrepl.c
     + added charlist.c

   * contrib/libct/makefile.bc
     + added atrepl.c
     + added charlist.c

   * contrib/libct/makefile.vc
     + added atrepl.c
     + added charlist.c

   * contrib/libct/readme.txt
     ! enhancement list updated !

   * contrib/libct/ctflist.txt
     ! function status list updated !

   + contrib/libct/tests/atrepl.prg
     ! test program for the ATREPL() function

   + contrib/libct/tests/charlist.prg
     ! test program for the CHARLIST() function

   + contrib/libct/tests/charnlst.prg
     ! test program for the CHARNOLIST() function

   + contrib/libct/tests/charslst.prg
     ! test program for the new CHARSLIST() function

   + contrib/libct/tests/charhist.prg
     ! test program for new CHARHIST() function

   * contrib/libct/tests/Makefile
     + added atrepl.prg
     + added charlist.prg
     + added charnlst.prg
     + added charslst.prg
     + added charhist.prg

   * contrib/libct/ctflist.txt
     ! function status list updated !

2001-04-27 22:30 UTC-0400 David G. Holm <dholm@jsd-llc.com>

  * doc/en/input.txt
  * include/hbapigt.h
  + include/hbinkey.ch
  * include/inkey.ch
  * source/rtl/gtapi.c
  * source/rtl/inkey.c
  * source/rtl/gt_tpl/gt_tpl.c
  * source/rtl/gtcgi/gtcgi.c
  * source/rtl/gtcrs/kbdcrs.c
  * source/rtl/gtdos/gtdos.c
  * source/rtl/gtos2/gtos2.c
  * source/rtl/gtpca/gtpca.c
  * source/rtl/gtsln/kbsln.c
  * source/rtl/gtstd/gtstd.c
  * source/rtl/gtwin/gtwin.c
  * tests/inkeytst.prg
    + Added a new HB_INKEY_EXTENDED mode that extends the number of
      unique keys that Harbour can distinguish between. The first
      implementation is for gtwin only, so the gtapi has a new API
      function that the inkey.c module uses to determine if the GT
      module supports the new HB_INKEY_EXTENDED mode. This way, it
      is not necessary to convert all GT drivers to support the new
      input mode at the same time. The new GT API function is named
      hb_gtExtendedKeySupport() and returns zero if the new mode is
      not supported or non-zero if the new extended mode is supported.
    * The INKEY() family of functions defaults to the normal Clipper-
      compatible key code mode. In order to use the extended code mode,
      you either need to set the global input mask to include the new
      HB_INKEY_EXTENDED value or include it in the second parameter for
      INKEY() and the new optional NEXTKEY() and LASTKEY() parameter.
    + A GT driver that supports extended key code mode must *always* use
      extended key codes. A new translation function in inkey.c is used
      to translate between extended and normal key codes when the new
      HB_INKEY_EXTENDED mode is not in use.
    + The new hbinkey.ch module defines and documents the new extended
      mode key codes, which are not compatible with the normal codes
      (with the obvious exception of character codes 0 through 255).
      These manifest constants use the HB_ prefix and are also defined
      for many duplicate codes (such as HB_K_CTRL_A, HB_ENTER, etc.)
    + Extended key codes consist of the PC keyboard scan code and one
      or more offset values. If no keyboard modifier was used, then
      HB_INKEY_NONE is added. The Alt key adds HB_INKEY_ALT, the Ctrl
      key adds HB_INKEY_CTRL, the Shift key adds HB_INKEY_SHIFT, and
      enhanced keys (KeyPad+/ and CursorPad keys) add HB_INKEY_ENHANCED.
      For example, F1 is scan code 59, so if you just press F1, you get
      key code 315, but Alt+F1 gives 443, Ctrl+F1 gives 571, and Shift+
      F1 gives 699. And NumPad+/ gives 1077, 1205, 1333, and 1461. At
      this time, the only value that can combine with other values is
      HB_INKEY_ENHANCED (i.e., there are no Alt+Ctl combinations, etc.)
    + Note: The extended key code set is larger than the normal key code
      set. As a result, if you switch between the normal and extended
      modes, you need to be aware that some codes get translated into a
      zero in normal mode (because there is no corresponding code in
      normal mode) and that these codes get removed from the keyboard
      input buffer in normal mode and you won't be able to go back and
      fetch them later in extended mode.
    + In order to allow testing the new extended mode, the inkeytst.prg
      module has been extended to interpret the second parameter. If it
      is not present, then normal mode is used. If it starts with an "R"
      (or "r"), then raw mode is used. Otherwise, extended mode is used.

2001-04-27 15:00 UTC-0400 David G. Holm <dholm@jsd-llc.com>

  * include/achoice.ch
  * include/assert.ch
  * include/box.ch
  * include/button.ch
  * include/color.ch
  * include/common.ch
  * include/dbedit.ch
  * include/dbstruct.ch
  * include/directry.ch
  * include/error.ch
  * include/getexit.ch
  * include/hbapigt.h
  * include/hbapirdd.h
  * include/hbdefs.h
  * include/inkey.ch
  * include/memoedit.ch
  * include/ord.ch
  * include/rddsys.ch
  * include/reserved.ch
  * include/setcurs.ch
  * include/simpleio.ch
  * include/std.ch
    * Changed the license in all "anonymous" include files from the
      old license to the new one.

2001-04-26 22:10 GMT+3 Alexander Kresin <alex@belacy.belgorod.su>
   * contrib/mysql/mysql.c
     + added functions sqlHostInfo(), sqlSrvInfo()
   * source/rdd/dbfntx/dbfntx1.c
     * implemented seek for numeric and date indexes

2001-04-26 14:00 GMT+1 Antonio Linares <alinares@fivetech.com>
   * source/vm/debug.c
      ! __VMSTKLCOUNT( <nProcLevel> ) enhanced to accept a nProcLevel.

2001-04-26 14:00 CET Martin Vogel <vogel@inttec.de>

  + contrib/libct/asciisum.c
    + asciisum() function

  + contrib/libct/ascpos.c
    + ascpos() and valpos() function

  * contrib/libct/Makefile
    + added contrib/libct/asciisum.c
    + added contrib/libct/ascpos.c

  * contrib/libct/makefile.bc
    + added contrib/libct/asciisum.c
    + added contrib/libct/ascpos.c

  * contrib/libct/makefile.vc
    + added contrib/libct/asciisum.c
    + added contrib/libct/ascpos.c

  * contrib/libct/ctflist.txt
    * changed status of functions mentioned above

  + contrib/libct/tests/asciisum.prg
  + contrib/libct/tests/ascpos.prg
  + contrib/libct/tests/valpos.prg
    ! small test programs for new functions

  * contrib/libct/tests/Makefile
    + added contrib/libct/tests/asciisum.prg
    + added contrib/libct/tests/ascpos.prg
    + added contrib/libct/tests/valpos.prg

2001-04-26 01:15 UTC-0800 Brian Hays <bhays@abacuslaw.com>

   * source/rdd/dbcmd.c
      * __dbLocate wasn't freeing mem blocks if dataset was empty
      * added ordKeyCount
      * formatted comments
      * removed HB_SYMBOL_UNUSED( bRest ); since it's used now
      * Fixed logic in __dbCopy for only having a For clause
         (it was failing to copy if first record failed test)
      Harrier - please review my change to bFor/pFor testing

   * contrib/rdd_ads/adsfunc.c
      + Added ADSGETFILTER() for retrieving what ADS thinks the
         filter is

   * contrib/rdd_ads/ads1.c
      * fixed dbOrderInfo(DBOI_KEYCOUNT) when no scope was set
         (was returning 0)

   * contrib/rdd_ads/adsmgmnt.c
      * removed unneeded headers

   * source/rtl/dummy.prg
      * removed ordKeyCount

2001-04-25 17:51 GMT-3 Horacio Roldan <horacioroldan@usa.net>
   *source/rdd/workarea.c
     * patched GPF using valResult.

2001-04-25 20:08 GMT+1 Antonio Linares <alinares@fivetech.com>
   * source/vm/debug.c
      ! __VMPARLLIST( <nProcLevel> ) enhanced to accept a nProcLevel.

2001-04-21 22:59 GMT+2 Maurilio Longo <maurilio.longo@libero.it>
   * source/rtl/memoedit.prg
      ! fixed error when UserFunction is a logical value.

2001-04-20 18:15 UTC-0400 David G. Holm <dholm@jsd-llc.com>

  * source/rtl/disksphb.c
    % Fixed errors in EG_OPEN error generation.

2001-04-20 18:05 UTC-0400 David G. Holm <dholm@jsd-llc.com>

  + include/hb_io.h
  * source/common/hbtrace.c
  * source/rtl/console.c
  * source/rtl/dir.c
  * source/rtl/disksphb.c
  * source/rtl/filesys.c
  * source/rtl/gtapi.c
    + Instead of using #include <io.h> and/or messy #ifdef blocks to
      include <unistd.h> and/or <io.h>, just use #include "hb_io.h"
      (based on an idea from Dave Pearson).

2001-04-20 19:00 GMT+3 Alexander Kresin <alex@belacy.belgorod.su>
   * contrib/libmisc/dbftools.c
     * fieldtype() fixed accordingly to RDD changes
   * contrib/mysql/mysql.c
     * sqlConnect() fixed for version older than 3.22.34
     + added support for mysql_affected_rows() and mysql_field_count()
   * tests/db_brows.ch
   * tests/db_brows.prg
     * some improvements


2001-04-20 16:30 CET Martin Vogel <vogel@inttec.de>

  + contrib/libct/charop.c
    + charadd(), charand(), charor(), charxor(), charnot() and
      (NEW!) charsub(), charshl(), charshr(), charrll() and charrlr() functions

  * contrib/libct/Makefile
    + added contrib/libct/charop.c

  * contrib/libct/makefile.bc
    + added contrib/libct/charop.c

  * contrib/libct/makefile.vc
    + added contrib/libct/charop.c

  * contrib/libct/ctflist.txt
    * changed status of functions mentioned above

  * contrib/libct/readme.txt
    + added comments for new functions

  + contrib/libct/tests/charadd.prg
  + contrib/libct/tests/charand.prg
  + contrib/libct/tests/charor.prg
  + contrib/libct/tests/charnot.prg
  + contrib/libct/tests/charxor.prg
  + contrib/libct/tests/charsub.prg
  + contrib/libct/tests/charshl.prg
  + contrib/libct/tests/charshr.prg
  + contrib/libct/tests/charrll.prg
  + contrib/libct/tests/charrlr.prg
    ! small test programs for new functions

  * contrib/libct/tests/Makefile
    + added contrib/libct/tests/charadd.prg
    + added contrib/libct/tests/charand.prg
    + added contrib/libct/tests/charor.prg
    + added contrib/libct/tests/charnot.prg
    + added contrib/libct/tests/charxor.prg
    + added contrib/libct/tests/charsub.prg
    + added contrib/libct/tests/charshl.prg
    + added contrib/libct/tests/charshr.prg
    + added contrib/libct/tests/charrll.prg
    + added contrib/libct/tests/charrlr.prg

2001-04-20 15:04 GMT+2 Maurilio Longo <maurilio.longo@libero.it>
   * source/rtl/memoedit.prg
      * simplified handling of keys and prevented infinite recursion when a key not
        handled by TEditor was pressed inside a MemoEdit() window.
      * ME_TOGGLESCROLL is not handled since TEditor cannot handle such a kind of "movement"
      * K_CTRL_T (delete word right) is not handled since TEditor is not able to do it

2001-04-20 11:09 GMT+2 Maurilio Longo <maurilio.longo@libero.it>
   * source/rtl/memoedit.prg
      ! fixed handling of K_ALT_W

2001-04-20 10:50 CET Martin Vogel <vogel@inttec.de>

  + contrib/libct/charevod.c
  - contrib/libct/ctchrevn.c
  - contrib/libct/ctchrodd.c
    ! CHAREVEN() & CHARODD() functions merged to one file, some corrections

  * contrib/libct/Makefile
    * changed lib name to "ct3" again (sorry !)
    + added contrib/libct/charevod.c
    - removed contrib/libct/ctchrevn.c
    - removed contrib/libct/ctchrodd.c

  * contrib/libct/makefile.bc
    * changed lib name to "ct3" again (sorry !)
    + added contrib/libct/charevod.c
    - removed contrib/libct/ctchrevn.c
    - removed contrib/libct/ctchrodd.c

  * contrib/libct/makefile.vc
    * changed lib name to "ct3" again (sorry !)
    + added contrib/libct/charevod.c
    - removed contrib/libct/ctchrevn.c
    - removed contrib/libct/ctchrodd.c

  + contrib/libct/tests/chareven.prg
    ! Small test program for chareven()

  + contrib/libct/tests/charodd.prg
    ! Small test program for charodd()

  * contrib/libct/tests/Makefile
    + added contrib/libct/tests/chareven.prg
    + added contrib/libct/tests/charodd.prg

2001-04-20 01:35 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * hb_slex.bc
     * Synched with makefile.bc

   * source/common/hbtrace.c
     + Added missing #include <io.h>

   * include/hbapilng.h
   * source/rtl/langapi.c
     * Corrected declaration of hb_langDGetItem() (required for C++)

2001-04-19 17:10 UTC-0400 David G. Holm <dholm@jsd-llc.com>

  * hb_slex.bc
  * hb_slex.vc
  * makefile.bc
  * makefile.vc
  * doc/funclist.txt
  * source/rtl/Makefile
  * source/rtl/dbdelim.prg
  + source/rtl/dbsdf.prg
  * source/rtl/dummy.prg
  * tests/Makefile
  + tests/sdf_test.prg
    + Added __dbSDF() with support for COPY TO SDF.
    + Added dbdelim.obj to makefile.vc.
    * Fixed CVS ID header in dbdelim.prg.
    * Changed name of Export() function in dbdelim.prg to ExportVar()

2001-04-19 15:07 GMT+2 Maurilio Longo <maurilio.longo@libero.it>
   * source/rtl/teditor.prg
     ! regression from previous fix

2001-04-19 14:43 GMT+2 Maurilio Longo <maurilio.longo@libero.it>
   * source/rtl/teditor.prg
     ! fixed handling of K_ESC and K_ALT_W
   * source/rtl/memoedit.prg
      ! fixed handling of K_ESC and K_ALT_W

2001-04-19 01:30 UTC-0800 Brian Hays <bhays@abacuslaw.com>
   * source/rdd/dbcmd.c
      * Harrier's latest fix for __dbCopy, plus my HB_TRACE addition

   * contrib/rdd_ads/adsfunc.c
      + added AdsIsServerLoaded(), AdsApplicationExit ()

   * source/rtl/memoline.c
      * fixed bug where chr(0) was returned if source was
         an empty string.

   * source/common/hbtrace.c
      * added support for HB_TR_FLUSH Environment variable per
         David's guidance.  (Thanks, David!)
            SET HB_TR_FLUSH=1
         ...Will cause all HB_TRACE calls to flush to disk (when
         redirecting to file) so you can trace right up to a line
         that gpfs and not lose buffered output.

2001-04-18 21:15 UTC-0400 David G. Holm <dholm@jsd-llc.com>

  * source/rtl/dbdelim.prg
    * Completed the code needed for COPY TO DELIMITED

  * source/rtl/errorsys.prg
    + Temporarily added a QOUT() ahead of displaying the error
      message in DEFERROR(), because unless the screen has been
      scrolled while the program was running, the DOS prompt will
      overwrite the first line of the error trace after quitting.

  * source/rtl/langapi.c
    + Added Harbour methods to get language specific error messages
      and language specific general messages.

  * tests/Makefile
  + tests/delimtst.prg
    + New module to test COPY TO DELIMITED and APPEND FROM DELIMITED.

2001-04-18 17:40 UTC-0400 David G. Holm <dholm@jsd-llc.com>

  * source/rdd/dbf1.c
    % Changed two (unsigned chr *) type overrides to (BYTE *),
      because the function called requires a BYTE * parameter
      when used with C++.

  * source/rtl/gtos2/gtos2.c
    % Changed two (void *) type overrides to (PPVOID), because
      the function called requires a PPVOID parameter when used
      with C++.
    % Added definition for KBDTRF_EXTENDED_CODE when using VAC++.

2001-04-18 22:30 CET Martin Vogel <vogel@inttec.de>
   + contrib/libct/ctflist.txt
     ! function status list, only functions in the CVS are marked 'R' or 'S' !

   + contrib/libct/atadjust.c
     ! ATADJUST() function

   * contrib/libct/Makefile
     + added atadjust.c

   * contrib/libct/makefile.bc
     + added atadjust.c

   * contrib/libct/makefile.vc
     + added atadjust.c

   + contrib/libct/tests/atadjust.prg
     ! added tests for ATADJUST() function

   * contrib/libct/tests/Makefile
     + added atadjust.prg

2001-04-18 15:50 CET Martin Vogel <vogel@inttec.de>
   * contrib/libct/makefile.bc
     ! Corrected a typo

2001-04-18 01:30 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * source/vm/arrays.c
     ! Corrected a minor typo, that could cause some un-released memory on some occasions.

2001-04-17 23:55 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * include/hbapi.h
     * Removed 3rd paramater from declaration of hb_arrayClone().

   * source/vm/arrays.c
     ! Optimized and improved hb_arrayClone().

   * source/vm/arrayshb.c
   * source/vm/classes.c
   * source/vm/hvm.c
     * Changed calls to hb_arrayClone() to remove no longer needed, 3rd parameter.

2001-04-17 19:30 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * include/hbapi.h
     + Added typedef struct HB_NESTED_CLONED
     * Changed declaration of hb_arrayClone to hb_arrayClone( PHB_ITEM pArray, PHB_NESTED_CLONED pClonedList, BOOL *bCyclic )

   * source/vm/arrays.c
     ! Fixed hb_arrayClone() to correctly clone any array including RELATIVE Ciclic Referncing of any level.

   * source/vm/arrayshb.c
   * source/vm/classes.c
   * source/vm/hvm.c
     * Changed calls to hb_arrayClone() to pass 2 additional NULLs as 2nd. and 3rd. parameters.

2001-04-17 17:15 UTC-0400 David G. Holm <dholm@jsd-llc.com>
  * hb_slex.bc
  * hb_slex.vc
  * makefile.bc
  * makefile.vc
  * doc/funclist.txt
  * source/rtl/Makefile
  + source/rtl/dbdelim.prg
  * source/rtl/dummy.prg
    + Added __dbDelim() function for use by COPY TO DELIMITED.
      FIELD, NEXT, FOR, and WHILE clauses are implemented, but I
      don't know what the first and last two parameters are for.

2001-04-17 21:30 CET Martin Vogel <vogel@inttec.de>
   + contrib/libct/atnum.c
     + AFTERATNUM() function
     + BEFORATNUM() function
     + ATNUM()      function

   * contrib/libct/Makefile
     * changed library name to libct
     + added atnum.c
   * contrib/libct/makefile.bc
     * changed library name to libct
     + added atnum.c
   * contrib/libct/makefile.vc
     * changed library name to libct
     + added atnum.c

   + contrib/libct/tests/afteratn.prg
   + contrib/libct/tests/atnum.prg
   + contrib/libct/tests/beforatn.prg

   * contrib/libct/tests/Makefile
     + added afteratn.prg
     + added atnum.prg
     + added beforatn.prg

   * contrib/libct/ct.ch
     * error correction

2001-04-17 10:35 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * source/vm/arrays.c
     ! Fixed GPF when aCloning an Array with circular refrences to itself.

2001-04-17 18:40 CET Martin Vogel <vogel@inttec.de>
   * contrib/libct/readme.txt
     + Added paragraph for enhancements over original CT3 library

   + contrib/libct/addascii.c

   * contrib/libct/Makefile
     + added addascii.c

   * contrib/libct/makefile.vc
     + added addascii.c

   * contrib/libct/makefile.bc
     + added addascii.c

   + contrib/libct/tests
   + contrib/libct/tests/Makefile
   + contrib/libct/tests/csetref.prg
   + contrib/libct/tests/csetatmu.prg
   + contrib/libct/tests/setatlik.prg
   + contrib/libct/tests/addascii.prg

2001-04-17 17:55 CET Martin Vogel <vogel@inttec.de>
   + contrib/libct/ct.ch
   + contrib/libct/ct.h
   + contrib/libct/ctset.c
   + contrib/libct/ctset.h
   + contrib/libct/ctstr.c
   + contrib/libct/ctstr.h
   * contrib/libct/Makefile
     + added ctset.c
     + added ctstr.c
   * contrib/libct/makefile.vc
     + added ctset.c
     + added ctstr.c
   * contrib/libct/makefile.bc
     + added ctset.c
     + added ctstr.c

2001-04-17 02:50 GMT-3 Horacio Roldan <horacioroldan@usa.net>
   *source/rdd/dbfcdx/dbfcdx1.c
     * fixed some warnings
     * fixed bug with pathname in hb_cdxOrderCreate

2001-04-16 14:40 UTC-0800 Ron Pinkas <ron@profit-master.com>
   * source/compiler/harbour.c
     + Added all GET Methods definitions (still need Exported Vars ) - Thanks to Luiz.
     + Added TBCOLUMN definitions - Thanks to Luiz.

   * source/rtl/tget.prg
     ! Correted :ToDecPos to return SELF as in Clipper (after verifying there was NO Low-Level Code conflict).

2001-04-16 11:45 UTC-0800 Brian Hays <bhays@abacuslaw.com>
   * source/rdd/dbcmd.c
      Uploaded Harrier's fix for COPY TO ... FIELDS
   * include/hbmemory.ch
   * source/vm/fm.c
      + added HB_MEM_STACK_TOP     1005
      Total items currently on the stack
      This is useful in stack debugging; shows the actual TopOffset
      even after allocations have been made and items popped off.

2001-04-15 00:05 GMT -3 Luiz Rafael Culik
    *Changelog
       *Renamed to ChangeLog.010 and started an new one
     *util/hbdoc/*.prg
      utils/hbdoc/*.ch
        *updated to the new licence

   * source/pp/pragma.c
   * contrib/dot/pp_harb.ch
   * tests/inline_c.prg
     * STOPDUMP renamed as ENDDUMP (with Ron permission)

2001-12-21 08:40 UTC-0300 Luiz Rafael Culik <culik@sl.conex.net>
   * utils/hbmake/hbmake.prg
    * small fix

2001-12-21 07:50 UTC-0300 Luiz Rafael Culik <culik@sl.conex.net>
  * source/rtl/filesys.c
    * hb_fsmkdir,hb_fsChdir,hb_fsRmdir,hb_fsDelete,hb_fsRename,hb_fsCurdirBuff()
      now use Win32 API calls
   * utils/hbmake/hbmake.prg
     ! Disabled profile
   * utils/hbmake/hbmutils.prg
     * An small clean up
   * ChangeLog
     * Renamed to ChangeLog.012 and started an new one
2006-02-15 13:50 UTC+0100 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/source/vm/hvm.c
    ! fixed memory leak I introduced changing Ryszard modifications

      need such functionality yet
  + harbour/ChangeLog.015
  * harbour/source/vm/debug.c

  * harbour/harbour.spec
  * harbour/bin/hb-func.sh
    * some modification in xhb* scripts building - adding passing
      predefined compiler and linker switches
  * harbour/source/vm/hvm.c
    * minor code cleanup

2006-09-03 18:55 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/include/hbapicls.h
  * harbour/source/vm/classes.c
  * harbour/source/vm/hvm.c
  * harbour/tests/overload.prg
    + added support for overloading [] in assignment operation

2006-09-03 16:30 UTC+0200 Przemyslaw Czerpak (druzus/at/priv.onet.pl)
  * harbour/ChangeLog
  + harbour/ChangeLog.016
    * new ChangeLog file created
  * harbour/include/hbver.h
    * updated version number to 0.47.0
  * tagged CVS as build47
