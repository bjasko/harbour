// INCL.och oszt ly implement ci¢.
// Gener lva: 1999.06.10, 14:39:57, OBJCCC  v2.2.03
// Meta oszt ly defin¡ci¢: Van


#ifndef CA_OBJECT_N
#ifdef _STRICT_PARENT_
#ifdef _CA_CM_ONLY_
#include "OBJECT.och"
#else // _CA_CM_ONLY_
#define _CA_CM_ONLY_
#include "OBJECT.och"
#undef _CA_CM_ONLY_
#endif // _CA_CM_ONLY_
#else
#include "OBJECT.och"
#endif // _STRICT_PARENT_
#endif // CA_OBJECT_N

#ifndef _CA_CM_ONLY_
#ifndef _INCL_OCH_
#define _INCL_OCH_




#xtranslate INCL.<obj>:oinit            => (OBJGEN.(<obj>):(4))
#xtranslate INCL.<obj>:getclass         => (OBJGEN.(<obj>):(5))
#xtranslate INCL.<obj>:isclass          => (OBJGEN.(<obj>):(6))
#xtranslate INCL.<obj>:getattrib        => (OBJGEN.(<obj>):(7))
#xtranslate INCL.<obj>:setattrib        => (OBJGEN.(<obj>):(8))


#xtranslate INCL.<obj>:lreader          => <obj>\[CA_OBJECT_N+1\]
#xtranslate INCL.<obj>:includelist      => <obj>\[CA_OBJECT_N+2\]
#xtranslate INCL.<obj>:maxincldeep      => <obj>\[CA_OBJECT_N+3\]

// Specifik lva: openincludefile(filename)
// ™r”k”lve: oinit(lreader,includeList,maxInclDeep)

#xtranslate INCL.<obj>:openincludefile  => (OBJGEN.(<obj>):(CM_OBJECT_N+1))
// ™r”k”lve: oinit(lreader,includeList,maxInclDeep)

#endif // _INCL_OCH_
#endif // _CA_CM_ONLY_

#ifndef CA_INCL_N
#define CA_INCL_N             CA_OBJECT_N+3
#define CM_INCL_N             CM_OBJECT_N+1
#endif // CA_INCL_N

#ifndef _CA_CM_ONLY_
#ifndef _INCLCLASS_OCH_
#define _INCLCLASS_OCH_

**********************************************************************
#xtranslate C.INCL:<m> => (INCLCLASS.clINCL():<m>)
#xtranslate C.INCL:self() => (clINCL())


#xtranslate INCLCLASS.<obj>:parent           => <obj>\[CA_OBJECT_N+1\]
#xtranslate INCLCLASS.<obj>:name             => <obj>\[CA_OBJECT_N+2\]
#xtranslate INCLCLASS.<obj>:objsize          => <obj>\[CA_OBJECT_N+3\]
#xtranslate INCLCLASS.<obj>:attribs          => <obj>\[CA_OBJECT_N+4\]
#xtranslate INCLCLASS.<obj>:methods          => <obj>\[CA_OBJECT_N+5\]
#xtranslate INCLCLASS.<obj>:classid          => <obj>\[CA_OBJECT_N+6\]
#xtranslate INCLCLASS.<obj>:parentclassids   => <obj>\[CA_OBJECT_N+7\]
#xtranslate INCLCLASS.<obj>:amblock          => <obj>\[CA_OBJECT_N+8\]
#xtranslate INCLCLASS.<obj>:methodsblock     => <obj>\[CA_OBJECT_N+9\]
#xtranslate INCLCLASS.<obj>:objmethodsimplement  => <obj>\[CA_OBJECT_N+10\]


#xtranslate INCLCLASS.<obj>:oinit            => (OBJGEN.(<obj>):(4))
#xtranslate INCLCLASS.<obj>:getclass         => (OBJGEN.(<obj>):(5))
#xtranslate INCLCLASS.<obj>:isclass          => (OBJGEN.(<obj>):(6))
#xtranslate INCLCLASS.<obj>:getattrib        => (OBJGEN.(<obj>):(7))
#xtranslate INCLCLASS.<obj>:setattrib        => (OBJGEN.(<obj>):(8))
#xtranslate INCLCLASS.<obj>:onew             => (OBJGEN.(<obj>):(CM_OBJECT_N+1))
#xtranslate INCLCLASS.<obj>:ocreate          => (OBJGEN.(<obj>):(CM_OBJECT_N+2))
#xtranslate INCLCLASS.<obj>:rawoinit         => (OBJGEN.(<obj>):(CM_OBJECT_N+3))
#xtranslate INCLCLASS.<obj>:oinitclass       => (OBJGEN.(<obj>):(CM_OBJECT_N+4))
#xtranslate INCLCLASS.<obj>:getmethodsimplement  => (OBJGEN.(<obj>):(CM_OBJECT_N+5))
#xtranslate INCLCLASS.<obj>:attribidx        => (OBJGEN.(<obj>):(CM_OBJECT_N+6))
#xtranslate INCLCLASS.<obj>:needclassid      => (OBJGEN.(<obj>):(CM_OBJECT_N+7))
#xtranslate INCLCLASS.<obj>:isinheritfrom    => (OBJGEN.(<obj>):(CM_OBJECT_N+8))



// ™r”k”lve: onew(lreader,includeList,maxInclDeep)

// ™r”k”lve: onew(lreader,includeList,maxInclDeep)

#endif // _INCLCLASS_OCH_
#endif // _CA_CM_ONLY_

#ifndef CA_INCLCLASS_N
#define CA_INCLCLASS_N             CA_BEHAVIOR_N+0
#define CM_INCLCLASS_N             CM_BEHAVIOR_N+0
#endif // CA_INCLCLASS_N


**********************************************************************
#ifdef _INCL_PRG_
#ifndef _INCL_PRG_OCH_
#define _INCL_PRG_OCH_


**********************************************************************
#xtranslate othis:<m> => INCL.(othis):<m>
#xtranslate thisclass:<m> => INCLCLASS.(this:getClass()):<m>
#define CTHIS INCL


**********************************************************************
#xtranslate this:<m> => INCL.(this):<m>

#xcommand implement openincludefile(filename) => ;
                    static function openincludefile(this,filename)
#xcommand implement oinit(lreader,includeList,maxInclDeep) => ;
                    static function oinit(this,lreader,includeList,maxInclDeep)

#ifdef _IMPLEMENT_EXPORT_
#xcommand implement export openincludefile(filename) => ;
                    function openincludefile(this,filename)
#xcommand implement export oinit(lreader,includeList,maxInclDeep) => ;
                    function oinit(this,lreader,includeList,maxInclDeep)
#endif // _IMPLEMENT_EXPORT_

#xtranslate super:oinit            => (OBJGENM.(eval(BEHAVIOR.clOBJECT():objmethodsimplement)).(this):(4))
#xtranslate super:getclass         => (OBJGENM.(eval(BEHAVIOR.clOBJECT():objmethodsimplement)).(this):(5))
#xtranslate super:isclass          => (OBJGENM.(eval(BEHAVIOR.clOBJECT():objmethodsimplement)).(this):(6))
#xtranslate super:getattrib        => (OBJGENM.(eval(BEHAVIOR.clOBJECT():objmethodsimplement)).(this):(7))
#xtranslate super:setattrib        => (OBJGENM.(eval(BEHAVIOR.clOBJECT():objmethodsimplement)).(this):(8))

**********************************************************************
static function setCMethods(pOsztaly)
// Egy t”mb”t felt”lt az oszt ly m–veleti blokkjaival.
   pOsztaly[(CM_OBJECT_N+1)]:={|this,filename| openincludefile(this,filename)}
   pOsztaly[(4)]:={|this,lreader,includeList,maxInclDeep| oinit(this,lreader,includeList,maxInclDeep)}
return pOsztaly

**********************************************************************
static function setCams(ta,tm)
// Egy t”mb”t felt”lt az oszt ly  ltal def. objektumok attrib£tumaival ‚s m–veleteivel.
   ta[CA_OBJECT_N+1-CA_NIL_N] := {CA_OBJECT_N+1,'lreader', }
   ta[CA_OBJECT_N+2-CA_NIL_N] := {CA_OBJECT_N+2,'includelist', }
   ta[CA_OBJECT_N+3-CA_NIL_N] := {CA_OBJECT_N+3,'maxincldeep', }

   tm[(CM_OBJECT_N+1)-CM_NIL_N] := {(CM_OBJECT_N+1),'openincludefile','filename',nil}
   tm[(4)-CM_NIL_N] := {(4),'oinit','lreader,includeList,maxInclDeep',nil}
return nil

#ifndef _NO_CLINCL_
#ifdef _STRICT_PARENT_
#ifdef _CA_CM_ONLY_
#include "meta.och"
#else // _CA_CM_ONLY_
#define _CA_CM_ONLY_
#include "meta.och"
#undef _CA_CM_ONLY_
#endif // _CA_CM_ONLY_
#else
#include "meta.och"
#endif // _STRICT_PARENT_
**********************************************************************
function clINCL()
// El“szedi az oszt lyt. (class)
static osztaly
   if (osztaly==nil)
      osztaly:=META.mcINCLCLASS():onew(;
                  clOBJECT(),;
                  "INCL",;
                  CA_INCL_N,;
                  CM_INCL_N,;
                  {|ta,tm|setCams(ta,tm)},;
                  {|t|setCMethods(t)})
   endif
return osztaly
#endif // _NO_CLINCL_

#ifndef _NO_INCLCLASS_

**********************************************************************
#xtranslate class:<m> => INCLCLASS.(class):<m>

#xcommand cimplement onew(lreader,includeList,maxInclDeep) => ;
                    static function onew(class,lreader,includeList,maxInclDeep)

#ifdef _IMPLEMENT_EXPORT_
#xcommand cimplement export onew(lreader,includeList,maxInclDeep) => ;
                    function onew(class,lreader,includeList,maxInclDeep)
#endif // _IMPLEMENT_EXPORT_

#xtranslate superclass:oinit            => (OBJGENM.(eval(BEHAVIOR.clBEHAVIOR():objmethodsimplement)).(class):(4))
#xtranslate superclass:getclass         => (OBJGENM.(eval(BEHAVIOR.clBEHAVIOR():objmethodsimplement)).(class):(5))
#xtranslate superclass:isclass          => (OBJGENM.(eval(BEHAVIOR.clBEHAVIOR():objmethodsimplement)).(class):(6))
#xtranslate superclass:getattrib        => (OBJGENM.(eval(BEHAVIOR.clBEHAVIOR():objmethodsimplement)).(class):(7))
#xtranslate superclass:setattrib        => (OBJGENM.(eval(BEHAVIOR.clBEHAVIOR():objmethodsimplement)).(class):(8))
#xtranslate superclass:onew             => (OBJGENM.(eval(BEHAVIOR.clBEHAVIOR():objmethodsimplement)).(class):(CM_OBJECT_N+1))
#xtranslate superclass:ocreate          => (OBJGENM.(eval(BEHAVIOR.clBEHAVIOR():objmethodsimplement)).(class):(CM_OBJECT_N+2))
#xtranslate superclass:rawoinit         => (OBJGENM.(eval(BEHAVIOR.clBEHAVIOR():objmethodsimplement)).(class):(CM_OBJECT_N+3))
#xtranslate superclass:oinitclass       => (OBJGENM.(eval(BEHAVIOR.clBEHAVIOR():objmethodsimplement)).(class):(CM_OBJECT_N+4))
#xtranslate superclass:getmethodsimplement  => (OBJGENM.(eval(BEHAVIOR.clBEHAVIOR():objmethodsimplement)).(class):(CM_OBJECT_N+5))
#xtranslate superclass:attribidx        => (OBJGENM.(eval(BEHAVIOR.clBEHAVIOR():objmethodsimplement)).(class):(CM_OBJECT_N+6))
#xtranslate superclass:needclassid      => (OBJGENM.(eval(BEHAVIOR.clBEHAVIOR():objmethodsimplement)).(class):(CM_OBJECT_N+7))
#xtranslate superclass:isinheritfrom    => (OBJGENM.(eval(BEHAVIOR.clBEHAVIOR():objmethodsimplement)).(class):(CM_OBJECT_N+8))

**********************************************************************
static function setMCMethods(pOsztaly)
// Egy t”mb”t felt”lt a metaoszt ly m–veleti blokkjaival.
   pOsztaly[(CM_OBJECT_N+1)]:={|class,lreader,includeList,maxInclDeep| onew(class,lreader,includeList,maxInclDeep)}
return pOsztaly

**********************************************************************
static function setMCams(ta,tm)
// Egy t”mb”t felt”lt a metaoszt ly  ltal def. objektumok attrib£tumaival ‚s m–veleteivel.

   tm[(CM_OBJECT_N+1)-CM_NIL_N] := {(CM_OBJECT_N+1),'onew','lreader,includeList,maxInclDeep',nil}
return nil

**********************************************************************
#ifndef _NO_MCINCLCLASS_
#ifdef _STRICT_PARENT_
#ifdef _CA_CM_ONLY_
#include "meta.och" // "metaclas.och" 
#else // _CA_CM_ONLY_
#define _CA_CM_ONLY_
#include "meta.och" // "metaclas.och" 
#undef _CA_CM_ONLY_
#endif // _CA_CM_ONLY_
#else
#include "meta.och" // "metaclas.och" 
#endif // _STRICT_PARENT_
function mcINCLCLASS()
// El“szedi az oszt ly metaoszt ly t. (metaclass)
static metaOsztaly
   if (metaOsztaly==nil)
      metaOsztaly:=META.clMETA():onew(;
                  clBEHAVIOR(),;
                  "INCLCLASS",;
                  CA_INCLCLASS_N,;
                  CM_INCLCLASS_N,;
                  {|ta,tm|setMCams(ta,tm)},;
                  {|t|setMCMethods(t)})
   endif
return metaOsztaly
#endif // _NO_MCINCLCLASS_

#endif // _NO_INCLCLASS_
#ifdef _IMPLEMENT_ONEW_
**********************************************************************
cimplement onew(lreader,includeList,maxInclDeep)
local o:=class:ocreate()

    INCL.o:oinit(lreader,includeList,maxInclDeep)
return o
#endif // _IMPLEMENT_ONEW_

**********************************************************************
#ifdef _IMPLEMENT_OINIT_
implement oinit(lreader,includeList,maxInclDeep)
    super:oinit()
return this
#endif // _IMPLEMENT_OINIT_

**********************************************************************
**********************************************************************
#endif // _INCL_PRG_OCH_
#endif // _INCL_PRG_
