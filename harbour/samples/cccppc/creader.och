// CREADER.och oszt ly implement ci¢.
// Gener lva: 1999.06.10, 14:39:56, OBJCCC  v2.2.03
// Meta oszt ly defin¡ci¢: Van


#ifndef CA_READER_N
#ifdef _STRICT_PARENT_
#ifdef _CA_CM_ONLY_
#include "READER.och"
#else // _CA_CM_ONLY_
#define _CA_CM_ONLY_
#include "READER.och"
#undef _CA_CM_ONLY_
#endif // _CA_CM_ONLY_
#else
#include "READER.och"
#endif // _STRICT_PARENT_
#endif // CA_READER_N

#ifndef _CA_CM_ONLY_
#ifndef _CREADER_OCH_
#define _CREADER_OCH_


#xtranslate CREADER.<obj>:name             => <obj>\[CA_OBJECT_N+1\]
#xtranslate CREADER.<obj>:errorstream      => <obj>\[CA_OBJECT_N+2\]
#xtranslate CREADER.<obj>:tbuffer          => <obj>\[CA_OBJECT_N+3\]


#xtranslate CREADER.<obj>:oinit            => (OBJGEN.(<obj>):(4))
#xtranslate CREADER.<obj>:getclass         => (OBJGEN.(<obj>):(5))
#xtranslate CREADER.<obj>:isclass          => (OBJGEN.(<obj>):(6))
#xtranslate CREADER.<obj>:getattrib        => (OBJGEN.(<obj>):(7))
#xtranslate CREADER.<obj>:setattrib        => (OBJGEN.(<obj>):(8))
#xtranslate CREADER.<obj>:read             => (OBJGEN.(<obj>):(CM_OBJECT_N+1))
#xtranslate CREADER.<obj>:unread           => (OBJGEN.(<obj>):(CM_OBJECT_N+2))
#xtranslate CREADER.<obj>:readtbuffer      => (OBJGEN.(<obj>):(CM_OBJECT_N+3))
#xtranslate CREADER.<obj>:arraytbuffer     => (OBJGEN.(<obj>):(CM_OBJECT_N+4))
#xtranslate CREADER.<obj>:readitem         => (OBJGEN.(<obj>):(CM_OBJECT_N+5))
#xtranslate CREADER.<obj>:iserror          => (OBJGEN.(<obj>):(CM_OBJECT_N+6))
#xtranslate CREADER.<obj>:adderror         => (OBJGEN.(<obj>):(CM_OBJECT_N+7))
#xtranslate CREADER.<obj>:destruct         => (OBJGEN.(<obj>):(CM_OBJECT_N+8))


#xtranslate CREADER.<obj>:line             => <obj>\[CA_READER_N+1\]
#xtranslate CREADER.<obj>:pos              => <obj>\[CA_READER_N+2\]

// ™r”k”lve: read()
// ™r”k”lve: unread(item)
// Specifik lva: getfile()
// Specifik lva: getline()
// Specifik lva: getpos()
// ™r”k”lve: oinit(name,errorStream)

// ™r”k”lve: read()
// ™r”k”lve: unread(item)
#xtranslate CREADER.<obj>:getfile          => (OBJGEN.(<obj>):(CM_READER_N+1))
#xtranslate CREADER.<obj>:getline          => (OBJGEN.(<obj>):(CM_READER_N+2))
#xtranslate CREADER.<obj>:getpos           => (OBJGEN.(<obj>):(CM_READER_N+3))
// ™r”k”lve: oinit(name,errorStream)

#endif // _CREADER_OCH_
#endif // _CA_CM_ONLY_

#ifndef CA_CREADER_N
#define CA_CREADER_N             CA_READER_N+2
#define CM_CREADER_N             CM_READER_N+3
#endif // CA_CREADER_N

#ifndef _CA_CM_ONLY_
#ifndef _CREADERCLASS_OCH_
#define _CREADERCLASS_OCH_

**********************************************************************
#xtranslate C.CREADER:<m> => (CREADERCLASS.clCREADER():<m>)
#xtranslate C.CREADER:self() => (clCREADER())


#xtranslate CREADERCLASS.<obj>:parent           => <obj>\[CA_OBJECT_N+1\]
#xtranslate CREADERCLASS.<obj>:name             => <obj>\[CA_OBJECT_N+2\]
#xtranslate CREADERCLASS.<obj>:objsize          => <obj>\[CA_OBJECT_N+3\]
#xtranslate CREADERCLASS.<obj>:attribs          => <obj>\[CA_OBJECT_N+4\]
#xtranslate CREADERCLASS.<obj>:methods          => <obj>\[CA_OBJECT_N+5\]
#xtranslate CREADERCLASS.<obj>:classid          => <obj>\[CA_OBJECT_N+6\]
#xtranslate CREADERCLASS.<obj>:parentclassids   => <obj>\[CA_OBJECT_N+7\]
#xtranslate CREADERCLASS.<obj>:amblock          => <obj>\[CA_OBJECT_N+8\]
#xtranslate CREADERCLASS.<obj>:methodsblock     => <obj>\[CA_OBJECT_N+9\]
#xtranslate CREADERCLASS.<obj>:objmethodsimplement  => <obj>\[CA_OBJECT_N+10\]


#xtranslate CREADERCLASS.<obj>:oinit            => (OBJGEN.(<obj>):(4))
#xtranslate CREADERCLASS.<obj>:getclass         => (OBJGEN.(<obj>):(5))
#xtranslate CREADERCLASS.<obj>:isclass          => (OBJGEN.(<obj>):(6))
#xtranslate CREADERCLASS.<obj>:getattrib        => (OBJGEN.(<obj>):(7))
#xtranslate CREADERCLASS.<obj>:setattrib        => (OBJGEN.(<obj>):(8))
#xtranslate CREADERCLASS.<obj>:onew             => (OBJGEN.(<obj>):(CM_OBJECT_N+1))
#xtranslate CREADERCLASS.<obj>:ocreate          => (OBJGEN.(<obj>):(CM_OBJECT_N+2))
#xtranslate CREADERCLASS.<obj>:rawoinit         => (OBJGEN.(<obj>):(CM_OBJECT_N+3))
#xtranslate CREADERCLASS.<obj>:oinitclass       => (OBJGEN.(<obj>):(CM_OBJECT_N+4))
#xtranslate CREADERCLASS.<obj>:getmethodsimplement  => (OBJGEN.(<obj>):(CM_OBJECT_N+5))
#xtranslate CREADERCLASS.<obj>:attribidx        => (OBJGEN.(<obj>):(CM_OBJECT_N+6))
#xtranslate CREADERCLASS.<obj>:needclassid      => (OBJGEN.(<obj>):(CM_OBJECT_N+7))
#xtranslate CREADERCLASS.<obj>:isinheritfrom    => (OBJGEN.(<obj>):(CM_OBJECT_N+8))



// ™r”k”lve: onew(name,errorStream)

// ™r”k”lve: onew(name,errorStream)

#endif // _CREADERCLASS_OCH_
#endif // _CA_CM_ONLY_

#ifndef CA_CREADERCLASS_N
#define CA_CREADERCLASS_N             CA_READERCLASS_N+0
#define CM_CREADERCLASS_N             CM_READERCLASS_N+0
#endif // CA_CREADERCLASS_N


**********************************************************************
#ifdef _CREADER_PRG_
#ifndef _CREADER_PRG_OCH_
#define _CREADER_PRG_OCH_


**********************************************************************
#xtranslate othis:<m> => CREADER.(othis):<m>
#xtranslate thisclass:<m> => CREADERCLASS.(this:getClass()):<m>
#define CTHIS CREADER


**********************************************************************
#xtranslate this:<m> => CREADER.(this):<m>

#xcommand implement read()         => static function read(this)
#xcommand implement unread(item)   => static function unread(this,item)
#xcommand implement getfile()      => static function getfile(this)
#xcommand implement getline()      => static function getline(this)
#xcommand implement getpos()       => static function getpos(this)
#xcommand implement oinit(name,errorStream) => ;
                    static function oinit(this,name,errorStream)

#ifdef _IMPLEMENT_EXPORT_
#xcommand implement export read()         => function read(this)
#xcommand implement export unread(item)   => function unread(this,item)
#xcommand implement export getfile()      => function getfile(this)
#xcommand implement export getline()      => function getline(this)
#xcommand implement export getpos()       => function getpos(this)
#xcommand implement export oinit(name,errorStream) => ;
                    function oinit(this,name,errorStream)
#endif // _IMPLEMENT_EXPORT_

#xtranslate super:oinit            => (OBJGENM.(eval(BEHAVIOR.clREADER():objmethodsimplement)).(this):(4))
#xtranslate super:getclass         => (OBJGENM.(eval(BEHAVIOR.clREADER():objmethodsimplement)).(this):(5))
#xtranslate super:isclass          => (OBJGENM.(eval(BEHAVIOR.clREADER():objmethodsimplement)).(this):(6))
#xtranslate super:getattrib        => (OBJGENM.(eval(BEHAVIOR.clREADER():objmethodsimplement)).(this):(7))
#xtranslate super:setattrib        => (OBJGENM.(eval(BEHAVIOR.clREADER():objmethodsimplement)).(this):(8))
#xtranslate super:read             => (OBJGENM.(eval(BEHAVIOR.clREADER():objmethodsimplement)).(this):(CM_OBJECT_N+1))
#xtranslate super:unread           => (OBJGENM.(eval(BEHAVIOR.clREADER():objmethodsimplement)).(this):(CM_OBJECT_N+2))
#xtranslate super:readtbuffer      => (OBJGENM.(eval(BEHAVIOR.clREADER():objmethodsimplement)).(this):(CM_OBJECT_N+3))
#xtranslate super:arraytbuffer     => (OBJGENM.(eval(BEHAVIOR.clREADER():objmethodsimplement)).(this):(CM_OBJECT_N+4))
#xtranslate super:readitem         => (OBJGENM.(eval(BEHAVIOR.clREADER():objmethodsimplement)).(this):(CM_OBJECT_N+5))
#xtranslate super:iserror          => (OBJGENM.(eval(BEHAVIOR.clREADER():objmethodsimplement)).(this):(CM_OBJECT_N+6))
#xtranslate super:adderror         => (OBJGENM.(eval(BEHAVIOR.clREADER():objmethodsimplement)).(this):(CM_OBJECT_N+7))
#xtranslate super:destruct         => (OBJGENM.(eval(BEHAVIOR.clREADER():objmethodsimplement)).(this):(CM_OBJECT_N+8))

**********************************************************************
static function setCMethods(pOsztaly)
// Egy t”mb”t felt”lt az oszt ly m–veleti blokkjaival.
   pOsztaly[(CM_OBJECT_N+1)]:={|this| read(this)}
   pOsztaly[(CM_OBJECT_N+2)]:={|this,item| unread(this,item)}
   pOsztaly[(CM_READER_N+1)]:={|this| getfile(this)}
   pOsztaly[(CM_READER_N+2)]:={|this| getline(this)}
   pOsztaly[(CM_READER_N+3)]:={|this| getpos(this)}
   pOsztaly[(4)]:={|this,name,errorStream| oinit(this,name,errorStream)}
return pOsztaly

**********************************************************************
static function setCams(ta,tm)
// Egy t”mb”t felt”lt az oszt ly  ltal def. objektumok attrib£tumaival ‚s m–veleteivel.
   ta[CA_READER_N+1-CA_NIL_N] := {CA_READER_N+1,'line',nil}
   ta[CA_READER_N+2-CA_NIL_N] := {CA_READER_N+2,'pos', }

   tm[(CM_OBJECT_N+1)-CM_NIL_N] := {(CM_OBJECT_N+1),'read','',nil}
   tm[(CM_OBJECT_N+2)-CM_NIL_N] := {(CM_OBJECT_N+2),'unread','item',nil}
   tm[(CM_READER_N+1)-CM_NIL_N] := {(CM_READER_N+1),'getfile','',nil}
   tm[(CM_READER_N+2)-CM_NIL_N] := {(CM_READER_N+2),'getline','',nil}
   tm[(CM_READER_N+3)-CM_NIL_N] := {(CM_READER_N+3),'getpos','',nil}
   tm[(4)-CM_NIL_N] := {(4),'oinit','name,errorStream',nil}
return nil

#ifndef _NO_CLCREADER_
#ifdef _STRICT_PARENT_
#ifdef _CA_CM_ONLY_
#include "meta.och"
#else // _CA_CM_ONLY_
#define _CA_CM_ONLY_
#include "meta.och"
#undef _CA_CM_ONLY_
#endif // _CA_CM_ONLY_
#else
#include "meta.och"
#endif // _STRICT_PARENT_
**********************************************************************
function clCREADER()
// El“szedi az oszt lyt. (class)
static osztaly
   if (osztaly==nil)
      osztaly:=META.mcCREADERCLASS():onew(;
                  clREADER(),;
                  "CREADER",;
                  CA_CREADER_N,;
                  CM_CREADER_N,;
                  {|ta,tm|setCams(ta,tm)},;
                  {|t|setCMethods(t)})
   endif
return osztaly
#endif // _NO_CLCREADER_

#ifndef _NO_CREADERCLASS_

**********************************************************************
#xtranslate class:<m> => CREADERCLASS.(class):<m>

#xcommand cimplement onew(name,errorStream) => ;
                    static function onew(class,name,errorStream)

#ifdef _IMPLEMENT_EXPORT_
#xcommand cimplement export onew(name,errorStream) => ;
                    function onew(class,name,errorStream)
#endif // _IMPLEMENT_EXPORT_

#xtranslate superclass:oinit            => (OBJGENM.(eval(BEHAVIOR.mcREADERCLASS():objmethodsimplement)).(class):(4))
#xtranslate superclass:getclass         => (OBJGENM.(eval(BEHAVIOR.mcREADERCLASS():objmethodsimplement)).(class):(5))
#xtranslate superclass:isclass          => (OBJGENM.(eval(BEHAVIOR.mcREADERCLASS():objmethodsimplement)).(class):(6))
#xtranslate superclass:getattrib        => (OBJGENM.(eval(BEHAVIOR.mcREADERCLASS():objmethodsimplement)).(class):(7))
#xtranslate superclass:setattrib        => (OBJGENM.(eval(BEHAVIOR.mcREADERCLASS():objmethodsimplement)).(class):(8))
#xtranslate superclass:onew             => (OBJGENM.(eval(BEHAVIOR.mcREADERCLASS():objmethodsimplement)).(class):(CM_OBJECT_N+1))
#xtranslate superclass:ocreate          => (OBJGENM.(eval(BEHAVIOR.mcREADERCLASS():objmethodsimplement)).(class):(CM_OBJECT_N+2))
#xtranslate superclass:rawoinit         => (OBJGENM.(eval(BEHAVIOR.mcREADERCLASS():objmethodsimplement)).(class):(CM_OBJECT_N+3))
#xtranslate superclass:oinitclass       => (OBJGENM.(eval(BEHAVIOR.mcREADERCLASS():objmethodsimplement)).(class):(CM_OBJECT_N+4))
#xtranslate superclass:getmethodsimplement  => (OBJGENM.(eval(BEHAVIOR.mcREADERCLASS():objmethodsimplement)).(class):(CM_OBJECT_N+5))
#xtranslate superclass:attribidx        => (OBJGENM.(eval(BEHAVIOR.mcREADERCLASS():objmethodsimplement)).(class):(CM_OBJECT_N+6))
#xtranslate superclass:needclassid      => (OBJGENM.(eval(BEHAVIOR.mcREADERCLASS():objmethodsimplement)).(class):(CM_OBJECT_N+7))
#xtranslate superclass:isinheritfrom    => (OBJGENM.(eval(BEHAVIOR.mcREADERCLASS():objmethodsimplement)).(class):(CM_OBJECT_N+8))

**********************************************************************
static function setMCMethods(pOsztaly)
// Egy t”mb”t felt”lt a metaoszt ly m–veleti blokkjaival.
   pOsztaly[(CM_OBJECT_N+1)]:={|class,name,errorStream| onew(class,name,errorStream)}
return pOsztaly

**********************************************************************
static function setMCams(ta,tm)
// Egy t”mb”t felt”lt a metaoszt ly  ltal def. objektumok attrib£tumaival ‚s m–veleteivel.

   tm[(CM_OBJECT_N+1)-CM_NIL_N] := {(CM_OBJECT_N+1),'onew','name,errorStream',nil}
return nil

**********************************************************************
#ifndef _NO_MCCREADERCLASS_
#ifdef _STRICT_PARENT_
#ifdef _CA_CM_ONLY_
#include "meta.och" // "metaclas.och" 
#else // _CA_CM_ONLY_
#define _CA_CM_ONLY_
#include "meta.och" // "metaclas.och" 
#undef _CA_CM_ONLY_
#endif // _CA_CM_ONLY_
#else
#include "meta.och" // "metaclas.och" 
#endif // _STRICT_PARENT_
function mcCREADERCLASS()
// El“szedi az oszt ly metaoszt ly t. (metaclass)
static metaOsztaly
   if (metaOsztaly==nil)
      metaOsztaly:=META.clMETA():onew(;
                  mcREADERCLASS(),;
                  "CREADERCLASS",;
                  CA_CREADERCLASS_N,;
                  CM_CREADERCLASS_N,;
                  {|ta,tm|setMCams(ta,tm)},;
                  {|t|setMCMethods(t)})
   endif
return metaOsztaly
#endif // _NO_MCCREADERCLASS_

#endif // _NO_CREADERCLASS_
#ifdef _IMPLEMENT_ONEW_
**********************************************************************
cimplement onew(name,errorStream)
local o:=class:ocreate()

    CREADER.o:oinit(name,errorStream)
return o
#endif // _IMPLEMENT_ONEW_

**********************************************************************
#ifdef _IMPLEMENT_OINIT_
implement oinit(name,errorStream)
    super:oinit()
return this
#endif // _IMPLEMENT_OINIT_

**********************************************************************
**********************************************************************
#endif // _CREADER_PRG_OCH_
#endif // _CREADER_PRG_
