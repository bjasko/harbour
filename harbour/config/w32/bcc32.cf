#
# $Id$
#
# The Harbour Project
# GNU MAKE file for Borland C/C++ 32bit (4.x, 5.x)

include $(TOP)$(ROOT)config/$(HB_ARCHITECTURE)/global.cf

OBJ_EXT = .obj
EXE_EXT = .exe
LIB_PREF =
LIB_EXT = .lib

CC = bcc32.exe
CC_IN = -c
CC_OUT = -o
CPPFLAGS = -I. -I$(HB_INC_COMPILE)
CFLAGS = -O2 -q -d -w -w-sig-

LD = bcc32.exe
LDFLAGS = -O2
LD_OUT = -e

# Add all libraries specified in CONTRIBS and LIBS.
ifeq ($(HB_LIB_COMPILE),)
LINKPATHS += -L$(LIB_DIR)
else
LINKPATHS += -L$(HB_LIB_COMPILE)
endif
LIBLIST = $(foreach lib, $(CONTRIBS), $(lib)$(LIB_EXT))
LIBLIST += $(foreach lib, $(LIBS), $(lib)$(LIB_EXT))

# If LIBS specifies the rdd library, add all DB drivers.
ifeq ($(findstring rdd,$(LIBS)),rdd)
LIBLIST += $(foreach drv, $(HB_DB_DRIVERS), $(drv)$(LIB_EXT))
endif

# Add the specified GT driver library
ifeq ($(findstring rtl,$(LIBS)),rtl)
LIBLIST += $(foreach gt, $(HB_GT_LIBS), $(gt)$(LIB_EXT))
endif

# It's probably not necessary in native Windows but I need it
# for my Linux box because -L<path> seems to not work with WINE
ifeq ($(HB_LIB_COMPILE),)
LINKLIBS += $(foreach lib, $(LIBLIST), $(LIB_DIR)/$(lib))
else
LINKLIBS += $(foreach lib, $(LIBLIST), $(HB_LIB_COMPILE)/$(lib))
endif

# HB_SCREEN_LIB: empty, or one of ncurses, slang
# HB_SCREEN_LIB=ncurses
# HB_SCREEN_LIB=slang

ifneq ($(HB_SCREEN_LIB),)
LINKLIBS += $(HB_SCREEN_LIB)
endif

# Add the optional user path(s)
ifneq ($(LNK_USR_PATH),)
LINKPATHS += $(foreach path, $(LNK_USR_PATH), -L$(path))
endif

# Add the optional user libarary (or libraries)
ifneq ($(LNK_USR_LIB),)
LINKLIBS += $(foreach lib, $(LNK_USR_LIB), $(lib)$(LIB_EXT))
endif

LDFLAGS = $(LINKPATHS)

AR = tlib.exe
ARFLAGS = $(A_USR)
AROBJS = $(foreach file, $(^F), -+$(file))
AR_RULE = $(AR) $(ARFLAGS) "$(subst /,\,$(LIB_DIR)/$@)" $(AROBJS),,

include $(TOP)$(ROOT)config/rules.cf
