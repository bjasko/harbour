/*
 * $Id$
 */

/*
 * The following parts are Copyright of the individual authors.
 * www - http://www.harbour-project.org
 *
 * Copyright 2000 Brian Hays <bhays@abacuslaw.com>
 *    Documentation
 *
 * See doc/license.txt for licensing terms.
 *
 */

/*  $DOC$
 *  $FUNCNAME$
 *     TClass()
 *  $CATEGORY$
 *     Classes
 *  $ONELINER$
 *     TClass() is used in the creation of all classes
 *  $SYNTAX$
 *     oClass := TClass():New("TMyClass")   </par>
 *        -or-   </par>
 *     TClass() is usually accessed by defining a class with the commands
 *     defined in hbclass.h:   </par>
 *        CLASS TGetList    // Calls TClass() to create the TGetList class   </par>
 *           ...     </par>
 *        ENDCLASS   </par>
 *  $ARGUMENTS$
 *      
 *  $RETURNS$
 *     An instance of the TClass Class. This special object's :New()
 *     method can then create the classes you define.   </par>
 *  $DESCRIPTION$
 *     TClass is a class that ...   </par>
 *     The class methods are as follows:   </par>
 *        New()                 Create a new instance of the class   </par>
 *  $EXAMPLES$
 *     FUNCTION TestObject()
 *     local oObject
 *
 *     oObject := TClass():New("TMyClass")
 *     oObject:End()
 *
 *     RETURN Nil
 *      </fixed>
 *  $STATUS$
 *     R
 *  $COMPLIANCE$
 *     Object Oriented syntax in Harbour is compatible with CA-CLIPPER.
 *     But Clipper only allowed creation of objects from a few standard
 *     classes, and did not let the programmer create new classes.
 *     In Harbour, you can create your own classes--complete with
 *     Methods, Instance Variables, Class Variables and Inheritance.
 *     Entire applications can be designed and coded in Object Oriented
 *     style.   </par>
 *  $PLATFORMS$
 *     All   </par>
 *  $SEEALSO$
 *     __objHasData(),Object Oriented Programming,CLASS
 *  $END$
 */
